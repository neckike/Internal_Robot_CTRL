ARM GAS  /tmp/ccYpac0Q.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"stm32f3xx_hal_uart.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  22              		.align	2
  23              		.thumb
  24              		.thumb_func
  26              	UART_EndTxTransfer:
  27              	.LFB167:
  28              		.file 1 "Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c"
   1:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
   2:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @file    stm32f3xx_hal_uart.c
   4:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter (UART) peripheral:
   8:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
  13:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   @verbatim
  14:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
  15:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
  17:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   [..]
  18:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  20:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  21:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  22:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  23:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) UART pins configuration:
  24:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  25:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  26:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  27:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  28:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  29:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  30:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) UART interrupts handling:
ARM GAS  /tmp/ccYpac0Q.s 			page 2


  31:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  32:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                 RXNE interrupt and Error Interrupts) are managed using the macros
  33:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                 __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit and receive 
  34:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  35:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  36:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  37:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  38:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  39:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  40:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  41:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  42:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  43:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  44:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  45:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  46:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  47:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  48:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  49:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  50:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         the HAL_UART_Init() API.
  51:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  52:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  53:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  54:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  55:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  56:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  57:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  58:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  59:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  60:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  61:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  62:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  63:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  64:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    [..]
  65:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (@) These APIs (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_MultiProcessor_Init(),
  66:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         also configure the low level Hardware (GPIO, CLOCK, CORTEX...etc) by
  67:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  68:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  69:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    [..]
  70:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    [..] Three operation modes are available within this driver :
  71:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
  72:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      *** Polling mode IO operation ***
  73:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      =================================
  74:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      [..]
  75:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit()
  76:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
  77:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  78:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      *** Interrupt mode IO operation ***
  79:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      ===================================
  80:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      [..]
  81:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT()
  82:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  83:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback
  84:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
  85:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  86:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT()
  87:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can
ARM GAS  /tmp/ccYpac0Q.s 			page 3


  88:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback
  89:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
  90:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
  91:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
  92:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
  93:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  94:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      *** DMA mode IO operation ***
  95:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      ==============================
  96:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      [..]
  97:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA()
  98:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  99:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback
 100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
 101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
 102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA()
 103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can
 104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback
 105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()
 110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()
 111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()
 112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      *** UART HAL driver macros list ***
 114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      =============================================
 115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      [..]
 116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral
 119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral
 120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      [..]
 126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros
 127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   @endverbatim
 129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ******************************************************************************
 130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @attention
 131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
 136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
 138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
 140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
 141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
 143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      without specific prior written permission.
 144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
ARM GAS  /tmp/ccYpac0Q.s 			page 4


 145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ******************************************************************************
 157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #include "stm32f3xx_hal.h"
 161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @addtogroup STM32F3xx_HAL_Driver
 163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART UART
 167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief UART HAL module driver
 168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #define UART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                                      USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8)) /*!< UART or U
 180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
 182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
ARM GAS  /tmp/ccYpac0Q.s 			page 5


 202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
 207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
 219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** ===============================================================================
 220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
 222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
 223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     in asynchronous mode.
 225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Baud Rate
 227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Word Length
 228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Stop Bit
 229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Parity
 230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Hardware flow control
 231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Receiver/transmitter modes
 232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Over Sampling Method
 233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) One-Bit Sampling Method
 234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) data logical level inversion
 237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) RX and TX pins swap
 238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) RX overrun detection disabling
 239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) DMA disabling on RX error
 240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) MSB first on communication line
 241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) auto Baud rate detection
 242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
 243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init()
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     API follow respectively the UART asynchronous, UART Half duplex, UART LIN mode and
 245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     multiprocessor configuration procedures (details for the procedures are available in reference 
 246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
 248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /*
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   Additional Table: If the parity is enabled, then the MSB bit of the data written
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                     in the data register is transmitted but is changed by the parity bit.
 254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                     According to device capability (support or not of 7-bit word length),
 255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                     frame length is either defined by the M bit (8-bits or 9-bits)
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                     or by the M1 and M0 bits (7-bit, 8-bit or 9-bit).
 257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                     Possible UART frame formats are as listed in the following table:
 258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccYpac0Q.s 			page 6


 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       Table 1. UART frame format.             
 260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |       M bit       |  PCE bit  |             UART frame                |
 262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |         0         |     0     |    | SB |    8-bit data   | STB |     |
 264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |         0         |     1     |    | SB | 7-bit data | PB | STB |     |
 266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |         1         |     0     |    | SB |    9-bit data   | STB |     |
 268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |         1         |     1     |    | SB | 8-bit data | PB | STB |     |
 270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    0    |    0    |     0     |    | SB |    8 bit data   | STB |     |
 274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    0    |    0    |     1     |    | SB | 7 bit data | PB | STB |     |
 276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    0    |    1    |     0     |    | SB |    9 bit data   | STB |     |
 278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    0    |    1    |     1     |    | SB | 8 bit data | PB | STB |     |
 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    1    |    0    |     0     |    | SB |    7 bit data   | STB |     |
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    1    |    0    |     1     |    | SB | 6 bit data | PB | STB |     |
 284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
 287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
 298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check the parameters */
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check the parameters */
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
ARM GAS  /tmp/ccYpac0Q.s 			page 7


 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Peripheral */
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check UART instance */
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccYpac0Q.s 			page 8


 373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Peripheral */
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle .
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param BreakDetectLength specifies the LIN break detection length.
 415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        This parameter can be one of the following values:
 416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the LIN UART instance */
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
ARM GAS  /tmp/ccYpac0Q.s 			page 9


 430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the Break detection length parameter */
 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->Init.OverSampling == UART_OVERSAMPLING_8)
 435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->Init.WordLength != UART_WORDLENGTH_8B)
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Peripheral */
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
ARM GAS  /tmp/ccYpac0Q.s 			page 10


 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Address UART node address (4-, 6-, 7- or 8-bit long).
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param WakeUpMethod specifies the UART wakeup method.
 495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        This parameter can be one of the following values:
 496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
 511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the wake up method parameter */
 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
ARM GAS  /tmp/ccYpac0Q.s 			page 11


 544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Peripheral */
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
 575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DeInit the low level hardware */
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState    = HAL_UART_STATE_RESET;
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState   = HAL_UART_STATE_RESET;
 597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlock */
 599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccYpac0Q.s 			page 12


 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
 608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
 613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
 623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
 628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
 632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
 636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
 640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
 642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
 643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                       ##### IO operation functions #####
 644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
 645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     and Half duplex data transfers.
 647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) There are two mode of transfer:
 649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (++) Blocking mode: The communication is performed in polling mode.
 650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            after finishing transfer.
 652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (++) Non-Blocking mode: The communication is performed using Interrupts
 653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The end of the data processing will be indicated through the
 655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            using DMA mode.
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
ARM GAS  /tmp/ccYpac0Q.s 			page 13


 658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Blocking mode API's are :
 662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Transmit()
 663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Receive()
 664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Transmit_IT()
 667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Receive_IT()
 668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_IRQHandler()
 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Transmit_DMA()
 672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Receive_DMA()
 673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_DMAPause()
 674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_DMAResume()
 675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_DMAStop()
 676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_TxHalfCpltCallback()
 679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_TxCpltCallback()
 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_RxHalfCpltCallback()
 681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_RxCpltCallback()
 682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_ErrorCallback()
 683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
 685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Abort()
 686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortTransmit()
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortReceive()
 688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Abort_IT()
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortTransmit_IT()
 690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortReceive_IT()
 691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
 693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortCpltCallback()
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortTransmitCpltCallback()
 695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortReceiveCpltCallback()
 696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
 698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         Errors are handled as follows :
 699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Error is considered as Recoverable and non blocking : Transfer could go till end, but 
 700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in In
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              Received character is then retrieved and stored in Rx buffer, Error code is set to all
 702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UA
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              If user wants to abort it, Abort services should be called by user.
 704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Error is considered as Blocking : Transfer could not be completed properly and is abor
 705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
 706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() u
 707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
 709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
 710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
 712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccYpac0Q.s 			page 14


 715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
 717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData Pointer to data buffer.
 719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size Amount of data to be sent.
 720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Timeout Timeout duration.
 721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
 726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart = 0U;
 727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return  HAL_ERROR;
 734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     tickstart = HAL_GetTick();
 744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize = Size;
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxXferCount--;
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_TIMEOUT;
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pData += 2U;
 759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
 761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->TDR = (*pData++ & (uint8_t)0xFFU);
 763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_TIMEOUT;
 768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
ARM GAS  /tmp/ccYpac0Q.s 			page 15


 772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
 774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
 786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData pointer to data buffer.
 788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size amount of data to be received.
 789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Timeout Timeout duration.
 790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
 793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
 795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t uhMask;
 796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart = 0U;
 797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return  HAL_ERROR;
 804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     tickstart = HAL_GetTick();
 814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = Size;
 817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* as long as data have to be received */
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     while(huart->RxXferCount > 0U)
 824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxXferCount--;
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_TIMEOUT;
ARM GAS  /tmp/ccYpac0Q.s 			page 16


 829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         tmp = (uint16_t*) pData ;
 833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pData +=2U;
 835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
 837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         *pData++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
 846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
 858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData pointer to data buffer.
 860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size amount of data to be sent.
 861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
 871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize = Size;
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccYpac0Q.s 			page 17


 886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Transmit Data Register Empty Interrupt */
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
 899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData pointer to data buffer.
 901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size amount of data to be received.
 902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
 912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = Size;
 920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
 928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Parity Error and Data Register not empty Interrupts */
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
ARM GAS  /tmp/ccYpac0Q.s 			page 18


 943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
 946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData pointer to data buffer.
 948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size amount of data to be sent.
 949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note This function starts a DMA transfer in interrupt mode meaning that
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *       DMA half transfer complete, DMA transfer complete and DMA transfer
 951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *       error interrupts are enabled
 952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if UART instance supports continuous communication using DMA */
 957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_DMA_INSTANCE(huart->Instance));
 958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
 965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize = Size;
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the DMA error callback */
 984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the DMA abort callback */
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART transmit DMA channel */
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->TDR, S
 991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
 994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
 996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
 999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        in the UART CR3 register */
ARM GAS  /tmp/ccYpac0Q.s 			page 19


1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
1003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
1007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData pointer to data buffer.
1014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size amount of data to be received.
1015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         the parity bit (MSB position).
1017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note This function starts a DMA transfer in interrupt mode meaning that
1018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *       DMA half transfer complete, DMA transfer complete and DMA transfer
1019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *       error interrupts are enabled
1020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if UART instance supports continuous communication using DMA */
1025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_DMA_INSTANCE(huart->Instance));
1026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
1029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
1031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
1037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
1039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
1040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
1046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
1049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the DMA error callback */
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
1052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the DMA abort callback */
1054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
1055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the DMA channel */
ARM GAS  /tmp/ccYpac0Q.s 			page 20


1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuffPtr, S
1058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        in the UART CR3 register */
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
1073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
1077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Pause the DMA Transfer.
1082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
1089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
ARM GAS  /tmp/ccYpac0Q.s 			page 21


1114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Resume the DMA Transfer.
1115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
1122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
1124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
1129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
1132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Stop the DMA Transfer.
1149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback: 
1157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete  
1158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of 
1159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
1163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
ARM GAS  /tmp/ccYpac0Q.s 			page 22


1171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
1178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccYpac0Q.s 			page 23


1228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U; 
1246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U; 
1247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
1253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset Handle ErrorCode to No Error */
1256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx != NULL)
ARM GAS  /tmp/ccYpac0Q.s 			page 24


1285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset Tx transfer counter */
1295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U; 
1296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset Rx transfer counter */
1338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U; 
1339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
ARM GAS  /tmp/ccYpac0Q.s 			page 25


1342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t abortcplt = 1U;
1366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      before any call to DMA Abort functions */
1373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->hdmatx != NULL)
1375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        Otherwise, set it to NULL */
1378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->hdmarx != NULL)
1389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        Otherwise, set it to NULL */
1392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
ARM GAS  /tmp/ccYpac0Q.s 			page 26


1399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised : 
1412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA TX */
1415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
1420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         abortcplt = 0U;
1422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised : 
1435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA RX */
1438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
1441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         abortcplt = 1U;
1442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
1444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         abortcplt = 0U;
1446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (abortcplt == 1U)
1452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U; 
1455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
ARM GAS  /tmp/ccYpac0Q.s 			page 27


1456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset errorCode */
1458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
1469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
1504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA TX */
1506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
1509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
1510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
ARM GAS  /tmp/ccYpac0Q.s 			page 28


1513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Reset Tx transfer counter */
1515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxXferCount = 0U; 
1516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Restore huart->gState to Ready */
1518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
1519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
1522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset Tx transfer counter */
1527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U; 
1528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Restore huart->gState to Ready */
1530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
1534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
1554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
ARM GAS  /tmp/ccYpac0Q.s 			page 29


1570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA RX */
1572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
1576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Reset Rx transfer counter */
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxXferCount = 0U; 
1582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
1584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
1585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
1587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
1588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
1591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset Rx transfer counter */
1596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U; 
1597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
1602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
1606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Handle UART interrupt request.
1613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
1619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
1620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t cr3its;
1621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t errorflags;
1622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* If no error occurs */
1624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE));
1625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (errorflags == RESET)
1626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
ARM GAS  /tmp/ccYpac0Q.s 			page 30


1627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
1628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       UART_Receive_IT(huart);
1631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return;
1632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }  
1634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* If some errors occur */
1636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   cr3its = READ_REG(huart->Instance->CR3);
1637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(   (errorflags != RESET)
1638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      && (   ((cr3its & USART_CR3_EIE) != RESET)
1639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)) )
1640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
1642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(((isrflags & USART_ISR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
1643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_PEF);
1645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
1647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
1650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(((isrflags & USART_ISR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_FEF);
1653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
1655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
1658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(((isrflags & USART_ISR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_NEF);
1661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
1663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
1665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
1666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(((isrflags & USART_ISR_ORE) != RESET) &&
1667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
1668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_OREF);
1670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
1672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
1675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->ErrorCode != HAL_UART_ERROR_NONE)
1676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* UART in mode Receiver ---------------------------------------------------*/
1678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         UART_Receive_IT(huart);
1681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
ARM GAS  /tmp/ccYpac0Q.s 			page 31


1684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          consider error as blocking */
1685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) ||
1686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {  
1688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Blocking error : transfer is aborted
1689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
1690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         UART_EndRxTransfer(huart);
1692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
1694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
1696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
1699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           if(huart->hdmarx != NULL)
1700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           {
1701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             /* Set the UART DMA Abort callback : 
1702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
1703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
1704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             /* Abort DMA RX */
1706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             {
1708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
1710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             }
1711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           }
1712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           else
1713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           {
1714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             /* Call user error callback */
1715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
1716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           }
1717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
1718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         else
1719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
1720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Call user error callback */
1721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
1722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
1723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
1725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Non Blocking error : transfer could go on. 
1727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            Error is notified to user through user error callback */
1728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
1729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
1730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
1733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   } /* End if some error occurs */
1735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
1737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(((isrflags & USART_ISR_WUF) != RESET) && ((cr3its & USART_CR3_WUFIE) != RESET))
1738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_IT(huart, UART_CLEAR_WUF);
1740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the process */
ARM GAS  /tmp/ccYpac0Q.s 			page 32


1741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
1744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
1745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
1748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(((isrflags & USART_ISR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
1749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_Transmit_IT(huart);
1751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
1752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
1755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(((isrflags & USART_ISR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
1756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
1758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
1759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
1765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
1775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
1780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
1790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Rx Transfer completed callback.
1795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
ARM GAS  /tmp/ccYpac0Q.s 			page 33


1798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
1805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
1810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
1820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief UART error callback.
1825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
1829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
1835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback (UART_HandleTypeDef *huart)
1844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
1850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
ARM GAS  /tmp/ccYpac0Q.s 			page 34


1855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback (UART_HandleTypeDef *huart)
1859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
1865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
1870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback (UART_HandleTypeDef *huart)
1874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
1880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
1885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
1888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  @brief   UART control functions
1889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
1890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
1891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
1892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                       ##### Peripheral Control functions #####
1893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
1894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
1895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
1896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
1897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
1898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
1899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
1900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
1901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
1902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
1903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
1904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Enable UART in mute mode (does not mean UART enters mute mode;
1908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
1909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
ARM GAS  /tmp/ccYpac0Q.s 			page 35


1912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
1913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
1916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
1920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
1921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
1925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
1929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
1930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
1934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
1937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    /* Disable USART mute mode by clearing the MME bit in the CR1 register */
1941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
1942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
1946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
1950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
1951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
1955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
1957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
1961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
1965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
1968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
ARM GAS  /tmp/ccYpac0Q.s 			page 36


1969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear TE and RE bits */
1971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
1972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
1973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
1974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
1978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
1985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status.
1987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
1989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
1992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear TE and RE bits */
1995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
1996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
1997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
1998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
2001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Transmit break characters.
2009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
2015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
2016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
2018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
2019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Send break characters */
2023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->RQR |= UART_SENDBREAK_REQUEST;
2024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
ARM GAS  /tmp/ccYpac0Q.s 			page 37


2026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
2028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
2036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  *  @brief   UART Peripheral State functions
2040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  *
2041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
2042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ==============================================================================
2043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ==============================================================================
2045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
2046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides functions allowing to :
2047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) Return the UART handle state.
2048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) Return the UART handle error code
2049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
2051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
2052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Return the UART handle state.
2056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *               the configuration information for the specified UART.
2058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL state
2059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
2063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   temp1 = huart->gState;
2064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   temp2 = huart->RxState;
2065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
2067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Return the UART handle error code.
2071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *               the configuration information for the specified UART.
2073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval UART Error Code
2074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return huart->ErrorCode;
2078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
2081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccYpac0Q.s 			page 38


2083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
2085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
2089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Configure the UART peripheral.
2093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
2097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
2099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource = UART_CLOCKSOURCE_UNDEFINED;
2100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
2101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t usartdiv                   = 0x0000U;
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
2103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
2105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
2107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
2111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
2112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
2113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
2117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  the UART Word Length, Parity, Mode and oversampling:
2118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  set the M bits according to huart->Init.WordLength value
2119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  set PCE and PS bits according to huart->Init.Parity value
2120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  set TE and RE bits according to huart->Init.Mode value
2121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  set OVER8 bit according to huart->Init.OverSampling value */
2122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
2123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
2124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
2127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    * to huart->Init.StopBits value */
2128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
2129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
2131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Configure
2132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    * - UART HardWare Flow Control: set CTSE and RTSE bits according
2133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *   to huart->Init.HwFlowCtl value
2134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    * - one-bit sampling method versus three samples' majority rule according
2135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *   to huart->Init.OneBitSampling */
2136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl | huart->Init.OneBitSampling ;
2137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
2138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
ARM GAS  /tmp/ccYpac0Q.s 			page 39


2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
2141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
2143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
2144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     switch (clocksource)
2146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
2149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
2151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
2152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
2155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
2158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
2161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
2163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       default:
2164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         ret = HAL_ERROR;
2165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     brrtemp = usartdiv & 0xFFF0U;
2169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
2170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
2171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     switch (clocksource)
2175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.B
2178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
2180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.B
2181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
2184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Ini
2187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
2190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
2192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       default:
2193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         ret = HAL_ERROR;
2194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
ARM GAS  /tmp/ccYpac0Q.s 			page 40


2197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return ret;
2199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
2204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
2208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
2210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
2211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
2213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
2214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
2216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
2217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
2220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
2221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
2223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
2224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure data inversion */
2227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
2228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
2230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
2231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
2234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
2235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
2237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
2238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
2241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
2242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
2244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
2245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
2248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
2249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
2251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
2252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccYpac0Q.s 			page 41


2254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
2255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
2256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
2258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
2259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
2260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
2261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
2262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
2264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
2265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
2269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
2270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
2272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
2273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Check the UART Idle State.
2278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
2282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart = 0U;
2284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
2286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
2289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   tickstart = HAL_GetTick();
2290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
2292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
2293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Wait until TEACK flag is set */
2295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE
2296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Timeout Occured */
2298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_TIMEOUT;
2299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if the Receiver is enabled */
2302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
2303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Wait until REACK flag is set */
2305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE
2306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Timeout Occured */
2308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_TIMEOUT;
2309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
ARM GAS  /tmp/ccYpac0Q.s 			page 42


2311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Initialize the UART State */
2313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
2317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
2324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  Flag Specifies the UART flag to check
2326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  Status Flag status (SET or RESET)
2327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  Tickstart Tick start value
2328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  Timeout Timeout duration
2329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
2332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Wait until flag is set */
2334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
2335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check for the Timeout */
2337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(Timeout != HAL_MAX_DELAY)
2338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if((Timeout == 0U) || ((HAL_GetTick()-Tickstart) > Timeout))
2340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
2341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
2343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
2346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
2347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Process Unlocked */
2349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         __HAL_UNLOCK(huart);
2350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_TIMEOUT;
2351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
2352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
2360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
2364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
  29              		.loc 1 2364 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccYpac0Q.s 			page 43


  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
2365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
  35              		.loc 1 2366 0
  36 0000 0268     		ldr	r2, [r0]
  37 0002 1368     		ldr	r3, [r2]
  38 0004 23F0C003 		bic	r3, r3, #192
  39 0008 1360     		str	r3, [r2]
2367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
2369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  40              		.loc 1 2369 0
  41 000a 2023     		movs	r3, #32
  42 000c 80F86930 		strb	r3, [r0, #105]
  43 0010 7047     		bx	lr
  44              		.cfi_endproc
  45              	.LFE167:
  47 0012 00BF     		.section	.text.UART_EndRxTransfer,"ax",%progbits
  48              		.align	2
  49              		.thumb
  50              		.thumb_func
  52              	UART_EndRxTransfer:
  53              	.LFB168:
2370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
2375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
2379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
  54              		.loc 1 2379 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  59              	.LVL1:
2380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
  60              		.loc 1 2381 0
  61 0000 0268     		ldr	r2, [r0]
  62 0002 1368     		ldr	r3, [r2]
  63 0004 23F49073 		bic	r3, r3, #288
  64 0008 1360     		str	r3, [r2]
2382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
  65              		.loc 1 2382 0
  66 000a 0268     		ldr	r2, [r0]
  67 000c 9368     		ldr	r3, [r2, #8]
  68 000e 23F00103 		bic	r3, r3, #1
  69 0012 9360     		str	r3, [r2, #8]
2383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
2385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
ARM GAS  /tmp/ccYpac0Q.s 			page 44


  70              		.loc 1 2385 0
  71 0014 2023     		movs	r3, #32
  72 0016 80F86A30 		strb	r3, [r0, #106]
  73 001a 7047     		bx	lr
  74              		.cfi_endproc
  75              	.LFE168:
  77              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  78              		.align	2
  79              		.weak	HAL_UART_MspInit
  80              		.thumb
  81              		.thumb_func
  83              	HAL_UART_MspInit:
  84              	.LFB129:
 610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
  85              		.loc 1 610 0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89              		@ link register save eliminated.
  90              	.LVL2:
  91 0000 7047     		bx	lr
  92              		.cfi_endproc
  93              	.LFE129:
  95 0002 00BF     		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
  96              		.align	2
  97              		.weak	HAL_UART_MspDeInit
  98              		.thumb
  99              		.thumb_func
 101              	HAL_UART_MspDeInit:
 102              	.LFB130:
 625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 103              		.loc 1 625 0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107              		@ link register save eliminated.
 108              	.LVL3:
 109 0000 7047     		bx	lr
 110              		.cfi_endproc
 111              	.LFE130:
 113 0002 00BF     		.section	.text.HAL_UART_DeInit,"ax",%progbits
 114              		.align	2
 115              		.global	HAL_UART_DeInit
 116              		.thumb
 117              		.thumb_func
 119              	HAL_UART_DeInit:
 120              	.LFB128:
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 121              		.loc 1 572 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              	.LVL4:
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 126              		.loc 1 574 0
 127 0000 D8B1     		cbz	r0, .L7
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
ARM GAS  /tmp/ccYpac0Q.s 			page 45


 128              		.loc 1 572 0
 129 0002 38B5     		push	{r3, r4, r5, lr}
 130              	.LCFI0:
 131              		.cfi_def_cfa_offset 16
 132              		.cfi_offset 3, -16
 133              		.cfi_offset 4, -12
 134              		.cfi_offset 5, -8
 135              		.cfi_offset 14, -4
 136 0004 0446     		mov	r4, r0
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 137              		.loc 1 582 0
 138 0006 2423     		movs	r3, #36
 139 0008 80F86930 		strb	r3, [r0, #105]
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 140              		.loc 1 585 0
 141 000c 0268     		ldr	r2, [r0]
 142 000e 1368     		ldr	r3, [r2]
 143 0010 23F00103 		bic	r3, r3, #1
 144 0014 1360     		str	r3, [r2]
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 145              		.loc 1 587 0
 146 0016 0368     		ldr	r3, [r0]
 147 0018 0025     		movs	r5, #0
 148 001a 1D60     		str	r5, [r3]
 588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 149              		.loc 1 588 0
 150 001c 0368     		ldr	r3, [r0]
 151 001e 5D60     		str	r5, [r3, #4]
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 152              		.loc 1 589 0
 153 0020 0368     		ldr	r3, [r0]
 154 0022 9D60     		str	r5, [r3, #8]
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 155              		.loc 1 592 0
 156 0024 FFF7FEFF 		bl	HAL_UART_MspDeInit
 157              	.LVL5:
 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState    = HAL_UART_STATE_RESET;
 158              		.loc 1 594 0
 159 0028 E566     		str	r5, [r4, #108]
 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState   = HAL_UART_STATE_RESET;
 160              		.loc 1 595 0
 161 002a 84F86950 		strb	r5, [r4, #105]
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 162              		.loc 1 596 0
 163 002e 84F86A50 		strb	r5, [r4, #106]
 599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 164              		.loc 1 599 0
 165 0032 84F86850 		strb	r5, [r4, #104]
 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 166              		.loc 1 601 0
 167 0036 2846     		mov	r0, r5
 168 0038 38BD     		pop	{r3, r4, r5, pc}
 169              	.LVL6:
 170              	.L7:
 171              	.LCFI1:
 172              		.cfi_def_cfa_offset 0
 173              		.cfi_restore 3
ARM GAS  /tmp/ccYpac0Q.s 			page 46


 174              		.cfi_restore 4
 175              		.cfi_restore 5
 176              		.cfi_restore 14
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 177              		.loc 1 576 0
 178 003a 0120     		movs	r0, #1
 179              	.LVL7:
 180 003c 7047     		bx	lr
 181              		.cfi_endproc
 182              	.LFE128:
 184 003e 00BF     		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 185              		.align	2
 186              		.global	HAL_UART_Transmit_IT
 187              		.thumb
 188              		.thumb_func
 190              	HAL_UART_Transmit_IT:
 191              	.LFB133:
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 192              		.loc 1 864 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              		@ link register save eliminated.
 197              	.LVL8:
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 198              		.loc 1 866 0
 199 0000 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 200 0004 DBB2     		uxtb	r3, r3
 201 0006 202B     		cmp	r3, #32
 202 0008 18D1     		bne	.L12
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 203              		.loc 1 868 0
 204 000a C9B1     		cbz	r1, .L13
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 205              		.loc 1 868 0 is_stmt 0 discriminator 1
 206 000c D2B1     		cbz	r2, .L14
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 207              		.loc 1 874 0 is_stmt 1
 208 000e 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 209 0012 012B     		cmp	r3, #1
 210 0014 18D0     		beq	.L15
 876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize = Size;
 211              		.loc 1 876 0 discriminator 2
 212 0016 C164     		str	r1, [r0, #76]
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 213              		.loc 1 877 0 discriminator 2
 214 0018 A0F85020 		strh	r2, [r0, #80]	@ movhi
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 215              		.loc 1 878 0 discriminator 2
 216 001c A0F85220 		strh	r2, [r0, #82]	@ movhi
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 217              		.loc 1 880 0 discriminator 2
 218 0020 0023     		movs	r3, #0
 219 0022 C366     		str	r3, [r0, #108]
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 220              		.loc 1 881 0 discriminator 2
 221 0024 2122     		movs	r2, #33
ARM GAS  /tmp/ccYpac0Q.s 			page 47


 222              	.LVL9:
 223 0026 80F86920 		strb	r2, [r0, #105]
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 224              		.loc 1 884 0 discriminator 2
 225 002a 80F86830 		strb	r3, [r0, #104]
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 226              		.loc 1 887 0 discriminator 2
 227 002e 0168     		ldr	r1, [r0]
 228              	.LVL10:
 229 0030 0A68     		ldr	r2, [r1]
 230 0032 42F08002 		orr	r2, r2, #128
 231 0036 0A60     		str	r2, [r1]
 232              	.LVL11:
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 233              		.loc 1 889 0 discriminator 2
 234 0038 1846     		mov	r0, r3
 235              	.LVL12:
 236 003a 7047     		bx	lr
 237              	.LVL13:
 238              	.L12:
 893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 239              		.loc 1 893 0
 240 003c 0220     		movs	r0, #2
 241              	.LVL14:
 242 003e 7047     		bx	lr
 243              	.LVL15:
 244              	.L13:
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 245              		.loc 1 870 0
 246 0040 0120     		movs	r0, #1
 247              	.LVL16:
 248 0042 7047     		bx	lr
 249              	.LVL17:
 250              	.L14:
 251 0044 0120     		movs	r0, #1
 252              	.LVL18:
 253 0046 7047     		bx	lr
 254              	.LVL19:
 255              	.L15:
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 256              		.loc 1 874 0
 257 0048 0220     		movs	r0, #2
 258              	.LVL20:
 895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 259              		.loc 1 895 0
 260 004a 7047     		bx	lr
 261              		.cfi_endproc
 262              	.LFE133:
 264              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 265              		.align	2
 266              		.global	HAL_UART_Receive_IT
 267              		.thumb
 268              		.thumb_func
 270              	HAL_UART_Receive_IT:
 271              	.LFB134:
 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 272              		.loc 1 905 0
ARM GAS  /tmp/ccYpac0Q.s 			page 48


 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 0
 275              		@ frame_needed = 0, uses_anonymous_args = 0
 276              		@ link register save eliminated.
 277              	.LVL21:
 907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 278              		.loc 1 907 0
 279 0000 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 280 0004 DBB2     		uxtb	r3, r3
 281 0006 202B     		cmp	r3, #32
 282 0008 3BD1     		bne	.L22
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 283              		.loc 1 909 0
 284 000a 0029     		cmp	r1, #0
 285 000c 3BD0     		beq	.L23
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 286              		.loc 1 909 0 is_stmt 0 discriminator 1
 287 000e 002A     		cmp	r2, #0
 288 0010 3BD0     		beq	.L24
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 289              		.loc 1 915 0 is_stmt 1
 290 0012 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 291 0016 012B     		cmp	r3, #1
 292 0018 39D0     		beq	.L25
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 293              		.loc 1 915 0 is_stmt 0 discriminator 2
 294 001a 0123     		movs	r3, #1
 295 001c 80F86830 		strb	r3, [r0, #104]
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
 296              		.loc 1 917 0 is_stmt 1 discriminator 2
 297 0020 4165     		str	r1, [r0, #84]
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = Size;
 298              		.loc 1 918 0 discriminator 2
 299 0022 A0F85820 		strh	r2, [r0, #88]	@ movhi
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 300              		.loc 1 919 0 discriminator 2
 301 0026 A0F85A20 		strh	r2, [r0, #90]	@ movhi
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 302              		.loc 1 922 0 discriminator 2
 303 002a 8368     		ldr	r3, [r0, #8]
 304 002c B3F5805F 		cmp	r3, #4096
 305 0030 0AD1     		bne	.L18
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 306              		.loc 1 922 0 is_stmt 0 discriminator 1
 307 0032 0369     		ldr	r3, [r0, #16]
 308 0034 23B9     		cbnz	r3, .L19
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 309              		.loc 1 922 0 discriminator 3
 310 0036 40F2FF13 		movw	r3, #511
 311 003a A0F85C30 		strh	r3, [r0, #92]	@ movhi
 312 003e 0DE0     		b	.L20
 313              	.L19:
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 314              		.loc 1 922 0 discriminator 4
 315 0040 FF23     		movs	r3, #255
 316 0042 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 317 0046 09E0     		b	.L20
ARM GAS  /tmp/ccYpac0Q.s 			page 49


 318              	.L18:
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 319              		.loc 1 922 0 discriminator 2
 320 0048 43B9     		cbnz	r3, .L20
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 321              		.loc 1 922 0 discriminator 5
 322 004a 0369     		ldr	r3, [r0, #16]
 323 004c 1BB9     		cbnz	r3, .L21
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 324              		.loc 1 922 0 discriminator 6
 325 004e FF23     		movs	r3, #255
 326 0050 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 327 0054 02E0     		b	.L20
 328              	.L21:
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 329              		.loc 1 922 0 discriminator 7
 330 0056 7F23     		movs	r3, #127
 331 0058 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 332              	.L20:
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 333              		.loc 1 924 0 is_stmt 1
 334 005c 0023     		movs	r3, #0
 335 005e C366     		str	r3, [r0, #108]
 925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 336              		.loc 1 925 0
 337 0060 2222     		movs	r2, #34
 338              	.LVL22:
 339 0062 80F86A20 		strb	r2, [r0, #106]
 928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 340              		.loc 1 928 0
 341 0066 80F86830 		strb	r3, [r0, #104]
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 342              		.loc 1 931 0
 343 006a 0168     		ldr	r1, [r0]
 344              	.LVL23:
 345 006c 8A68     		ldr	r2, [r1, #8]
 346 006e 42F00102 		orr	r2, r2, #1
 347 0072 8A60     		str	r2, [r1, #8]
 348              	.LVL24:
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 349              		.loc 1 934 0
 350 0074 0168     		ldr	r1, [r0]
 351 0076 0A68     		ldr	r2, [r1]
 352 0078 42F49072 		orr	r2, r2, #288
 353 007c 0A60     		str	r2, [r1]
 936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 354              		.loc 1 936 0
 355 007e 1846     		mov	r0, r3
 356              	.LVL25:
 357 0080 7047     		bx	lr
 358              	.LVL26:
 359              	.L22:
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 360              		.loc 1 940 0
 361 0082 0220     		movs	r0, #2
 362              	.LVL27:
 363 0084 7047     		bx	lr
ARM GAS  /tmp/ccYpac0Q.s 			page 50


 364              	.LVL28:
 365              	.L23:
 911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 366              		.loc 1 911 0
 367 0086 0120     		movs	r0, #1
 368              	.LVL29:
 369 0088 7047     		bx	lr
 370              	.LVL30:
 371              	.L24:
 372 008a 0120     		movs	r0, #1
 373              	.LVL31:
 374 008c 7047     		bx	lr
 375              	.LVL32:
 376              	.L25:
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 377              		.loc 1 915 0
 378 008e 0220     		movs	r0, #2
 379              	.LVL33:
 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 380              		.loc 1 942 0
 381 0090 7047     		bx	lr
 382              		.cfi_endproc
 383              	.LFE134:
 385 0092 00BF     		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 386              		.align	2
 387              		.global	HAL_UART_Transmit_DMA
 388              		.thumb
 389              		.thumb_func
 391              	HAL_UART_Transmit_DMA:
 392              	.LFB135:
 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if UART instance supports continuous communication using DMA */
 393              		.loc 1 955 0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 0
 396              		@ frame_needed = 0, uses_anonymous_args = 0
 397              	.LVL34:
 398 0000 38B5     		push	{r3, r4, r5, lr}
 399              	.LCFI2:
 400              		.cfi_def_cfa_offset 16
 401              		.cfi_offset 3, -16
 402              		.cfi_offset 4, -12
 403              		.cfi_offset 5, -8
 404              		.cfi_offset 14, -4
 960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 405              		.loc 1 960 0
 406 0002 90F86940 		ldrb	r4, [r0, #105]	@ zero_extendqisi2
 407 0006 E4B2     		uxtb	r4, r4
 408 0008 202C     		cmp	r4, #32
 409 000a 33D1     		bne	.L28
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 410              		.loc 1 962 0
 411 000c 0029     		cmp	r1, #0
 412 000e 33D0     		beq	.L29
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 413              		.loc 1 962 0 is_stmt 0 discriminator 1
 414 0010 002A     		cmp	r2, #0
 415 0012 33D0     		beq	.L30
ARM GAS  /tmp/ccYpac0Q.s 			page 51


 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 416              		.loc 1 968 0 is_stmt 1
 417 0014 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 418 0018 012B     		cmp	r3, #1
 419 001a 31D0     		beq	.L31
 420 001c 1346     		mov	r3, r2
 421 001e 0446     		mov	r4, r0
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 422              		.loc 1 968 0 is_stmt 0 discriminator 2
 423 0020 0122     		movs	r2, #1
 424              	.LVL35:
 425 0022 80F86820 		strb	r2, [r0, #104]
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize = Size;
 426              		.loc 1 970 0 is_stmt 1 discriminator 2
 427 0026 C164     		str	r1, [r0, #76]
 971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 428              		.loc 1 971 0 discriminator 2
 429 0028 A0F85030 		strh	r3, [r0, #80]	@ movhi
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 430              		.loc 1 972 0 discriminator 2
 431 002c A0F85230 		strh	r3, [r0, #82]	@ movhi
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 432              		.loc 1 974 0 discriminator 2
 433 0030 0025     		movs	r5, #0
 434 0032 C566     		str	r5, [r0, #108]
 975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 435              		.loc 1 975 0 discriminator 2
 436 0034 2122     		movs	r2, #33
 437 0036 80F86920 		strb	r2, [r0, #105]
 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 438              		.loc 1 978 0 discriminator 2
 439 003a 026E     		ldr	r2, [r0, #96]
 440 003c 1149     		ldr	r1, .L33
 441              	.LVL36:
 442 003e 9162     		str	r1, [r2, #40]
 443              	.LVL37:
 981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 444              		.loc 1 981 0 discriminator 2
 445 0040 026E     		ldr	r2, [r0, #96]
 446 0042 1149     		ldr	r1, .L33+4
 447 0044 D162     		str	r1, [r2, #44]
 984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 448              		.loc 1 984 0 discriminator 2
 449 0046 026E     		ldr	r2, [r0, #96]
 450 0048 1049     		ldr	r1, .L33+8
 451 004a 1163     		str	r1, [r2, #48]
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 452              		.loc 1 987 0 discriminator 2
 453 004c 026E     		ldr	r2, [r0, #96]
 454 004e 5563     		str	r5, [r2, #52]
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 455              		.loc 1 990 0 discriminator 2
 456 0050 0268     		ldr	r2, [r0]
 457 0052 2832     		adds	r2, r2, #40
 458 0054 C16C     		ldr	r1, [r0, #76]
 459 0056 006E     		ldr	r0, [r0, #96]
 460              	.LVL38:
ARM GAS  /tmp/ccYpac0Q.s 			page 52


 461 0058 FFF7FEFF 		bl	HAL_DMA_Start_IT
 462              	.LVL39:
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 463              		.loc 1 993 0 discriminator 2
 464 005c 2368     		ldr	r3, [r4]
 465 005e 4022     		movs	r2, #64
 466 0060 1A62     		str	r2, [r3, #32]
 996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 467              		.loc 1 996 0 discriminator 2
 468 0062 84F86850 		strb	r5, [r4, #104]
1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 469              		.loc 1 1000 0 discriminator 2
 470 0066 2268     		ldr	r2, [r4]
 471 0068 9368     		ldr	r3, [r2, #8]
 472 006a 43F08003 		orr	r3, r3, #128
 473 006e 9360     		str	r3, [r2, #8]
1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 474              		.loc 1 1002 0 discriminator 2
 475 0070 2846     		mov	r0, r5
 476 0072 38BD     		pop	{r3, r4, r5, pc}
 477              	.LVL40:
 478              	.L28:
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 479              		.loc 1 1006 0
 480 0074 0220     		movs	r0, #2
 481              	.LVL41:
 482 0076 38BD     		pop	{r3, r4, r5, pc}
 483              	.LVL42:
 484              	.L29:
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 485              		.loc 1 964 0
 486 0078 0120     		movs	r0, #1
 487              	.LVL43:
 488 007a 38BD     		pop	{r3, r4, r5, pc}
 489              	.LVL44:
 490              	.L30:
 491 007c 0120     		movs	r0, #1
 492              	.LVL45:
 493 007e 38BD     		pop	{r3, r4, r5, pc}
 494              	.LVL46:
 495              	.L31:
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 496              		.loc 1 968 0
 497 0080 0220     		movs	r0, #2
 498              	.LVL47:
1008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 499              		.loc 1 1008 0
 500 0082 38BD     		pop	{r3, r4, r5, pc}
 501              	.L34:
 502              		.align	2
 503              	.L33:
 504 0084 00000000 		.word	UART_DMATransmitCplt
 505 0088 00000000 		.word	UART_DMATxHalfCplt
 506 008c 00000000 		.word	UART_DMAError
 507              		.cfi_endproc
 508              	.LFE135:
 510              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
ARM GAS  /tmp/ccYpac0Q.s 			page 53


 511              		.align	2
 512              		.global	HAL_UART_Receive_DMA
 513              		.thumb
 514              		.thumb_func
 516              	HAL_UART_Receive_DMA:
 517              	.LFB136:
1023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if UART instance supports continuous communication using DMA */
 518              		.loc 1 1023 0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 0
 521              		@ frame_needed = 0, uses_anonymous_args = 0
 522              	.LVL48:
 523 0000 38B5     		push	{r3, r4, r5, lr}
 524              	.LCFI3:
 525              		.cfi_def_cfa_offset 16
 526              		.cfi_offset 3, -16
 527              		.cfi_offset 4, -12
 528              		.cfi_offset 5, -8
 529              		.cfi_offset 14, -4
1028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 530              		.loc 1 1028 0
 531 0002 90F86A40 		ldrb	r4, [r0, #106]	@ zero_extendqisi2
 532 0006 E4B2     		uxtb	r4, r4
 533 0008 202C     		cmp	r4, #32
 534 000a 38D1     		bne	.L37
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 535              		.loc 1 1030 0
 536 000c 0029     		cmp	r1, #0
 537 000e 38D0     		beq	.L38
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 538              		.loc 1 1030 0 is_stmt 0 discriminator 1
 539 0010 002A     		cmp	r2, #0
 540 0012 38D0     		beq	.L39
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 541              		.loc 1 1036 0 is_stmt 1
 542 0014 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 543 0018 012B     		cmp	r3, #1
 544 001a 36D0     		beq	.L40
 545 001c 1346     		mov	r3, r2
 546 001e 0446     		mov	r4, r0
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 547              		.loc 1 1036 0 is_stmt 0 discriminator 2
 548 0020 0122     		movs	r2, #1
 549              	.LVL49:
 550 0022 80F86820 		strb	r2, [r0, #104]
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
 551              		.loc 1 1038 0 is_stmt 1 discriminator 2
 552 0026 4165     		str	r1, [r0, #84]
1039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 553              		.loc 1 1039 0 discriminator 2
 554 0028 A0F85830 		strh	r3, [r0, #88]	@ movhi
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 555              		.loc 1 1041 0 discriminator 2
 556 002c 0025     		movs	r5, #0
 557 002e C566     		str	r5, [r0, #108]
1042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 558              		.loc 1 1042 0 discriminator 2
ARM GAS  /tmp/ccYpac0Q.s 			page 54


 559 0030 2222     		movs	r2, #34
 560 0032 80F86A20 		strb	r2, [r0, #106]
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 561              		.loc 1 1045 0 discriminator 2
 562 0036 426E     		ldr	r2, [r0, #100]
 563 0038 1549     		ldr	r1, .L42
 564              	.LVL50:
 565 003a 9162     		str	r1, [r2, #40]
 566              	.LVL51:
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 567              		.loc 1 1048 0 discriminator 2
 568 003c 426E     		ldr	r2, [r0, #100]
 569 003e 1549     		ldr	r1, .L42+4
 570 0040 D162     		str	r1, [r2, #44]
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 571              		.loc 1 1051 0 discriminator 2
 572 0042 426E     		ldr	r2, [r0, #100]
 573 0044 1449     		ldr	r1, .L42+8
 574 0046 1163     		str	r1, [r2, #48]
1054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 575              		.loc 1 1054 0 discriminator 2
 576 0048 426E     		ldr	r2, [r0, #100]
 577 004a 5563     		str	r5, [r2, #52]
1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 578              		.loc 1 1057 0 discriminator 2
 579 004c 0168     		ldr	r1, [r0]
 580 004e 426D     		ldr	r2, [r0, #84]
 581 0050 2431     		adds	r1, r1, #36
 582 0052 406E     		ldr	r0, [r0, #100]
 583              	.LVL52:
 584 0054 FFF7FEFF 		bl	HAL_DMA_Start_IT
 585              	.LVL53:
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 586              		.loc 1 1060 0 discriminator 2
 587 0058 84F86850 		strb	r5, [r4, #104]
1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 588              		.loc 1 1063 0 discriminator 2
 589 005c 2268     		ldr	r2, [r4]
 590 005e 1368     		ldr	r3, [r2]
 591 0060 43F48073 		orr	r3, r3, #256
 592 0064 1360     		str	r3, [r2]
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 593              		.loc 1 1066 0 discriminator 2
 594 0066 2268     		ldr	r2, [r4]
 595 0068 9368     		ldr	r3, [r2, #8]
 596 006a 43F00103 		orr	r3, r3, #1
 597 006e 9360     		str	r3, [r2, #8]
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 598              		.loc 1 1070 0 discriminator 2
 599 0070 2268     		ldr	r2, [r4]
 600 0072 9368     		ldr	r3, [r2, #8]
 601 0074 43F04003 		orr	r3, r3, #64
 602 0078 9360     		str	r3, [r2, #8]
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 603              		.loc 1 1072 0 discriminator 2
 604 007a 2846     		mov	r0, r5
 605 007c 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/ccYpac0Q.s 			page 55


 606              	.LVL54:
 607              	.L37:
1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 608              		.loc 1 1076 0
 609 007e 0220     		movs	r0, #2
 610              	.LVL55:
 611 0080 38BD     		pop	{r3, r4, r5, pc}
 612              	.LVL56:
 613              	.L38:
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 614              		.loc 1 1032 0
 615 0082 0120     		movs	r0, #1
 616              	.LVL57:
 617 0084 38BD     		pop	{r3, r4, r5, pc}
 618              	.LVL58:
 619              	.L39:
 620 0086 0120     		movs	r0, #1
 621              	.LVL59:
 622 0088 38BD     		pop	{r3, r4, r5, pc}
 623              	.LVL60:
 624              	.L40:
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 625              		.loc 1 1036 0
 626 008a 0220     		movs	r0, #2
 627              	.LVL61:
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 628              		.loc 1 1078 0
 629 008c 38BD     		pop	{r3, r4, r5, pc}
 630              	.L43:
 631 008e 00BF     		.align	2
 632              	.L42:
 633 0090 00000000 		.word	UART_DMAReceiveCplt
 634 0094 00000000 		.word	UART_DMARxHalfCplt
 635 0098 00000000 		.word	UART_DMAError
 636              		.cfi_endproc
 637              	.LFE136:
 639              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 640              		.align	2
 641              		.global	HAL_UART_DMAPause
 642              		.thumb
 643              		.thumb_func
 645              	HAL_UART_DMAPause:
 646              	.LFB137:
1086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
 647              		.loc 1 1086 0
 648              		.cfi_startproc
 649              		@ args = 0, pretend = 0, frame = 0
 650              		@ frame_needed = 0, uses_anonymous_args = 0
 651              		@ link register save eliminated.
 652              	.LVL62:
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 653              		.loc 1 1088 0
 654 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 655 0004 012B     		cmp	r3, #1
 656 0006 2DD0     		beq	.L48
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 657              		.loc 1 1088 0 is_stmt 0 discriminator 2
ARM GAS  /tmp/ccYpac0Q.s 			page 56


 658 0008 0123     		movs	r3, #1
 659 000a 80F86830 		strb	r3, [r0, #104]
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 660              		.loc 1 1090 0 is_stmt 1 discriminator 2
 661 000e 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 662 0012 DBB2     		uxtb	r3, r3
 663 0014 212B     		cmp	r3, #33
 664 0016 08D1     		bne	.L46
1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 665              		.loc 1 1091 0 discriminator 1
 666 0018 0368     		ldr	r3, [r0]
 667 001a 9A68     		ldr	r2, [r3, #8]
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 668              		.loc 1 1090 0 discriminator 1
 669 001c 12F0800F 		tst	r2, #128
 670 0020 03D0     		beq	.L46
1094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 671              		.loc 1 1094 0
 672 0022 9A68     		ldr	r2, [r3, #8]
 673 0024 22F08002 		bic	r2, r2, #128
 674 0028 9A60     		str	r2, [r3, #8]
 675              	.L46:
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 676              		.loc 1 1096 0
 677 002a 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 678 002e DBB2     		uxtb	r3, r3
 679 0030 222B     		cmp	r3, #34
 680 0032 12D1     		bne	.L47
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 681              		.loc 1 1097 0 discriminator 1
 682 0034 0368     		ldr	r3, [r0]
 683 0036 9A68     		ldr	r2, [r3, #8]
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 684              		.loc 1 1096 0 discriminator 1
 685 0038 12F0400F 		tst	r2, #64
 686 003c 0DD0     		beq	.L47
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 687              		.loc 1 1100 0
 688 003e 1A68     		ldr	r2, [r3]
 689 0040 22F48072 		bic	r2, r2, #256
 690 0044 1A60     		str	r2, [r3]
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 691              		.loc 1 1101 0
 692 0046 0268     		ldr	r2, [r0]
 693 0048 9368     		ldr	r3, [r2, #8]
 694 004a 23F00103 		bic	r3, r3, #1
 695 004e 9360     		str	r3, [r2, #8]
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 696              		.loc 1 1104 0
 697 0050 0268     		ldr	r2, [r0]
 698 0052 9368     		ldr	r3, [r2, #8]
 699 0054 23F04003 		bic	r3, r3, #64
 700 0058 9360     		str	r3, [r2, #8]
 701              	.L47:
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 702              		.loc 1 1108 0
 703 005a 0023     		movs	r3, #0
ARM GAS  /tmp/ccYpac0Q.s 			page 57


 704 005c 80F86830 		strb	r3, [r0, #104]
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 705              		.loc 1 1110 0
 706 0060 1846     		mov	r0, r3
 707              	.LVL63:
 708 0062 7047     		bx	lr
 709              	.LVL64:
 710              	.L48:
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 711              		.loc 1 1088 0
 712 0064 0220     		movs	r0, #2
 713              	.LVL65:
1111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 714              		.loc 1 1111 0
 715 0066 7047     		bx	lr
 716              		.cfi_endproc
 717              	.LFE137:
 719              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 720              		.align	2
 721              		.global	HAL_UART_DMAResume
 722              		.thumb
 723              		.thumb_func
 725              	HAL_UART_DMAResume:
 726              	.LFB138:
1119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
 727              		.loc 1 1119 0
 728              		.cfi_startproc
 729              		@ args = 0, pretend = 0, frame = 0
 730              		@ frame_needed = 0, uses_anonymous_args = 0
 731              		@ link register save eliminated.
 732              	.LVL66:
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 733              		.loc 1 1121 0
 734 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 735 0004 012B     		cmp	r3, #1
 736 0006 28D0     		beq	.L53
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 737              		.loc 1 1121 0 is_stmt 0 discriminator 2
 738 0008 0123     		movs	r3, #1
 739 000a 80F86830 		strb	r3, [r0, #104]
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 740              		.loc 1 1123 0 is_stmt 1 discriminator 2
 741 000e 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 742 0012 DBB2     		uxtb	r3, r3
 743 0014 212B     		cmp	r3, #33
 744 0016 04D1     		bne	.L51
1126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 745              		.loc 1 1126 0
 746 0018 0268     		ldr	r2, [r0]
 747 001a 9368     		ldr	r3, [r2, #8]
 748 001c 43F08003 		orr	r3, r3, #128
 749 0020 9360     		str	r3, [r2, #8]
 750              	.L51:
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 751              		.loc 1 1128 0
 752 0022 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 753 0026 DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccYpac0Q.s 			page 58


 754 0028 222B     		cmp	r3, #34
 755 002a 11D1     		bne	.L52
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 756              		.loc 1 1131 0
 757 002c 0368     		ldr	r3, [r0]
 758 002e 0822     		movs	r2, #8
 759 0030 1A62     		str	r2, [r3, #32]
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 760              		.loc 1 1134 0
 761 0032 0268     		ldr	r2, [r0]
 762 0034 1368     		ldr	r3, [r2]
 763 0036 43F48073 		orr	r3, r3, #256
 764 003a 1360     		str	r3, [r2]
1135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 765              		.loc 1 1135 0
 766 003c 0268     		ldr	r2, [r0]
 767 003e 9368     		ldr	r3, [r2, #8]
 768 0040 43F00103 		orr	r3, r3, #1
 769 0044 9360     		str	r3, [r2, #8]
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 770              		.loc 1 1138 0
 771 0046 0268     		ldr	r2, [r0]
 772 0048 9368     		ldr	r3, [r2, #8]
 773 004a 43F04003 		orr	r3, r3, #64
 774 004e 9360     		str	r3, [r2, #8]
 775              	.L52:
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 776              		.loc 1 1142 0
 777 0050 0023     		movs	r3, #0
 778 0052 80F86830 		strb	r3, [r0, #104]
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 779              		.loc 1 1144 0
 780 0056 1846     		mov	r0, r3
 781              	.LVL67:
 782 0058 7047     		bx	lr
 783              	.LVL68:
 784              	.L53:
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 785              		.loc 1 1121 0
 786 005a 0220     		movs	r0, #2
 787              	.LVL69:
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 788              		.loc 1 1145 0
 789 005c 7047     		bx	lr
 790              		.cfi_endproc
 791              	.LFE138:
 793 005e 00BF     		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 794              		.align	2
 795              		.global	HAL_UART_DMAStop
 796              		.thumb
 797              		.thumb_func
 799              	HAL_UART_DMAStop:
 800              	.LFB139:
1153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 801              		.loc 1 1153 0
 802              		.cfi_startproc
 803              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccYpac0Q.s 			page 59


 804              		@ frame_needed = 0, uses_anonymous_args = 0
 805              	.LVL70:
 806 0000 10B5     		push	{r4, lr}
 807              	.LCFI4:
 808              		.cfi_def_cfa_offset 8
 809              		.cfi_offset 4, -8
 810              		.cfi_offset 14, -4
 811 0002 0446     		mov	r4, r0
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 812              		.loc 1 1162 0
 813 0004 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 814 0008 DBB2     		uxtb	r3, r3
 815 000a 212B     		cmp	r3, #33
 816 000c 0FD1     		bne	.L55
1163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 817              		.loc 1 1163 0 discriminator 1
 818 000e 0368     		ldr	r3, [r0]
 819 0010 9A68     		ldr	r2, [r3, #8]
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 820              		.loc 1 1162 0 discriminator 1
 821 0012 12F0800F 		tst	r2, #128
 822 0016 0AD0     		beq	.L55
1165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 823              		.loc 1 1165 0
 824 0018 9A68     		ldr	r2, [r3, #8]
 825 001a 22F08002 		bic	r2, r2, #128
 826 001e 9A60     		str	r2, [r3, #8]
1168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 827              		.loc 1 1168 0
 828 0020 006E     		ldr	r0, [r0, #96]
 829              	.LVL71:
 830 0022 08B1     		cbz	r0, .L56
1170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 831              		.loc 1 1170 0
 832 0024 FFF7FEFF 		bl	HAL_DMA_Abort
 833              	.LVL72:
 834              	.L56:
1173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 835              		.loc 1 1173 0
 836 0028 2046     		mov	r0, r4
 837 002a FFF7FEFF 		bl	UART_EndTxTransfer
 838              	.LVL73:
 839              	.L55:
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 840              		.loc 1 1177 0
 841 002e 94F86A30 		ldrb	r3, [r4, #106]	@ zero_extendqisi2
 842 0032 DBB2     		uxtb	r3, r3
 843 0034 222B     		cmp	r3, #34
 844 0036 0FD1     		bne	.L57
1178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 845              		.loc 1 1178 0 discriminator 1
 846 0038 2368     		ldr	r3, [r4]
 847 003a 9A68     		ldr	r2, [r3, #8]
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 848              		.loc 1 1177 0 discriminator 1
 849 003c 12F0400F 		tst	r2, #64
 850 0040 0AD0     		beq	.L57
ARM GAS  /tmp/ccYpac0Q.s 			page 60


1180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 851              		.loc 1 1180 0
 852 0042 9A68     		ldr	r2, [r3, #8]
 853 0044 22F04002 		bic	r2, r2, #64
 854 0048 9A60     		str	r2, [r3, #8]
1183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 855              		.loc 1 1183 0
 856 004a 606E     		ldr	r0, [r4, #100]
 857 004c 08B1     		cbz	r0, .L58
1185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 858              		.loc 1 1185 0
 859 004e FFF7FEFF 		bl	HAL_DMA_Abort
 860              	.LVL74:
 861              	.L58:
1188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 862              		.loc 1 1188 0
 863 0052 2046     		mov	r0, r4
 864 0054 FFF7FEFF 		bl	UART_EndRxTransfer
 865              	.LVL75:
 866              	.L57:
1192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 867              		.loc 1 1192 0
 868 0058 0020     		movs	r0, #0
 869 005a 10BD     		pop	{r4, pc}
 870              		.cfi_endproc
 871              	.LFE139:
 873              		.section	.text.HAL_UART_Abort,"ax",%progbits
 874              		.align	2
 875              		.global	HAL_UART_Abort
 876              		.thumb
 877              		.thumb_func
 879              	HAL_UART_Abort:
 880              	.LFB140:
1207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 881              		.loc 1 1207 0
 882              		.cfi_startproc
 883              		@ args = 0, pretend = 0, frame = 0
 884              		@ frame_needed = 0, uses_anonymous_args = 0
 885              	.LVL76:
 886 0000 10B5     		push	{r4, lr}
 887              	.LCFI5:
 888              		.cfi_def_cfa_offset 8
 889              		.cfi_offset 4, -8
 890              		.cfi_offset 14, -4
 891 0002 0446     		mov	r4, r0
1209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 892              		.loc 1 1209 0
 893 0004 0268     		ldr	r2, [r0]
 894 0006 1368     		ldr	r3, [r2]
 895 0008 23F4F073 		bic	r3, r3, #480
 896 000c 1360     		str	r3, [r2]
1210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 897              		.loc 1 1210 0
 898 000e 0268     		ldr	r2, [r0]
 899 0010 9368     		ldr	r3, [r2, #8]
 900 0012 23F00103 		bic	r3, r3, #1
 901 0016 9360     		str	r3, [r2, #8]
ARM GAS  /tmp/ccYpac0Q.s 			page 61


1213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 902              		.loc 1 1213 0
 903 0018 0368     		ldr	r3, [r0]
 904 001a 9A68     		ldr	r2, [r3, #8]
 905 001c 12F0800F 		tst	r2, #128
 906 0020 0AD0     		beq	.L61
1215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 907              		.loc 1 1215 0
 908 0022 9A68     		ldr	r2, [r3, #8]
 909 0024 22F08002 		bic	r2, r2, #128
 910 0028 9A60     		str	r2, [r3, #8]
1218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 911              		.loc 1 1218 0
 912 002a 036E     		ldr	r3, [r0, #96]
 913 002c 23B1     		cbz	r3, .L61
1222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 914              		.loc 1 1222 0
 915 002e 0022     		movs	r2, #0
 916 0030 5A63     		str	r2, [r3, #52]
1224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 917              		.loc 1 1224 0
 918 0032 006E     		ldr	r0, [r0, #96]
 919              	.LVL77:
 920 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 921              	.LVL78:
 922              	.L61:
1229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 923              		.loc 1 1229 0
 924 0038 2368     		ldr	r3, [r4]
 925 003a 9A68     		ldr	r2, [r3, #8]
 926 003c 12F0400F 		tst	r2, #64
 927 0040 0AD0     		beq	.L62
1231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 928              		.loc 1 1231 0
 929 0042 9A68     		ldr	r2, [r3, #8]
 930 0044 22F04002 		bic	r2, r2, #64
 931 0048 9A60     		str	r2, [r3, #8]
1234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 932              		.loc 1 1234 0
 933 004a 636E     		ldr	r3, [r4, #100]
 934 004c 23B1     		cbz	r3, .L62
1238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 935              		.loc 1 1238 0
 936 004e 0022     		movs	r2, #0
 937 0050 5A63     		str	r2, [r3, #52]
1240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 938              		.loc 1 1240 0
 939 0052 606E     		ldr	r0, [r4, #100]
 940 0054 FFF7FEFF 		bl	HAL_DMA_Abort
 941              	.LVL79:
 942              	.L62:
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U; 
 943              		.loc 1 1245 0
 944 0058 0020     		movs	r0, #0
 945 005a A4F85200 		strh	r0, [r4, #82]	@ movhi
1246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 946              		.loc 1 1246 0
ARM GAS  /tmp/ccYpac0Q.s 			page 62


 947 005e A4F85A00 		strh	r0, [r4, #90]	@ movhi
1249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 948              		.loc 1 1249 0
 949 0062 2368     		ldr	r3, [r4]
 950 0064 0F22     		movs	r2, #15
 951 0066 1A62     		str	r2, [r3, #32]
1252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 952              		.loc 1 1252 0
 953 0068 2023     		movs	r3, #32
 954 006a 84F86930 		strb	r3, [r4, #105]
1253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 955              		.loc 1 1253 0
 956 006e 84F86A30 		strb	r3, [r4, #106]
1256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 957              		.loc 1 1256 0
 958 0072 E066     		str	r0, [r4, #108]
1259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 959              		.loc 1 1259 0
 960 0074 10BD     		pop	{r4, pc}
 961              		.cfi_endproc
 962              	.LFE140:
 964 0076 00BF     		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 965              		.align	2
 966              		.global	HAL_UART_AbortTransmit
 967              		.thumb
 968              		.thumb_func
 970              	HAL_UART_AbortTransmit:
 971              	.LFB141:
1274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 972              		.loc 1 1274 0
 973              		.cfi_startproc
 974              		@ args = 0, pretend = 0, frame = 0
 975              		@ frame_needed = 0, uses_anonymous_args = 0
 976              	.LVL80:
 977 0000 10B5     		push	{r4, lr}
 978              	.LCFI6:
 979              		.cfi_def_cfa_offset 8
 980              		.cfi_offset 4, -8
 981              		.cfi_offset 14, -4
 982 0002 0446     		mov	r4, r0
1276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 983              		.loc 1 1276 0
 984 0004 0268     		ldr	r2, [r0]
 985 0006 1368     		ldr	r3, [r2]
 986 0008 23F0C003 		bic	r3, r3, #192
 987 000c 1360     		str	r3, [r2]
1279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 988              		.loc 1 1279 0
 989 000e 0368     		ldr	r3, [r0]
 990 0010 9A68     		ldr	r2, [r3, #8]
 991 0012 12F0800F 		tst	r2, #128
 992 0016 0AD0     		beq	.L65
1281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 993              		.loc 1 1281 0
 994 0018 9A68     		ldr	r2, [r3, #8]
 995 001a 22F08002 		bic	r2, r2, #128
 996 001e 9A60     		str	r2, [r3, #8]
ARM GAS  /tmp/ccYpac0Q.s 			page 63


1284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 997              		.loc 1 1284 0
 998 0020 036E     		ldr	r3, [r0, #96]
 999 0022 23B1     		cbz	r3, .L65
1288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1000              		.loc 1 1288 0
 1001 0024 0022     		movs	r2, #0
 1002 0026 5A63     		str	r2, [r3, #52]
1290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1003              		.loc 1 1290 0
 1004 0028 006E     		ldr	r0, [r0, #96]
 1005              	.LVL81:
 1006 002a FFF7FEFF 		bl	HAL_DMA_Abort
 1007              	.LVL82:
 1008              	.L65:
1295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1009              		.loc 1 1295 0
 1010 002e 0020     		movs	r0, #0
 1011 0030 A4F85200 		strh	r0, [r4, #82]	@ movhi
1298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1012              		.loc 1 1298 0
 1013 0034 2023     		movs	r3, #32
 1014 0036 84F86930 		strb	r3, [r4, #105]
1301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1015              		.loc 1 1301 0
 1016 003a 10BD     		pop	{r4, pc}
 1017              		.cfi_endproc
 1018              	.LFE141:
 1020              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 1021              		.align	2
 1022              		.global	HAL_UART_AbortReceive
 1023              		.thumb
 1024              		.thumb_func
 1026              	HAL_UART_AbortReceive:
 1027              	.LFB142:
1316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1028              		.loc 1 1316 0
 1029              		.cfi_startproc
 1030              		@ args = 0, pretend = 0, frame = 0
 1031              		@ frame_needed = 0, uses_anonymous_args = 0
 1032              	.LVL83:
 1033 0000 10B5     		push	{r4, lr}
 1034              	.LCFI7:
 1035              		.cfi_def_cfa_offset 8
 1036              		.cfi_offset 4, -8
 1037              		.cfi_offset 14, -4
 1038 0002 0446     		mov	r4, r0
1318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1039              		.loc 1 1318 0
 1040 0004 0268     		ldr	r2, [r0]
 1041 0006 1368     		ldr	r3, [r2]
 1042 0008 23F49073 		bic	r3, r3, #288
 1043 000c 1360     		str	r3, [r2]
1319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1044              		.loc 1 1319 0
 1045 000e 0268     		ldr	r2, [r0]
 1046 0010 9368     		ldr	r3, [r2, #8]
ARM GAS  /tmp/ccYpac0Q.s 			page 64


 1047 0012 23F00103 		bic	r3, r3, #1
 1048 0016 9360     		str	r3, [r2, #8]
1322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1049              		.loc 1 1322 0
 1050 0018 0368     		ldr	r3, [r0]
 1051 001a 9A68     		ldr	r2, [r3, #8]
 1052 001c 12F0400F 		tst	r2, #64
 1053 0020 0AD0     		beq	.L68
1324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1054              		.loc 1 1324 0
 1055 0022 9A68     		ldr	r2, [r3, #8]
 1056 0024 22F04002 		bic	r2, r2, #64
 1057 0028 9A60     		str	r2, [r3, #8]
1327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1058              		.loc 1 1327 0
 1059 002a 436E     		ldr	r3, [r0, #100]
 1060 002c 23B1     		cbz	r3, .L68
1331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1061              		.loc 1 1331 0
 1062 002e 0022     		movs	r2, #0
 1063 0030 5A63     		str	r2, [r3, #52]
1333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1064              		.loc 1 1333 0
 1065 0032 406E     		ldr	r0, [r0, #100]
 1066              	.LVL84:
 1067 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 1068              	.LVL85:
 1069              	.L68:
1338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1070              		.loc 1 1338 0
 1071 0038 0020     		movs	r0, #0
 1072 003a A4F85A00 		strh	r0, [r4, #90]	@ movhi
1341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1073              		.loc 1 1341 0
 1074 003e 2368     		ldr	r3, [r4]
 1075 0040 0F22     		movs	r2, #15
 1076 0042 1A62     		str	r2, [r3, #32]
1344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1077              		.loc 1 1344 0
 1078 0044 2023     		movs	r3, #32
 1079 0046 84F86A30 		strb	r3, [r4, #106]
1347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1080              		.loc 1 1347 0
 1081 004a 10BD     		pop	{r4, pc}
 1082              		.cfi_endproc
 1083              	.LFE142:
 1085              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 1086              		.align	2
 1087              		.weak	HAL_UART_TxCpltCallback
 1088              		.thumb
 1089              		.thumb_func
 1091              	HAL_UART_TxCpltCallback:
 1092              	.LFB147:
1769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1093              		.loc 1 1769 0
 1094              		.cfi_startproc
 1095              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccYpac0Q.s 			page 65


 1096              		@ frame_needed = 0, uses_anonymous_args = 0
 1097              		@ link register save eliminated.
 1098              	.LVL86:
 1099 0000 7047     		bx	lr
 1100              		.cfi_endproc
 1101              	.LFE147:
 1103 0002 00BF     		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 1104              		.align	2
 1105              		.thumb
 1106              		.thumb_func
 1108              	UART_DMATransmitCplt:
 1109              	.LFB169:
2386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
2391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
2392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1110              		.loc 1 2395 0
 1111              		.cfi_startproc
 1112              		@ args = 0, pretend = 0, frame = 0
 1113              		@ frame_needed = 0, uses_anonymous_args = 0
 1114              	.LVL87:
 1115              		.loc 1 2395 0
 1116 0000 08B5     		push	{r3, lr}
 1117              	.LCFI8:
 1118              		.cfi_def_cfa_offset 8
 1119              		.cfi_offset 3, -8
 1120              		.cfi_offset 14, -4
2396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1121              		.loc 1 2396 0
 1122 0002 436A     		ldr	r3, [r0, #36]
 1123              	.LVL88:
2397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
2398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Normal mode */
2399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
 1124              		.loc 1 2399 0
 1125 0004 0268     		ldr	r2, [r0]
 1126 0006 1268     		ldr	r2, [r2]
 1127 0008 12F0200F 		tst	r2, #32
 1128 000c 0DD1     		bne	.L72
2400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U;
 1129              		.loc 1 2401 0
 1130 000e 0022     		movs	r2, #0
 1131 0010 A3F85220 		strh	r2, [r3, #82]	@ movhi
2402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
2404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        in the UART CR3 register */
2405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1132              		.loc 1 2405 0
 1133 0014 1968     		ldr	r1, [r3]
 1134 0016 8A68     		ldr	r2, [r1, #8]
ARM GAS  /tmp/ccYpac0Q.s 			page 66


 1135 0018 22F08002 		bic	r2, r2, #128
 1136 001c 8A60     		str	r2, [r1, #8]
2406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 1137              		.loc 1 2408 0
 1138 001e 1A68     		ldr	r2, [r3]
 1139 0020 1368     		ldr	r3, [r2]
 1140              	.LVL89:
 1141 0022 43F04003 		orr	r3, r3, #64
 1142 0026 1360     		str	r3, [r2]
 1143 0028 08BD     		pop	{r3, pc}
 1144              	.LVL90:
 1145              	.L72:
2409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Circular mode */
2411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
 1146              		.loc 1 2413 0
 1147 002a 1846     		mov	r0, r3
 1148              	.LVL91:
 1149 002c FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1150              	.LVL92:
 1151 0030 08BD     		pop	{r3, pc}
 1152              		.cfi_endproc
 1153              	.LFE169:
 1155 0032 00BF     		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 1156              		.align	2
 1157              		.weak	HAL_UART_TxHalfCpltCallback
 1158              		.thumb
 1159              		.thumb_func
 1161              	HAL_UART_TxHalfCpltCallback:
 1162              	.LFB148:
1784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1163              		.loc 1 1784 0
 1164              		.cfi_startproc
 1165              		@ args = 0, pretend = 0, frame = 0
 1166              		@ frame_needed = 0, uses_anonymous_args = 0
 1167              		@ link register save eliminated.
 1168              	.LVL93:
 1169 0000 7047     		bx	lr
 1170              		.cfi_endproc
 1171              	.LFE148:
 1173 0002 00BF     		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 1174              		.align	2
 1175              		.thumb
 1176              		.thumb_func
 1178              	UART_DMATxHalfCplt:
 1179              	.LFB170:
2414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
2420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
ARM GAS  /tmp/ccYpac0Q.s 			page 67


2421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
2424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1180              		.loc 1 2424 0
 1181              		.cfi_startproc
 1182              		@ args = 0, pretend = 0, frame = 0
 1183              		@ frame_needed = 0, uses_anonymous_args = 0
 1184              	.LVL94:
 1185              		.loc 1 2424 0
 1186 0000 08B5     		push	{r3, lr}
 1187              	.LCFI9:
 1188              		.cfi_def_cfa_offset 8
 1189              		.cfi_offset 3, -8
 1190              		.cfi_offset 14, -4
 1191              	.LVL95:
2425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
2426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 1192              		.loc 1 2427 0
 1193 0002 406A     		ldr	r0, [r0, #36]
 1194              	.LVL96:
 1195 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 1196              	.LVL97:
 1197 0008 08BD     		pop	{r3, pc}
 1198              		.cfi_endproc
 1199              	.LFE170:
 1201 000a 00BF     		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1202              		.align	2
 1203              		.weak	HAL_UART_RxCpltCallback
 1204              		.thumb
 1205              		.thumb_func
 1207              	HAL_UART_RxCpltCallback:
 1208              	.LFB149:
1799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1209              		.loc 1 1799 0
 1210              		.cfi_startproc
 1211              		@ args = 0, pretend = 0, frame = 0
 1212              		@ frame_needed = 0, uses_anonymous_args = 0
 1213              		@ link register save eliminated.
 1214              	.LVL98:
 1215 0000 7047     		bx	lr
 1216              		.cfi_endproc
 1217              	.LFE149:
 1219 0002 00BF     		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 1220              		.align	2
 1221              		.thumb
 1222              		.thumb_func
 1224              	UART_DMAReceiveCplt:
 1225              	.LFB171:
2428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
2432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
2433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
ARM GAS  /tmp/ccYpac0Q.s 			page 68


2435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1226              		.loc 1 2436 0
 1227              		.cfi_startproc
 1228              		@ args = 0, pretend = 0, frame = 0
 1229              		@ frame_needed = 0, uses_anonymous_args = 0
 1230              	.LVL99:
 1231              		.loc 1 2436 0
 1232 0000 08B5     		push	{r3, lr}
 1233              	.LCFI10:
 1234              		.cfi_def_cfa_offset 8
 1235              		.cfi_offset 3, -8
 1236              		.cfi_offset 14, -4
2437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1237              		.loc 1 2437 0
 1238 0002 436A     		ldr	r3, [r0, #36]
 1239              	.LVL100:
2438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Normal mode */
2440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
 1240              		.loc 1 2440 0
 1241 0004 0268     		ldr	r2, [r0]
 1242 0006 1268     		ldr	r2, [r2]
 1243 0008 12F0200F 		tst	r2, #32
 1244 000c 14D1     		bne	.L80
2441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
 1245              		.loc 1 2442 0
 1246 000e 0022     		movs	r2, #0
 1247 0010 A3F85A20 		strh	r2, [r3, #90]	@ movhi
2443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
2445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1248              		.loc 1 2445 0
 1249 0014 1968     		ldr	r1, [r3]
 1250 0016 0A68     		ldr	r2, [r1]
 1251 0018 22F48072 		bic	r2, r2, #256
 1252 001c 0A60     		str	r2, [r1]
2446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1253              		.loc 1 2446 0
 1254 001e 1968     		ldr	r1, [r3]
 1255 0020 8A68     		ldr	r2, [r1, #8]
 1256 0022 22F00102 		bic	r2, r2, #1
 1257 0026 8A60     		str	r2, [r1, #8]
2447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
2449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        in the UART CR3 register */
2450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1258              		.loc 1 2450 0
 1259 0028 1968     		ldr	r1, [r3]
 1260 002a 8A68     		ldr	r2, [r1, #8]
 1261 002c 22F04002 		bic	r2, r2, #64
 1262 0030 8A60     		str	r2, [r1, #8]
2451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
2453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1263              		.loc 1 2453 0
ARM GAS  /tmp/ccYpac0Q.s 			page 69


 1264 0032 2022     		movs	r2, #32
 1265 0034 83F86A20 		strb	r2, [r3, #106]
 1266              	.L80:
2454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
 1267              		.loc 1 2456 0
 1268 0038 1846     		mov	r0, r3
 1269              	.LVL101:
 1270 003a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1271              	.LVL102:
 1272 003e 08BD     		pop	{r3, pc}
 1273              		.cfi_endproc
 1274              	.LFE171:
 1276              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 1277              		.align	2
 1278              		.weak	HAL_UART_RxHalfCpltCallback
 1279              		.thumb
 1280              		.thumb_func
 1282              	HAL_UART_RxHalfCpltCallback:
 1283              	.LFB150:
1814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1284              		.loc 1 1814 0
 1285              		.cfi_startproc
 1286              		@ args = 0, pretend = 0, frame = 0
 1287              		@ frame_needed = 0, uses_anonymous_args = 0
 1288              		@ link register save eliminated.
 1289              	.LVL103:
 1290 0000 7047     		bx	lr
 1291              		.cfi_endproc
 1292              	.LFE150:
 1294 0002 00BF     		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 1295              		.align	2
 1296              		.thumb
 1297              		.thumb_func
 1299              	UART_DMARxHalfCplt:
 1300              	.LFB172:
2457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
2461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
2462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
2465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1301              		.loc 1 2465 0
 1302              		.cfi_startproc
 1303              		@ args = 0, pretend = 0, frame = 0
 1304              		@ frame_needed = 0, uses_anonymous_args = 0
 1305              	.LVL104:
 1306              		.loc 1 2465 0
 1307 0000 08B5     		push	{r3, lr}
 1308              	.LCFI11:
 1309              		.cfi_def_cfa_offset 8
 1310              		.cfi_offset 3, -8
 1311              		.cfi_offset 14, -4
ARM GAS  /tmp/ccYpac0Q.s 			page 70


 1312              	.LVL105:
2466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
2467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
 1313              		.loc 1 2468 0
 1314 0002 406A     		ldr	r0, [r0, #36]
 1315              	.LVL106:
 1316 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 1317              	.LVL107:
 1318 0008 08BD     		pop	{r3, pc}
 1319              		.cfi_endproc
 1320              	.LFE172:
 1322 000a 00BF     		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 1323              		.align	2
 1324              		.weak	HAL_UART_ErrorCallback
 1325              		.thumb
 1326              		.thumb_func
 1328              	HAL_UART_ErrorCallback:
 1329              	.LFB151:
1829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1330              		.loc 1 1829 0
 1331              		.cfi_startproc
 1332              		@ args = 0, pretend = 0, frame = 0
 1333              		@ frame_needed = 0, uses_anonymous_args = 0
 1334              		@ link register save eliminated.
 1335              	.LVL108:
 1336 0000 7047     		bx	lr
 1337              		.cfi_endproc
 1338              	.LFE151:
 1340 0002 00BF     		.section	.text.UART_DMAError,"ax",%progbits
 1341              		.align	2
 1342              		.thumb
 1343              		.thumb_func
 1345              	UART_DMAError:
 1346              	.LFB173:
2469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART communication error callback.
2473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
2474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
2477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1347              		.loc 1 2477 0
 1348              		.cfi_startproc
 1349              		@ args = 0, pretend = 0, frame = 0
 1350              		@ frame_needed = 0, uses_anonymous_args = 0
 1351              	.LVL109:
 1352              		.loc 1 2477 0
 1353 0000 10B5     		push	{r4, lr}
 1354              	.LCFI12:
 1355              		.cfi_def_cfa_offset 8
 1356              		.cfi_offset 4, -8
 1357              		.cfi_offset 14, -4
2478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1358              		.loc 1 2478 0
ARM GAS  /tmp/ccYpac0Q.s 			page 71


 1359 0002 446A     		ldr	r4, [r0, #36]
 1360              	.LVL110:
2479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
2481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (  (huart->gState == HAL_UART_STATE_BUSY_TX)
 1361              		.loc 1 2481 0
 1362 0004 94F86930 		ldrb	r3, [r4, #105]	@ zero_extendqisi2
 1363 0008 DBB2     		uxtb	r3, r3
 1364 000a 212B     		cmp	r3, #33
 1365 000c 0AD1     		bne	.L87
2482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) )
 1366              		.loc 1 2482 0
 1367 000e 2368     		ldr	r3, [r4]
 1368 0010 9B68     		ldr	r3, [r3, #8]
 1369 0012 13F0800F 		tst	r3, #128
 1370 0016 05D0     		beq	.L87
2483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U;
 1371              		.loc 1 2484 0
 1372 0018 0023     		movs	r3, #0
 1373 001a A4F85230 		strh	r3, [r4, #82]	@ movhi
2485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 1374              		.loc 1 2485 0
 1375 001e 2046     		mov	r0, r4
 1376              	.LVL111:
 1377 0020 FFF7FEFF 		bl	UART_EndTxTransfer
 1378              	.LVL112:
 1379              	.L87:
2486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
2489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (  (huart->RxState == HAL_UART_STATE_BUSY_RX)
 1380              		.loc 1 2489 0
 1381 0024 94F86A30 		ldrb	r3, [r4, #106]	@ zero_extendqisi2
 1382 0028 DBB2     		uxtb	r3, r3
 1383 002a 222B     		cmp	r3, #34
 1384 002c 0AD1     		bne	.L88
2490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) )
 1385              		.loc 1 2490 0
 1386 002e 2368     		ldr	r3, [r4]
 1387 0030 9B68     		ldr	r3, [r3, #8]
 1388 0032 13F0400F 		tst	r3, #64
 1389 0036 05D0     		beq	.L88
2491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
 1390              		.loc 1 2492 0
 1391 0038 0023     		movs	r3, #0
 1392 003a A4F85A30 		strh	r3, [r4, #90]	@ movhi
2493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 1393              		.loc 1 2493 0
 1394 003e 2046     		mov	r0, r4
 1395 0040 FFF7FEFF 		bl	UART_EndRxTransfer
 1396              	.LVL113:
 1397              	.L88:
2494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
ARM GAS  /tmp/ccYpac0Q.s 			page 72


 1398              		.loc 1 2496 0
 1399 0044 E36E     		ldr	r3, [r4, #108]
 1400 0046 43F01003 		orr	r3, r3, #16
 1401 004a E366     		str	r3, [r4, #108]
2497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 1402              		.loc 1 2497 0
 1403 004c 2046     		mov	r0, r4
 1404 004e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 1405              	.LVL114:
 1406 0052 10BD     		pop	{r4, pc}
 1407              		.cfi_endproc
 1408              	.LFE173:
 1410              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 1411              		.align	2
 1412              		.thumb
 1413              		.thumb_func
 1415              	UART_DMAAbortOnError:
 1416              	.LFB174:
2498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
2502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
2504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1417              		.loc 1 2507 0
 1418              		.cfi_startproc
 1419              		@ args = 0, pretend = 0, frame = 0
 1420              		@ frame_needed = 0, uses_anonymous_args = 0
 1421              	.LVL115:
 1422 0000 08B5     		push	{r3, lr}
 1423              	.LCFI13:
 1424              		.cfi_def_cfa_offset 8
 1425              		.cfi_offset 3, -8
 1426              		.cfi_offset 14, -4
2508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1427              		.loc 1 2508 0
 1428 0002 406A     		ldr	r0, [r0, #36]
 1429              	.LVL116:
2509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1430              		.loc 1 2509 0
 1431 0004 0023     		movs	r3, #0
 1432 0006 A0F85A30 		strh	r3, [r0, #90]	@ movhi
2510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
 1433              		.loc 1 2510 0
 1434 000a A0F85230 		strh	r3, [r0, #82]	@ movhi
2511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 1435              		.loc 1 2512 0
 1436 000e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 1437              	.LVL117:
 1438 0012 08BD     		pop	{r3, pc}
 1439              		.cfi_endproc
 1440              	.LFE174:
ARM GAS  /tmp/ccYpac0Q.s 			page 73


 1442              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 1443              		.align	2
 1444              		.weak	HAL_UART_AbortCpltCallback
 1445              		.thumb
 1446              		.thumb_func
 1448              	HAL_UART_AbortCpltCallback:
 1449              	.LFB152:
1844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1450              		.loc 1 1844 0
 1451              		.cfi_startproc
 1452              		@ args = 0, pretend = 0, frame = 0
 1453              		@ frame_needed = 0, uses_anonymous_args = 0
 1454              		@ link register save eliminated.
 1455              	.LVL118:
 1456 0000 7047     		bx	lr
 1457              		.cfi_endproc
 1458              	.LFE152:
 1460 0002 00BF     		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 1461              		.align	2
 1462              		.global	HAL_UART_Abort_IT
 1463              		.thumb
 1464              		.thumb_func
 1466              	HAL_UART_Abort_IT:
 1467              	.LFB143:
1364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 1468              		.loc 1 1364 0
 1469              		.cfi_startproc
 1470              		@ args = 0, pretend = 0, frame = 0
 1471              		@ frame_needed = 0, uses_anonymous_args = 0
 1472              	.LVL119:
1364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 1473              		.loc 1 1364 0
 1474 0000 10B5     		push	{r4, lr}
 1475              	.LCFI14:
 1476              		.cfi_def_cfa_offset 8
 1477              		.cfi_offset 4, -8
 1478              		.cfi_offset 14, -4
 1479 0002 0446     		mov	r4, r0
 1480              	.LVL120:
1368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1481              		.loc 1 1368 0
 1482 0004 0268     		ldr	r2, [r0]
 1483 0006 1368     		ldr	r3, [r2]
 1484 0008 23F4F073 		bic	r3, r3, #480
 1485 000c 1360     		str	r3, [r2]
1369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1486              		.loc 1 1369 0
 1487 000e 0268     		ldr	r2, [r0]
 1488 0010 9368     		ldr	r3, [r2, #8]
 1489 0012 23F00103 		bic	r3, r3, #1
 1490 0016 9360     		str	r3, [r2, #8]
1374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1491              		.loc 1 1374 0
 1492 0018 036E     		ldr	r3, [r0, #96]
 1493 001a 4BB1     		cbz	r3, .L94
1378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1494              		.loc 1 1378 0
ARM GAS  /tmp/ccYpac0Q.s 			page 74


 1495 001c 0268     		ldr	r2, [r0]
 1496 001e 9268     		ldr	r2, [r2, #8]
 1497 0020 12F0800F 		tst	r2, #128
 1498 0024 02D0     		beq	.L95
1380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1499              		.loc 1 1380 0
 1500 0026 284A     		ldr	r2, .L106
 1501 0028 5A63     		str	r2, [r3, #52]
 1502 002a 01E0     		b	.L94
 1503              	.L95:
1384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1504              		.loc 1 1384 0
 1505 002c 0022     		movs	r2, #0
 1506 002e 5A63     		str	r2, [r3, #52]
 1507              	.L94:
1388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1508              		.loc 1 1388 0
 1509 0030 636E     		ldr	r3, [r4, #100]
 1510 0032 4BB1     		cbz	r3, .L96
1392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1511              		.loc 1 1392 0
 1512 0034 2268     		ldr	r2, [r4]
 1513 0036 9268     		ldr	r2, [r2, #8]
 1514 0038 12F0400F 		tst	r2, #64
 1515 003c 02D0     		beq	.L97
1394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1516              		.loc 1 1394 0
 1517 003e 234A     		ldr	r2, .L106+4
 1518 0040 5A63     		str	r2, [r3, #52]
 1519 0042 01E0     		b	.L96
 1520              	.L97:
1398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1521              		.loc 1 1398 0
 1522 0044 0022     		movs	r2, #0
 1523 0046 5A63     		str	r2, [r3, #52]
 1524              	.L96:
1403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1525              		.loc 1 1403 0
 1526 0048 2368     		ldr	r3, [r4]
 1527 004a 9A68     		ldr	r2, [r3, #8]
 1528 004c 12F0800F 		tst	r2, #128
 1529 0050 0DD0     		beq	.L101
1406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1530              		.loc 1 1406 0
 1531 0052 9A68     		ldr	r2, [r3, #8]
 1532 0054 22F08002 		bic	r2, r2, #128
 1533 0058 9A60     		str	r2, [r3, #8]
1409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1534              		.loc 1 1409 0
 1535 005a 206E     		ldr	r0, [r4, #96]
 1536              	.LVL121:
 1537 005c 48B1     		cbz	r0, .L102
1415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 1538              		.loc 1 1415 0
 1539 005e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 1540              	.LVL122:
 1541 0062 40B1     		cbz	r0, .L103
ARM GAS  /tmp/ccYpac0Q.s 			page 75


1417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 1542              		.loc 1 1417 0
 1543 0064 236E     		ldr	r3, [r4, #96]
 1544 0066 0022     		movs	r2, #0
 1545 0068 5A63     		str	r2, [r3, #52]
1365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 1546              		.loc 1 1365 0
 1547 006a 0122     		movs	r2, #1
 1548 006c 04E0     		b	.L98
 1549              	.LVL123:
 1550              	.L101:
 1551 006e 0122     		movs	r2, #1
 1552 0070 02E0     		b	.L98
 1553              	.LVL124:
 1554              	.L102:
 1555 0072 0122     		movs	r2, #1
 1556 0074 00E0     		b	.L98
 1557              	.L103:
1421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 1558              		.loc 1 1421 0
 1559 0076 0022     		movs	r2, #0
 1560              	.L98:
 1561              	.LVL125:
1427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1562              		.loc 1 1427 0
 1563 0078 2368     		ldr	r3, [r4]
 1564 007a 9968     		ldr	r1, [r3, #8]
 1565 007c 11F0400F 		tst	r1, #64
 1566 0080 0ED0     		beq	.L99
1429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1567              		.loc 1 1429 0
 1568 0082 9968     		ldr	r1, [r3, #8]
 1569 0084 21F04001 		bic	r1, r1, #64
 1570 0088 9960     		str	r1, [r3, #8]
1432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1571              		.loc 1 1432 0
 1572 008a 606E     		ldr	r0, [r4, #100]
 1573 008c 40B1     		cbz	r0, .L99
1438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 1574              		.loc 1 1438 0
 1575 008e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 1576              	.LVL126:
 1577 0092 20B1     		cbz	r0, .L104
1440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         abortcplt = 1U;
 1578              		.loc 1 1440 0
 1579 0094 636E     		ldr	r3, [r4, #100]
 1580 0096 0022     		movs	r2, #0
 1581 0098 5A63     		str	r2, [r3, #52]
 1582              	.LVL127:
1441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 1583              		.loc 1 1441 0
 1584 009a 0122     		movs	r2, #1
 1585 009c 00E0     		b	.L99
 1586              	.LVL128:
 1587              	.L104:
1445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 1588              		.loc 1 1445 0
ARM GAS  /tmp/ccYpac0Q.s 			page 76


 1589 009e 0022     		movs	r2, #0
 1590              	.L99:
 1591              	.LVL129:
1451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1592              		.loc 1 1451 0
 1593 00a0 82B1     		cbz	r2, .L100
1454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
 1594              		.loc 1 1454 0
 1595 00a2 0023     		movs	r3, #0
 1596 00a4 A4F85230 		strh	r3, [r4, #82]	@ movhi
1455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1597              		.loc 1 1455 0
 1598 00a8 A4F85A30 		strh	r3, [r4, #90]	@ movhi
1458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1599              		.loc 1 1458 0
 1600 00ac E366     		str	r3, [r4, #108]
1461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1601              		.loc 1 1461 0
 1602 00ae 2368     		ldr	r3, [r4]
 1603 00b0 0F22     		movs	r2, #15
 1604              	.LVL130:
 1605 00b2 1A62     		str	r2, [r3, #32]
1464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1606              		.loc 1 1464 0
 1607 00b4 2023     		movs	r3, #32
 1608 00b6 84F86930 		strb	r3, [r4, #105]
1465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1609              		.loc 1 1465 0
 1610 00ba 84F86A30 		strb	r3, [r4, #106]
1468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 1611              		.loc 1 1468 0
 1612 00be 2046     		mov	r0, r4
 1613 00c0 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 1614              	.LVL131:
 1615              	.L100:
1472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1616              		.loc 1 1472 0
 1617 00c4 0020     		movs	r0, #0
 1618 00c6 10BD     		pop	{r4, pc}
 1619              	.LVL132:
 1620              	.L107:
 1621              		.align	2
 1622              	.L106:
 1623 00c8 00000000 		.word	UART_DMATxAbortCallback
 1624 00cc 00000000 		.word	UART_DMARxAbortCallback
 1625              		.cfi_endproc
 1626              	.LFE143:
 1628              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 1629              		.align	2
 1630              		.thumb
 1631              		.thumb_func
 1633              	UART_DMARxAbortCallback:
 1634              	.LFB176:
2513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
ARM GAS  /tmp/ccYpac0Q.s 			page 77


2517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
2520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
2521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
2526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
2527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
2528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->hdmarx != NULL)
2531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx->XferAbortCallback != NULL)
2533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return;
2535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
2538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
2540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
2541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset errorCode */
2543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
2547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
2553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
2559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
2562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
2563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1635              		.loc 1 2566 0
 1636              		.cfi_startproc
 1637              		@ args = 0, pretend = 0, frame = 0
 1638              		@ frame_needed = 0, uses_anonymous_args = 0
 1639              	.LVL133:
 1640 0000 08B5     		push	{r3, lr}
 1641              	.LCFI15:
ARM GAS  /tmp/ccYpac0Q.s 			page 78


 1642              		.cfi_def_cfa_offset 8
 1643              		.cfi_offset 3, -8
 1644              		.cfi_offset 14, -4
2567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
 1645              		.loc 1 2567 0
 1646 0002 406A     		ldr	r0, [r0, #36]
 1647              	.LVL134:
2568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
2569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 1648              		.loc 1 2569 0
 1649 0004 436E     		ldr	r3, [r0, #100]
 1650 0006 0022     		movs	r2, #0
 1651 0008 5A63     		str	r2, [r3, #52]
2570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->hdmatx != NULL)
 1652              		.loc 1 2572 0
 1653 000a 036E     		ldr	r3, [r0, #96]
 1654 000c 0BB1     		cbz	r3, .L109
2573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx->XferAbortCallback != NULL)
 1655              		.loc 1 2574 0
 1656 000e 5B6B     		ldr	r3, [r3, #52]
 1657 0010 7BB9     		cbnz	r3, .L108
 1658              	.L109:
2575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return;
2577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
2580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
 1659              		.loc 1 2581 0
 1660 0012 0023     		movs	r3, #0
 1661 0014 A0F85230 		strh	r3, [r0, #82]	@ movhi
2582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1662              		.loc 1 2582 0
 1663 0018 A0F85A30 		strh	r3, [r0, #90]	@ movhi
2583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset errorCode */
2585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 1664              		.loc 1 2585 0
 1665 001c C366     		str	r3, [r0, #108]
2586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 1666              		.loc 1 2588 0
 1667 001e 0368     		ldr	r3, [r0]
 1668 0020 0F22     		movs	r2, #15
 1669 0022 1A62     		str	r2, [r3, #32]
2589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 1670              		.loc 1 2591 0
 1671 0024 2023     		movs	r3, #32
 1672 0026 80F86930 		strb	r3, [r0, #105]
2592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
ARM GAS  /tmp/ccYpac0Q.s 			page 79


 1673              		.loc 1 2592 0
 1674 002a 80F86A30 		strb	r3, [r0, #106]
2593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
2595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 1675              		.loc 1 2595 0
 1676 002e FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 1677              	.LVL135:
 1678              	.L108:
 1679 0032 08BD     		pop	{r3, pc}
 1680              		.cfi_endproc
 1681              	.LFE176:
 1683              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 1684              		.align	2
 1685              		.thumb
 1686              		.thumb_func
 1688              	UART_DMATxAbortCallback:
 1689              	.LFB175:
2524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
 1690              		.loc 1 2524 0
 1691              		.cfi_startproc
 1692              		@ args = 0, pretend = 0, frame = 0
 1693              		@ frame_needed = 0, uses_anonymous_args = 0
 1694              	.LVL136:
 1695 0000 08B5     		push	{r3, lr}
 1696              	.LCFI16:
 1697              		.cfi_def_cfa_offset 8
 1698              		.cfi_offset 3, -8
 1699              		.cfi_offset 14, -4
2525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 1700              		.loc 1 2525 0
 1701 0002 406A     		ldr	r0, [r0, #36]
 1702              	.LVL137:
2527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1703              		.loc 1 2527 0
 1704 0004 036E     		ldr	r3, [r0, #96]
 1705 0006 0022     		movs	r2, #0
 1706 0008 5A63     		str	r2, [r3, #52]
2530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1707              		.loc 1 2530 0
 1708 000a 436E     		ldr	r3, [r0, #100]
 1709 000c 0BB1     		cbz	r3, .L113
2532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1710              		.loc 1 2532 0
 1711 000e 5B6B     		ldr	r3, [r3, #52]
 1712 0010 7BB9     		cbnz	r3, .L112
 1713              	.L113:
2539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1714              		.loc 1 2539 0
 1715 0012 0023     		movs	r3, #0
 1716 0014 A0F85230 		strh	r3, [r0, #82]	@ movhi
2540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1717              		.loc 1 2540 0
 1718 0018 A0F85A30 		strh	r3, [r0, #90]	@ movhi
2543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1719              		.loc 1 2543 0
 1720 001c C366     		str	r3, [r0, #108]
ARM GAS  /tmp/ccYpac0Q.s 			page 80


2546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1721              		.loc 1 2546 0
 1722 001e 0368     		ldr	r3, [r0]
 1723 0020 0F22     		movs	r2, #15
 1724 0022 1A62     		str	r2, [r3, #32]
2549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1725              		.loc 1 2549 0
 1726 0024 2023     		movs	r3, #32
 1727 0026 80F86930 		strb	r3, [r0, #105]
2550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1728              		.loc 1 2550 0
 1729 002a 80F86A30 		strb	r3, [r0, #106]
2553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1730              		.loc 1 2553 0
 1731 002e FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 1732              	.LVL138:
 1733              	.L112:
 1734 0032 08BD     		pop	{r3, pc}
 1735              		.cfi_endproc
 1736              	.LFE175:
 1738              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 1739              		.align	2
 1740              		.weak	HAL_UART_AbortTransmitCpltCallback
 1741              		.thumb
 1742              		.thumb_func
 1744              	HAL_UART_AbortTransmitCpltCallback:
 1745              	.LFB153:
1859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1746              		.loc 1 1859 0
 1747              		.cfi_startproc
 1748              		@ args = 0, pretend = 0, frame = 0
 1749              		@ frame_needed = 0, uses_anonymous_args = 0
 1750              		@ link register save eliminated.
 1751              	.LVL139:
 1752 0000 7047     		bx	lr
 1753              		.cfi_endproc
 1754              	.LFE153:
 1756 0002 00BF     		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 1757              		.align	2
 1758              		.global	HAL_UART_AbortTransmit_IT
 1759              		.thumb
 1760              		.thumb_func
 1762              	HAL_UART_AbortTransmit_IT:
 1763              	.LFB144:
1489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 1764              		.loc 1 1489 0
 1765              		.cfi_startproc
 1766              		@ args = 0, pretend = 0, frame = 0
 1767              		@ frame_needed = 0, uses_anonymous_args = 0
 1768              	.LVL140:
1489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 1769              		.loc 1 1489 0
 1770 0000 10B5     		push	{r4, lr}
 1771              	.LCFI17:
 1772              		.cfi_def_cfa_offset 8
 1773              		.cfi_offset 4, -8
 1774              		.cfi_offset 14, -4
ARM GAS  /tmp/ccYpac0Q.s 			page 81


 1775 0002 0446     		mov	r4, r0
1491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1776              		.loc 1 1491 0
 1777 0004 0268     		ldr	r2, [r0]
 1778 0006 1368     		ldr	r3, [r2]
 1779 0008 23F0C003 		bic	r3, r3, #192
 1780 000c 1360     		str	r3, [r2]
1494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1781              		.loc 1 1494 0
 1782 000e 0368     		ldr	r3, [r0]
 1783 0010 9A68     		ldr	r2, [r3, #8]
 1784 0012 12F0800F 		tst	r2, #128
 1785 0016 18D0     		beq	.L118
1496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1786              		.loc 1 1496 0
 1787 0018 9A68     		ldr	r2, [r3, #8]
 1788 001a 22F08002 		bic	r2, r2, #128
 1789 001e 9A60     		str	r2, [r3, #8]
1499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1790              		.loc 1 1499 0
 1791 0020 036E     		ldr	r3, [r0, #96]
 1792 0022 4BB1     		cbz	r3, .L119
1503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1793              		.loc 1 1503 0
 1794 0024 0E4A     		ldr	r2, .L122
 1795 0026 5A63     		str	r2, [r3, #52]
1506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 1796              		.loc 1 1506 0
 1797 0028 006E     		ldr	r0, [r0, #96]
 1798              	.LVL141:
 1799 002a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 1800              	.LVL142:
 1801 002e A0B1     		cbz	r0, .L120
1509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 1802              		.loc 1 1509 0
 1803 0030 206E     		ldr	r0, [r4, #96]
 1804 0032 436B     		ldr	r3, [r0, #52]
 1805 0034 9847     		blx	r3
 1806              	.LVL143:
 1807 0036 10E0     		b	.L120
 1808              	.LVL144:
 1809              	.L119:
1515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1810              		.loc 1 1515 0
 1811 0038 0023     		movs	r3, #0
 1812 003a A0F85230 		strh	r3, [r0, #82]	@ movhi
1518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1813              		.loc 1 1518 0
 1814 003e 2023     		movs	r3, #32
 1815 0040 80F86930 		strb	r3, [r0, #105]
1521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1816              		.loc 1 1521 0
 1817 0044 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 1818              	.LVL145:
 1819 0048 07E0     		b	.L120
 1820              	.LVL146:
 1821              	.L118:
ARM GAS  /tmp/ccYpac0Q.s 			page 82


1527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1822              		.loc 1 1527 0
 1823 004a 0023     		movs	r3, #0
 1824 004c A0F85230 		strh	r3, [r0, #82]	@ movhi
1530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1825              		.loc 1 1530 0
 1826 0050 2023     		movs	r3, #32
 1827 0052 80F86930 		strb	r3, [r0, #105]
1533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 1828              		.loc 1 1533 0
 1829 0056 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 1830              	.LVL147:
 1831              	.L120:
1537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1832              		.loc 1 1537 0
 1833 005a 0020     		movs	r0, #0
 1834 005c 10BD     		pop	{r4, pc}
 1835              	.LVL148:
 1836              	.L123:
 1837 005e 00BF     		.align	2
 1838              	.L122:
 1839 0060 00000000 		.word	UART_DMATxOnlyAbortCallback
 1840              		.cfi_endproc
 1841              	.LFE144:
 1843              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 1844              		.align	2
 1845              		.thumb
 1846              		.thumb_func
 1848              	UART_DMATxOnlyAbortCallback:
 1849              	.LFB177:
2596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
2601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
2602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
2603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
2604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
2605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1850              		.loc 1 2608 0
 1851              		.cfi_startproc
 1852              		@ args = 0, pretend = 0, frame = 0
 1853              		@ frame_needed = 0, uses_anonymous_args = 0
 1854              	.LVL149:
 1855 0000 08B5     		push	{r3, lr}
 1856              	.LCFI18:
 1857              		.cfi_def_cfa_offset 8
 1858              		.cfi_offset 3, -8
 1859              		.cfi_offset 14, -4
2609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1860              		.loc 1 2609 0
 1861 0002 406A     		ldr	r0, [r0, #36]
 1862              	.LVL150:
ARM GAS  /tmp/ccYpac0Q.s 			page 83


2610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
 1863              		.loc 1 2611 0
 1864 0004 0023     		movs	r3, #0
 1865 0006 A0F85230 		strh	r3, [r0, #82]	@ movhi
2612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState to Ready */
2614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 1866              		.loc 1 2614 0
 1867 000a 2023     		movs	r3, #32
 1868 000c 80F86930 		strb	r3, [r0, #105]
2615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
2617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
 1869              		.loc 1 2617 0
 1870 0010 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 1871              	.LVL151:
 1872 0014 08BD     		pop	{r3, pc}
 1873              		.cfi_endproc
 1874              	.LFE177:
 1876 0016 00BF     		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 1877              		.align	2
 1878              		.weak	HAL_UART_AbortReceiveCpltCallback
 1879              		.thumb
 1880              		.thumb_func
 1882              	HAL_UART_AbortReceiveCpltCallback:
 1883              	.LFB154:
1874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1884              		.loc 1 1874 0
 1885              		.cfi_startproc
 1886              		@ args = 0, pretend = 0, frame = 0
 1887              		@ frame_needed = 0, uses_anonymous_args = 0
 1888              		@ link register save eliminated.
 1889              	.LVL152:
 1890 0000 7047     		bx	lr
 1891              		.cfi_endproc
 1892              	.LFE154:
 1894 0002 00BF     		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 1895              		.align	2
 1896              		.global	HAL_UART_AbortReceive_IT
 1897              		.thumb
 1898              		.thumb_func
 1900              	HAL_UART_AbortReceive_IT:
 1901              	.LFB145:
1554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1902              		.loc 1 1554 0
 1903              		.cfi_startproc
 1904              		@ args = 0, pretend = 0, frame = 0
 1905              		@ frame_needed = 0, uses_anonymous_args = 0
 1906              	.LVL153:
1554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1907              		.loc 1 1554 0
 1908 0000 10B5     		push	{r4, lr}
 1909              	.LCFI19:
 1910              		.cfi_def_cfa_offset 8
 1911              		.cfi_offset 4, -8
 1912              		.cfi_offset 14, -4
ARM GAS  /tmp/ccYpac0Q.s 			page 84


 1913 0002 0446     		mov	r4, r0
1556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1914              		.loc 1 1556 0
 1915 0004 0268     		ldr	r2, [r0]
 1916 0006 1368     		ldr	r3, [r2]
 1917 0008 23F49073 		bic	r3, r3, #288
 1918 000c 1360     		str	r3, [r2]
1557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1919              		.loc 1 1557 0
 1920 000e 0268     		ldr	r2, [r0]
 1921 0010 9368     		ldr	r3, [r2, #8]
 1922 0012 23F00103 		bic	r3, r3, #1
 1923 0016 9360     		str	r3, [r2, #8]
1560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1924              		.loc 1 1560 0
 1925 0018 0368     		ldr	r3, [r0]
 1926 001a 9A68     		ldr	r2, [r3, #8]
 1927 001c 12F0400F 		tst	r2, #64
 1928 0020 1BD0     		beq	.L128
1562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1929              		.loc 1 1562 0
 1930 0022 9A68     		ldr	r2, [r3, #8]
 1931 0024 22F04002 		bic	r2, r2, #64
 1932 0028 9A60     		str	r2, [r3, #8]
1565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1933              		.loc 1 1565 0
 1934 002a 436E     		ldr	r3, [r0, #100]
 1935 002c 4BB1     		cbz	r3, .L129
1569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1936              		.loc 1 1569 0
 1937 002e 114A     		ldr	r2, .L132
 1938 0030 5A63     		str	r2, [r3, #52]
1572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 1939              		.loc 1 1572 0
 1940 0032 406E     		ldr	r0, [r0, #100]
 1941              	.LVL154:
 1942 0034 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 1943              	.LVL155:
 1944 0038 C8B1     		cbz	r0, .L130
1575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 1945              		.loc 1 1575 0
 1946 003a 606E     		ldr	r0, [r4, #100]
 1947 003c 436B     		ldr	r3, [r0, #52]
 1948 003e 9847     		blx	r3
 1949              	.LVL156:
 1950 0040 15E0     		b	.L130
 1951              	.LVL157:
 1952              	.L129:
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1953              		.loc 1 1581 0
 1954 0042 0023     		movs	r3, #0
 1955 0044 A0F85A30 		strh	r3, [r0, #90]	@ movhi
1584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1956              		.loc 1 1584 0
 1957 0048 0368     		ldr	r3, [r0]
 1958 004a 0F22     		movs	r2, #15
 1959 004c 1A62     		str	r2, [r3, #32]
ARM GAS  /tmp/ccYpac0Q.s 			page 85


1587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1960              		.loc 1 1587 0
 1961 004e 2023     		movs	r3, #32
 1962 0050 80F86A30 		strb	r3, [r0, #106]
1590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1963              		.loc 1 1590 0
 1964 0054 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 1965              	.LVL158:
 1966 0058 09E0     		b	.L130
 1967              	.LVL159:
 1968              	.L128:
1596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1969              		.loc 1 1596 0
 1970 005a 0022     		movs	r2, #0
 1971 005c A0F85A20 		strh	r2, [r0, #90]	@ movhi
1599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1972              		.loc 1 1599 0
 1973 0060 0F22     		movs	r2, #15
 1974 0062 1A62     		str	r2, [r3, #32]
1602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1975              		.loc 1 1602 0
 1976 0064 2023     		movs	r3, #32
 1977 0066 80F86A30 		strb	r3, [r0, #106]
1605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 1978              		.loc 1 1605 0
 1979 006a FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 1980              	.LVL160:
 1981              	.L130:
1609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1982              		.loc 1 1609 0
 1983 006e 0020     		movs	r0, #0
 1984 0070 10BD     		pop	{r4, pc}
 1985              	.LVL161:
 1986              	.L133:
 1987 0072 00BF     		.align	2
 1988              	.L132:
 1989 0074 00000000 		.word	UART_DMARxOnlyAbortCallback
 1990              		.cfi_endproc
 1991              	.LFE145:
 1993              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 1994              		.align	2
 1995              		.thumb
 1996              		.thumb_func
 1998              	UART_DMARxOnlyAbortCallback:
 1999              	.LFB178:
2618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
2622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
2623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
2624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
2625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
2626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
ARM GAS  /tmp/ccYpac0Q.s 			page 86


 2000              		.loc 1 2629 0
 2001              		.cfi_startproc
 2002              		@ args = 0, pretend = 0, frame = 0
 2003              		@ frame_needed = 0, uses_anonymous_args = 0
 2004              	.LVL162:
 2005 0000 08B5     		push	{r3, lr}
 2006              	.LCFI20:
 2007              		.cfi_def_cfa_offset 8
 2008              		.cfi_offset 3, -8
 2009              		.cfi_offset 14, -4
2630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2010              		.loc 1 2630 0
 2011 0002 406A     		ldr	r0, [r0, #36]
 2012              	.LVL163:
2631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2013              		.loc 1 2632 0
 2014 0004 0023     		movs	r3, #0
 2015 0006 A0F85A30 		strh	r3, [r0, #90]	@ movhi
2633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 2016              		.loc 1 2635 0
 2017 000a 0368     		ldr	r3, [r0]
 2018 000c 0F22     		movs	r2, #15
 2019 000e 1A62     		str	r2, [r3, #32]
2636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2020              		.loc 1 2638 0
 2021 0010 2023     		movs	r3, #32
 2022 0012 80F86A30 		strb	r3, [r0, #106]
2639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
2641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
 2023              		.loc 1 2641 0
 2024 0016 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2025              	.LVL164:
 2026 001a 08BD     		pop	{r3, pc}
 2027              		.cfi_endproc
 2028              	.LFE178:
 2030              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 2031              		.align	2
 2032              		.global	HAL_MultiProcessor_EnterMuteMode
 2033              		.thumb
 2034              		.thumb_func
 2036              	HAL_MultiProcessor_EnterMuteMode:
 2037              	.LFB157:
1955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 2038              		.loc 1 1955 0
 2039              		.cfi_startproc
 2040              		@ args = 0, pretend = 0, frame = 0
 2041              		@ frame_needed = 0, uses_anonymous_args = 0
 2042              		@ link register save eliminated.
 2043              	.LVL165:
1956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2044              		.loc 1 1956 0
ARM GAS  /tmp/ccYpac0Q.s 			page 87


 2045 0000 0268     		ldr	r2, [r0]
 2046 0002 9369     		ldr	r3, [r2, #24]
 2047 0004 43F00403 		orr	r3, r3, #4
 2048 0008 9361     		str	r3, [r2, #24]
 2049 000a 7047     		bx	lr
 2050              		.cfi_endproc
 2051              	.LFE157:
 2053              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 2054              		.align	2
 2055              		.global	HAL_HalfDuplex_EnableTransmitter
 2056              		.thumb
 2057              		.thumb_func
 2059              	HAL_HalfDuplex_EnableTransmitter:
 2060              	.LFB158:
1965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
 2061              		.loc 1 1965 0
 2062              		.cfi_startproc
 2063              		@ args = 0, pretend = 0, frame = 0
 2064              		@ frame_needed = 0, uses_anonymous_args = 0
 2065              		@ link register save eliminated.
 2066              	.LVL166:
1967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2067              		.loc 1 1967 0
 2068 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 2069 0004 012B     		cmp	r3, #1
 2070 0006 17D0     		beq	.L139
1967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2071              		.loc 1 1967 0 is_stmt 0 discriminator 2
 2072 0008 0123     		movs	r3, #1
 2073 000a 80F86830 		strb	r3, [r0, #104]
1968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2074              		.loc 1 1968 0 is_stmt 1 discriminator 2
 2075 000e 2423     		movs	r3, #36
 2076 0010 80F86930 		strb	r3, [r0, #105]
1971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
 2077              		.loc 1 1971 0 discriminator 2
 2078 0014 0268     		ldr	r2, [r0]
 2079 0016 1368     		ldr	r3, [r2]
 2080 0018 23F00C03 		bic	r3, r3, #12
 2081 001c 1360     		str	r3, [r2]
1973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2082              		.loc 1 1973 0 discriminator 2
 2083 001e 0268     		ldr	r2, [r0]
 2084 0020 1368     		ldr	r3, [r2]
 2085 0022 43F00803 		orr	r3, r3, #8
 2086 0026 1360     		str	r3, [r2]
1975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2087              		.loc 1 1975 0 discriminator 2
 2088 0028 2023     		movs	r3, #32
 2089 002a 80F86930 		strb	r3, [r0, #105]
1978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2090              		.loc 1 1978 0 discriminator 2
 2091 002e 0023     		movs	r3, #0
 2092 0030 80F86830 		strb	r3, [r0, #104]
1980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2093              		.loc 1 1980 0 discriminator 2
 2094 0034 1846     		mov	r0, r3
ARM GAS  /tmp/ccYpac0Q.s 			page 88


 2095              	.LVL167:
 2096 0036 7047     		bx	lr
 2097              	.LVL168:
 2098              	.L139:
1967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2099              		.loc 1 1967 0
 2100 0038 0220     		movs	r0, #2
 2101              	.LVL169:
1981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2102              		.loc 1 1981 0
 2103 003a 7047     		bx	lr
 2104              		.cfi_endproc
 2105              	.LFE158:
 2107              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 2108              		.align	2
 2109              		.global	HAL_HalfDuplex_EnableReceiver
 2110              		.thumb
 2111              		.thumb_func
 2113              	HAL_HalfDuplex_EnableReceiver:
 2114              	.LFB159:
1989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
 2115              		.loc 1 1989 0
 2116              		.cfi_startproc
 2117              		@ args = 0, pretend = 0, frame = 0
 2118              		@ frame_needed = 0, uses_anonymous_args = 0
 2119              		@ link register save eliminated.
 2120              	.LVL170:
1991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2121              		.loc 1 1991 0
 2122 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 2123 0004 012B     		cmp	r3, #1
 2124 0006 17D0     		beq	.L142
1991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2125              		.loc 1 1991 0 is_stmt 0 discriminator 2
 2126 0008 0123     		movs	r3, #1
 2127 000a 80F86830 		strb	r3, [r0, #104]
1992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2128              		.loc 1 1992 0 is_stmt 1 discriminator 2
 2129 000e 2423     		movs	r3, #36
 2130 0010 80F86930 		strb	r3, [r0, #105]
1995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
 2131              		.loc 1 1995 0 discriminator 2
 2132 0014 0268     		ldr	r2, [r0]
 2133 0016 1368     		ldr	r3, [r2]
 2134 0018 23F00C03 		bic	r3, r3, #12
 2135 001c 1360     		str	r3, [r2]
1997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2136              		.loc 1 1997 0 discriminator 2
 2137 001e 0268     		ldr	r2, [r0]
 2138 0020 1368     		ldr	r3, [r2]
 2139 0022 43F00403 		orr	r3, r3, #4
 2140 0026 1360     		str	r3, [r2]
1999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
 2141              		.loc 1 1999 0 discriminator 2
 2142 0028 2023     		movs	r3, #32
 2143 002a 80F86930 		strb	r3, [r0, #105]
2001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccYpac0Q.s 			page 89


 2144              		.loc 1 2001 0 discriminator 2
 2145 002e 0023     		movs	r3, #0
 2146 0030 80F86830 		strb	r3, [r0, #104]
2003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2147              		.loc 1 2003 0 discriminator 2
 2148 0034 1846     		mov	r0, r3
 2149              	.LVL171:
 2150 0036 7047     		bx	lr
 2151              	.LVL172:
 2152              	.L142:
1991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2153              		.loc 1 1991 0
 2154 0038 0220     		movs	r0, #2
 2155              	.LVL173:
2004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2156              		.loc 1 2004 0
 2157 003a 7047     		bx	lr
 2158              		.cfi_endproc
 2159              	.LFE159:
 2161              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 2162              		.align	2
 2163              		.global	HAL_LIN_SendBreak
 2164              		.thumb
 2165              		.thumb_func
 2167              	HAL_LIN_SendBreak:
 2168              	.LFB160:
2013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
 2169              		.loc 1 2013 0
 2170              		.cfi_startproc
 2171              		@ args = 0, pretend = 0, frame = 0
 2172              		@ frame_needed = 0, uses_anonymous_args = 0
 2173              		@ link register save eliminated.
 2174              	.LVL174:
2018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2175              		.loc 1 2018 0
 2176 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 2177 0004 012B     		cmp	r3, #1
 2178 0006 12D0     		beq	.L145
2018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2179              		.loc 1 2018 0 is_stmt 0 discriminator 2
 2180 0008 0123     		movs	r3, #1
 2181 000a 80F86830 		strb	r3, [r0, #104]
2020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2182              		.loc 1 2020 0 is_stmt 1 discriminator 2
 2183 000e 2423     		movs	r3, #36
 2184 0010 80F86930 		strb	r3, [r0, #105]
2023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2185              		.loc 1 2023 0 discriminator 2
 2186 0014 0268     		ldr	r2, [r0]
 2187 0016 9369     		ldr	r3, [r2, #24]
 2188 0018 43F00203 		orr	r3, r3, #2
 2189 001c 9361     		str	r3, [r2, #24]
2025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2190              		.loc 1 2025 0 discriminator 2
 2191 001e 2023     		movs	r3, #32
 2192 0020 80F86930 		strb	r3, [r0, #105]
2028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccYpac0Q.s 			page 90


 2193              		.loc 1 2028 0 discriminator 2
 2194 0024 0023     		movs	r3, #0
 2195 0026 80F86830 		strb	r3, [r0, #104]
2030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2196              		.loc 1 2030 0 discriminator 2
 2197 002a 1846     		mov	r0, r3
 2198              	.LVL175:
 2199 002c 7047     		bx	lr
 2200              	.LVL176:
 2201              	.L145:
2018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2202              		.loc 1 2018 0
 2203 002e 0220     		movs	r0, #2
 2204              	.LVL177:
2031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2205              		.loc 1 2031 0
 2206 0030 7047     		bx	lr
 2207              		.cfi_endproc
 2208              	.LFE160:
 2210 0032 00BF     		.section	.text.HAL_UART_GetState,"ax",%progbits
 2211              		.align	2
 2212              		.global	HAL_UART_GetState
 2213              		.thumb
 2214              		.thumb_func
 2216              	HAL_UART_GetState:
 2217              	.LFB161:
2061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
 2218              		.loc 1 2061 0
 2219              		.cfi_startproc
 2220              		@ args = 0, pretend = 0, frame = 0
 2221              		@ frame_needed = 0, uses_anonymous_args = 0
 2222              		@ link register save eliminated.
 2223              	.LVL178:
2063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   temp2 = huart->RxState;
 2224              		.loc 1 2063 0
 2225 0000 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 2226              	.LVL179:
2064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2227              		.loc 1 2064 0
 2228 0004 90F86A00 		ldrb	r0, [r0, #106]	@ zero_extendqisi2
 2229              	.LVL180:
2067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2230              		.loc 1 2067 0
 2231 0008 1843     		orrs	r0, r0, r3
 2232              	.LVL181:
 2233 000a 7047     		bx	lr
 2234              		.cfi_endproc
 2235              	.LFE161:
 2237              		.section	.text.HAL_UART_GetError,"ax",%progbits
 2238              		.align	2
 2239              		.global	HAL_UART_GetError
 2240              		.thumb
 2241              		.thumb_func
 2243              	HAL_UART_GetError:
 2244              	.LFB162:
2076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return huart->ErrorCode;
 2245              		.loc 1 2076 0
ARM GAS  /tmp/ccYpac0Q.s 			page 91


 2246              		.cfi_startproc
 2247              		@ args = 0, pretend = 0, frame = 0
 2248              		@ frame_needed = 0, uses_anonymous_args = 0
 2249              		@ link register save eliminated.
 2250              	.LVL182:
2077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2251              		.loc 1 2077 0
 2252 0000 C06E     		ldr	r0, [r0, #108]
 2253              	.LVL183:
2078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 2254              		.loc 1 2078 0
 2255 0002 7047     		bx	lr
 2256              		.cfi_endproc
 2257              	.LFE162:
 2259              		.section	.text.UART_SetConfig,"ax",%progbits
 2260              		.align	2
 2261              		.global	UART_SetConfig
 2262              		.thumb
 2263              		.thumb_func
 2265              	UART_SetConfig:
 2266              	.LFB163:
2097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
 2267              		.loc 1 2097 0
 2268              		.cfi_startproc
 2269              		@ args = 0, pretend = 0, frame = 0
 2270              		@ frame_needed = 0, uses_anonymous_args = 0
 2271              	.LVL184:
 2272 0000 38B5     		push	{r3, r4, r5, lr}
 2273              	.LCFI21:
 2274              		.cfi_def_cfa_offset 16
 2275              		.cfi_offset 3, -16
 2276              		.cfi_offset 4, -12
 2277              		.cfi_offset 5, -8
 2278              		.cfi_offset 14, -4
 2279 0002 0446     		mov	r4, r0
 2280              	.LVL185:
2122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2281              		.loc 1 2122 0
 2282 0004 8168     		ldr	r1, [r0, #8]
 2283 0006 0369     		ldr	r3, [r0, #16]
 2284 0008 1943     		orrs	r1, r1, r3
 2285 000a 4369     		ldr	r3, [r0, #20]
 2286 000c 1943     		orrs	r1, r1, r3
 2287 000e C369     		ldr	r3, [r0, #28]
 2288 0010 1943     		orrs	r1, r1, r3
 2289              	.LVL186:
2123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2290              		.loc 1 2123 0
 2291 0012 0068     		ldr	r0, [r0]
 2292              	.LVL187:
 2293 0014 0268     		ldr	r2, [r0]
 2294 0016 22F41643 		bic	r3, r2, #38400
 2295 001a 23F00C03 		bic	r3, r3, #12
 2296 001e 0B43     		orrs	r3, r3, r1
 2297 0020 0360     		str	r3, [r0]
2128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2298              		.loc 1 2128 0
ARM GAS  /tmp/ccYpac0Q.s 			page 92


 2299 0022 2168     		ldr	r1, [r4]
 2300              	.LVL188:
 2301 0024 4B68     		ldr	r3, [r1, #4]
 2302 0026 23F44052 		bic	r2, r3, #12288
 2303 002a E368     		ldr	r3, [r4, #12]
 2304 002c 1343     		orrs	r3, r3, r2
 2305 002e 4B60     		str	r3, [r1, #4]
2136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 2306              		.loc 1 2136 0
 2307 0030 A269     		ldr	r2, [r4, #24]
 2308 0032 236A     		ldr	r3, [r4, #32]
 2309 0034 1A43     		orrs	r2, r2, r3
 2310              	.LVL189:
2137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2311              		.loc 1 2137 0
 2312 0036 2168     		ldr	r1, [r4]
 2313 0038 8B68     		ldr	r3, [r1, #8]
 2314 003a 23F43063 		bic	r3, r3, #2816
 2315 003e 1343     		orrs	r3, r3, r2
 2316 0040 8B60     		str	r3, [r1, #8]
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2317              		.loc 1 2140 0
 2318 0042 2568     		ldr	r5, [r4]
 2319 0044 914B     		ldr	r3, .L203
 2320 0046 9D42     		cmp	r5, r3
 2321 0048 12D1     		bne	.L149
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2322              		.loc 1 2140 0 is_stmt 0 discriminator 1
 2323 004a 03F55843 		add	r3, r3, #55296
 2324 004e 1B6B     		ldr	r3, [r3, #48]
 2325 0050 03F00303 		and	r3, r3, #3
 2326 0054 032B     		cmp	r3, #3
 2327 0056 09D8     		bhi	.L150
 2328 0058 DFE803F0 		tbb	[pc, r3]
 2329              	.LVL190:
 2330              	.L152:
 2331 005c 02       		.byte	(.L151-.L152)/2
 2332 005d 04       		.byte	(.L153-.L152)/2
 2333 005e 06       		.byte	(.L154-.L152)/2
 2334 005f 7E       		.byte	(.L194-.L152)/2
 2335              		.p2align 1
 2336              	.L151:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2337              		.loc 1 2140 0
 2338 0060 0123     		movs	r3, #1
 2339 0062 84E0     		b	.L155
 2340              	.L153:
 2341              	.LVL191:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2342              		.loc 1 2140 0 discriminator 5
 2343 0064 0423     		movs	r3, #4
 2344 0066 82E0     		b	.L155
 2345              	.LVL192:
 2346              	.L154:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2347              		.loc 1 2140 0 discriminator 6
 2348 0068 0823     		movs	r3, #8
ARM GAS  /tmp/ccYpac0Q.s 			page 93


 2349 006a 80E0     		b	.L155
 2350              	.LVL193:
 2351              	.L150:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2352              		.loc 1 2140 0 discriminator 3
 2353 006c 1023     		movs	r3, #16
 2354 006e 7EE0     		b	.L155
 2355              	.LVL194:
 2356              	.L149:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2357              		.loc 1 2140 0 discriminator 2
 2358 0070 874B     		ldr	r3, .L203+4
 2359 0072 9D42     		cmp	r5, r3
 2360 0074 19D1     		bne	.L156
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2361              		.loc 1 2140 0 discriminator 8
 2362 0076 03F5E633 		add	r3, r3, #117760
 2363 007a 1B6B     		ldr	r3, [r3, #48]
 2364 007c 03F44033 		and	r3, r3, #196608
 2365 0080 B3F5803F 		cmp	r3, #65536
 2366 0084 0BD0     		beq	.L158
 2367 0086 01D8     		bhi	.L159
 2368 0088 3BB1     		cbz	r3, .L160
 2369 008a 0CE0     		b	.L157
 2370              	.L159:
 2371 008c B3F5003F 		cmp	r3, #131072
 2372 0090 07D0     		beq	.L161
 2373 0092 B3F5403F 		cmp	r3, #196608
 2374 0096 61D0     		beq	.L195
 2375 0098 05E0     		b	.L157
 2376              	.L160:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2377              		.loc 1 2140 0
 2378 009a 0023     		movs	r3, #0
 2379 009c 67E0     		b	.L155
 2380              	.L158:
 2381              	.LVL195:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2382              		.loc 1 2140 0 discriminator 12
 2383 009e 0423     		movs	r3, #4
 2384 00a0 65E0     		b	.L155
 2385              	.LVL196:
 2386              	.L161:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2387              		.loc 1 2140 0 discriminator 13
 2388 00a2 0823     		movs	r3, #8
 2389 00a4 63E0     		b	.L155
 2390              	.LVL197:
 2391              	.L157:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2392              		.loc 1 2140 0 discriminator 10
 2393 00a6 1023     		movs	r3, #16
 2394 00a8 61E0     		b	.L155
 2395              	.L156:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2396              		.loc 1 2140 0 discriminator 9
 2397 00aa 7A4B     		ldr	r3, .L203+8
ARM GAS  /tmp/ccYpac0Q.s 			page 94


 2398 00ac 9D42     		cmp	r5, r3
 2399 00ae 19D1     		bne	.L162
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2400              		.loc 1 2140 0 discriminator 15
 2401 00b0 03F5E433 		add	r3, r3, #116736
 2402 00b4 1B6B     		ldr	r3, [r3, #48]
 2403 00b6 03F44023 		and	r3, r3, #786432
 2404 00ba B3F5802F 		cmp	r3, #262144
 2405 00be 0BD0     		beq	.L164
 2406 00c0 01D8     		bhi	.L165
 2407 00c2 3BB1     		cbz	r3, .L166
 2408 00c4 0CE0     		b	.L163
 2409              	.L165:
 2410 00c6 B3F5002F 		cmp	r3, #524288
 2411 00ca 07D0     		beq	.L167
 2412 00cc B3F5402F 		cmp	r3, #786432
 2413 00d0 46D0     		beq	.L196
 2414 00d2 05E0     		b	.L163
 2415              	.L166:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2416              		.loc 1 2140 0
 2417 00d4 0023     		movs	r3, #0
 2418 00d6 4AE0     		b	.L155
 2419              	.L164:
 2420              	.LVL198:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2421              		.loc 1 2140 0 discriminator 19
 2422 00d8 0423     		movs	r3, #4
 2423 00da 48E0     		b	.L155
 2424              	.LVL199:
 2425              	.L167:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2426              		.loc 1 2140 0 discriminator 20
 2427 00dc 0823     		movs	r3, #8
 2428 00de 46E0     		b	.L155
 2429              	.LVL200:
 2430              	.L163:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2431              		.loc 1 2140 0 discriminator 17
 2432 00e0 1023     		movs	r3, #16
 2433 00e2 44E0     		b	.L155
 2434              	.L162:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2435              		.loc 1 2140 0 discriminator 16
 2436 00e4 6C4B     		ldr	r3, .L203+12
 2437 00e6 9D42     		cmp	r5, r3
 2438 00e8 19D1     		bne	.L168
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2439              		.loc 1 2140 0 discriminator 22
 2440 00ea 03F5E233 		add	r3, r3, #115712
 2441 00ee 1B6B     		ldr	r3, [r3, #48]
 2442 00f0 03F44013 		and	r3, r3, #3145728
 2443 00f4 B3F5801F 		cmp	r3, #1048576
 2444 00f8 0BD0     		beq	.L170
 2445 00fa 01D8     		bhi	.L171
 2446 00fc 3BB1     		cbz	r3, .L172
 2447 00fe 0CE0     		b	.L169
ARM GAS  /tmp/ccYpac0Q.s 			page 95


 2448              	.L171:
 2449 0100 B3F5001F 		cmp	r3, #2097152
 2450 0104 07D0     		beq	.L173
 2451 0106 B3F5401F 		cmp	r3, #3145728
 2452 010a 2BD0     		beq	.L197
 2453 010c 05E0     		b	.L169
 2454              	.L172:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2455              		.loc 1 2140 0
 2456 010e 0023     		movs	r3, #0
 2457 0110 2DE0     		b	.L155
 2458              	.L170:
 2459              	.LVL201:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2460              		.loc 1 2140 0 discriminator 26
 2461 0112 0423     		movs	r3, #4
 2462 0114 2BE0     		b	.L155
 2463              	.LVL202:
 2464              	.L173:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2465              		.loc 1 2140 0 discriminator 27
 2466 0116 0823     		movs	r3, #8
 2467 0118 29E0     		b	.L155
 2468              	.LVL203:
 2469              	.L169:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2470              		.loc 1 2140 0 discriminator 24
 2471 011a 1023     		movs	r3, #16
 2472 011c 27E0     		b	.L155
 2473              	.L168:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2474              		.loc 1 2140 0 discriminator 23
 2475 011e 5F4B     		ldr	r3, .L203+16
 2476 0120 9D42     		cmp	r5, r3
 2477 0122 21D1     		bne	.L198
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2478              		.loc 1 2140 0 discriminator 29
 2479 0124 03F5E033 		add	r3, r3, #114688
 2480 0128 1B6B     		ldr	r3, [r3, #48]
 2481 012a 03F44003 		and	r3, r3, #12582912
 2482 012e B3F5800F 		cmp	r3, #4194304
 2483 0132 0BD0     		beq	.L175
 2484 0134 01D8     		bhi	.L176
 2485 0136 3BB1     		cbz	r3, .L177
 2486 0138 0CE0     		b	.L174
 2487              	.L176:
 2488 013a B3F5000F 		cmp	r3, #8388608
 2489 013e 07D0     		beq	.L178
 2490 0140 B3F5400F 		cmp	r3, #12582912
 2491 0144 12D0     		beq	.L199
 2492 0146 05E0     		b	.L174
 2493              	.L177:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2494              		.loc 1 2140 0
 2495 0148 0023     		movs	r3, #0
 2496 014a 10E0     		b	.L155
 2497              	.L175:
ARM GAS  /tmp/ccYpac0Q.s 			page 96


 2498              	.LVL204:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2499              		.loc 1 2140 0 discriminator 33
 2500 014c 0423     		movs	r3, #4
 2501 014e 0EE0     		b	.L155
 2502              	.LVL205:
 2503              	.L178:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2504              		.loc 1 2140 0 discriminator 34
 2505 0150 0823     		movs	r3, #8
 2506 0152 0CE0     		b	.L155
 2507              	.LVL206:
 2508              	.L174:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2509              		.loc 1 2140 0 discriminator 31
 2510 0154 1023     		movs	r3, #16
 2511 0156 0AE0     		b	.L155
 2512              	.LVL207:
 2513              	.L194:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2514              		.loc 1 2140 0
 2515 0158 0223     		movs	r3, #2
 2516 015a 08E0     		b	.L155
 2517              	.LVL208:
 2518              	.L195:
 2519 015c 0223     		movs	r3, #2
 2520 015e 06E0     		b	.L155
 2521              	.L196:
 2522 0160 0223     		movs	r3, #2
 2523 0162 04E0     		b	.L155
 2524              	.L197:
 2525 0164 0223     		movs	r3, #2
 2526 0166 02E0     		b	.L155
 2527              	.L198:
 2528 0168 1023     		movs	r3, #16
 2529 016a 00E0     		b	.L155
 2530              	.L199:
 2531 016c 0223     		movs	r3, #2
 2532              	.LVL209:
 2533              	.L155:
2143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2534              		.loc 1 2143 0 is_stmt 1
 2535 016e E269     		ldr	r2, [r4, #28]
 2536 0170 B2F5004F 		cmp	r2, #32768
 2537 0174 47D1     		bne	.L179
2145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2538              		.loc 1 2145 0
 2539 0176 082B     		cmp	r3, #8
 2540 0178 3BD8     		bhi	.L200
 2541 017a DFE803F0 		tbb	[pc, r3]
 2542              	.L182:
 2543 017e 05       		.byte	(.L181-.L182)/2
 2544 017f 10       		.byte	(.L183-.L182)/2
 2545 0180 1B       		.byte	(.L184-.L182)/2
 2546 0181 3A       		.byte	(.L200-.L182)/2
 2547 0182 26       		.byte	(.L185-.L182)/2
 2548 0183 3A       		.byte	(.L200-.L182)/2
ARM GAS  /tmp/ccYpac0Q.s 			page 97


 2549 0184 3A       		.byte	(.L200-.L182)/2
 2550 0185 3A       		.byte	(.L200-.L182)/2
 2551 0186 31       		.byte	(.L186-.L182)/2
 2552 0187 00       		.p2align 1
 2553              	.L181:
2148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2554              		.loc 1 2148 0
 2555 0188 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 2556              	.LVL210:
 2557 018c 6368     		ldr	r3, [r4, #4]
 2558 018e 5A08     		lsrs	r2, r3, #1
 2559 0190 02EB4000 		add	r0, r2, r0, lsl #1
 2560 0194 B0FBF3F3 		udiv	r3, r0, r3
 2561 0198 9BB2     		uxth	r3, r3
 2562              	.LVL211:
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2563              		.loc 1 2102 0
 2564 019a 0020     		movs	r0, #0
2149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
 2565              		.loc 1 2149 0
 2566 019c 2BE0     		b	.L180
 2567              	.LVL212:
 2568              	.L183:
2151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2569              		.loc 1 2151 0
 2570 019e FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 2571              	.LVL213:
 2572 01a2 6368     		ldr	r3, [r4, #4]
 2573 01a4 5A08     		lsrs	r2, r3, #1
 2574 01a6 02EB4000 		add	r0, r2, r0, lsl #1
 2575 01aa B0FBF3F3 		udiv	r3, r0, r3
 2576 01ae 9BB2     		uxth	r3, r3
 2577              	.LVL214:
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2578              		.loc 1 2102 0
 2579 01b0 0020     		movs	r0, #0
2152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 2580              		.loc 1 2152 0
 2581 01b2 20E0     		b	.L180
 2582              	.LVL215:
 2583              	.L184:
2154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2584              		.loc 1 2154 0
 2585 01b4 6168     		ldr	r1, [r4, #4]
 2586 01b6 4A08     		lsrs	r2, r1, #1
 2587 01b8 02F57403 		add	r3, r2, #15990784
 2588              	.LVL216:
 2589 01bc 03F51053 		add	r3, r3, #9216
 2590 01c0 B3FBF1F3 		udiv	r3, r3, r1
 2591 01c4 9BB2     		uxth	r3, r3
 2592              	.LVL217:
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2593              		.loc 1 2102 0
 2594 01c6 0020     		movs	r0, #0
2155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
 2595              		.loc 1 2155 0
 2596 01c8 15E0     		b	.L180
ARM GAS  /tmp/ccYpac0Q.s 			page 98


 2597              	.LVL218:
 2598              	.L185:
2157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2599              		.loc 1 2157 0
 2600 01ca FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 2601              	.LVL219:
 2602 01ce 6368     		ldr	r3, [r4, #4]
 2603 01d0 5A08     		lsrs	r2, r3, #1
 2604 01d2 02EB4000 		add	r0, r2, r0, lsl #1
 2605 01d6 B0FBF3F3 		udiv	r3, r0, r3
 2606 01da 9BB2     		uxth	r3, r3
 2607              	.LVL220:
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2608              		.loc 1 2102 0
 2609 01dc 0020     		movs	r0, #0
2158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 2610              		.loc 1 2158 0
 2611 01de 0AE0     		b	.L180
 2612              	.LVL221:
 2613              	.L186:
2160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2614              		.loc 1 2160 0
 2615 01e0 6268     		ldr	r2, [r4, #4]
 2616 01e2 5308     		lsrs	r3, r2, #1
 2617              	.LVL222:
 2618 01e4 03F58033 		add	r3, r3, #65536
 2619 01e8 B3FBF2F3 		udiv	r3, r3, r2
 2620 01ec 9BB2     		uxth	r3, r3
 2621              	.LVL223:
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2622              		.loc 1 2102 0
 2623 01ee 0020     		movs	r0, #0
2161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 2624              		.loc 1 2161 0
 2625 01f0 01E0     		b	.L180
 2626              	.LVL224:
 2627              	.L200:
2164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2628              		.loc 1 2164 0
 2629 01f2 0120     		movs	r0, #1
2101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 2630              		.loc 1 2101 0
 2631 01f4 0023     		movs	r3, #0
 2632              	.LVL225:
 2633              	.L180:
2168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 2634              		.loc 1 2168 0
 2635 01f6 23F00F02 		bic	r2, r3, #15
 2636              	.LVL226:
2169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
 2637              		.loc 1 2169 0
 2638 01fa C3F34203 		ubfx	r3, r3, #1, #3
 2639              	.LVL227:
 2640 01fe 1343     		orrs	r3, r3, r2
 2641              	.LVL228:
2170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2642              		.loc 1 2170 0
ARM GAS  /tmp/ccYpac0Q.s 			page 99


 2643 0200 2268     		ldr	r2, [r4]
 2644 0202 D360     		str	r3, [r2, #12]
 2645 0204 38BD     		pop	{r3, r4, r5, pc}
 2646              	.LVL229:
 2647              	.L179:
2174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2648              		.loc 1 2174 0
 2649 0206 082B     		cmp	r3, #8
 2650 0208 3DD8     		bhi	.L201
 2651 020a DFE803F0 		tbb	[pc, r3]
 2652              	.L189:
 2653 020e 05       		.byte	(.L188-.L189)/2
 2654 020f 10       		.byte	(.L190-.L189)/2
 2655 0210 1B       		.byte	(.L191-.L189)/2
 2656 0211 3C       		.byte	(.L201-.L189)/2
 2657 0212 27       		.byte	(.L192-.L189)/2
 2658 0213 3C       		.byte	(.L201-.L189)/2
 2659 0214 3C       		.byte	(.L201-.L189)/2
 2660 0215 3C       		.byte	(.L201-.L189)/2
 2661 0216 32       		.byte	(.L193-.L189)/2
 2662 0217 00       		.p2align 1
 2663              	.L188:
2177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2664              		.loc 1 2177 0
 2665 0218 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 2666              	.LVL230:
 2667 021c 6368     		ldr	r3, [r4, #4]
 2668 021e 00EB5300 		add	r0, r0, r3, lsr #1
 2669 0222 B0FBF3F0 		udiv	r0, r0, r3
 2670 0226 80B2     		uxth	r0, r0
 2671 0228 E860     		str	r0, [r5, #12]
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2672              		.loc 1 2102 0
 2673 022a 0020     		movs	r0, #0
2178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
 2674              		.loc 1 2178 0
 2675 022c 38BD     		pop	{r3, r4, r5, pc}
 2676              	.LVL231:
 2677              	.L190:
2180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2678              		.loc 1 2180 0
 2679 022e FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 2680              	.LVL232:
 2681 0232 6368     		ldr	r3, [r4, #4]
 2682 0234 00EB5300 		add	r0, r0, r3, lsr #1
 2683 0238 B0FBF3F0 		udiv	r0, r0, r3
 2684 023c 80B2     		uxth	r0, r0
 2685 023e E860     		str	r0, [r5, #12]
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2686              		.loc 1 2102 0
 2687 0240 0020     		movs	r0, #0
2181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 2688              		.loc 1 2181 0
 2689 0242 38BD     		pop	{r3, r4, r5, pc}
 2690              	.LVL233:
 2691              	.L191:
2183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
ARM GAS  /tmp/ccYpac0Q.s 			page 100


 2692              		.loc 1 2183 0
 2693 0244 6168     		ldr	r1, [r4, #4]
 2694 0246 4A08     		lsrs	r2, r1, #1
 2695 0248 02F5F403 		add	r3, r2, #7995392
 2696              	.LVL234:
 2697 024c 03F59053 		add	r3, r3, #4608
 2698 0250 B3FBF1F3 		udiv	r3, r3, r1
 2699 0254 9BB2     		uxth	r3, r3
 2700 0256 EB60     		str	r3, [r5, #12]
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2701              		.loc 1 2102 0
 2702 0258 0020     		movs	r0, #0
2184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
 2703              		.loc 1 2184 0
 2704 025a 38BD     		pop	{r3, r4, r5, pc}
 2705              	.LVL235:
 2706              	.L192:
2186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2707              		.loc 1 2186 0
 2708 025c FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 2709              	.LVL236:
 2710 0260 6368     		ldr	r3, [r4, #4]
 2711 0262 00EB5300 		add	r0, r0, r3, lsr #1
 2712 0266 B0FBF3F0 		udiv	r0, r0, r3
 2713 026a 80B2     		uxth	r0, r0
 2714 026c E860     		str	r0, [r5, #12]
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2715              		.loc 1 2102 0
 2716 026e 0020     		movs	r0, #0
2187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 2717              		.loc 1 2187 0
 2718 0270 38BD     		pop	{r3, r4, r5, pc}
 2719              	.LVL237:
 2720              	.L193:
2189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2721              		.loc 1 2189 0
 2722 0272 6268     		ldr	r2, [r4, #4]
 2723 0274 5308     		lsrs	r3, r2, #1
 2724              	.LVL238:
 2725 0276 03F50043 		add	r3, r3, #32768
 2726 027a B3FBF2F3 		udiv	r3, r3, r2
 2727 027e 9BB2     		uxth	r3, r3
 2728 0280 EB60     		str	r3, [r5, #12]
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2729              		.loc 1 2102 0
 2730 0282 0020     		movs	r0, #0
2190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 2731              		.loc 1 2190 0
 2732 0284 38BD     		pop	{r3, r4, r5, pc}
 2733              	.LVL239:
 2734              	.L201:
2193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2735              		.loc 1 2193 0
 2736 0286 0120     		movs	r0, #1
 2737              	.LVL240:
2200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2738              		.loc 1 2200 0
ARM GAS  /tmp/ccYpac0Q.s 			page 101


 2739 0288 38BD     		pop	{r3, r4, r5, pc}
 2740              	.LVL241:
 2741              	.L204:
 2742 028a 00BF     		.align	2
 2743              	.L203:
 2744 028c 00380140 		.word	1073821696
 2745 0290 00440040 		.word	1073759232
 2746 0294 00480040 		.word	1073760256
 2747 0298 004C0040 		.word	1073761280
 2748 029c 00500040 		.word	1073762304
 2749              		.cfi_endproc
 2750              	.LFE163:
 2752              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 2753              		.align	2
 2754              		.global	UART_AdvFeatureConfig
 2755              		.thumb
 2756              		.thumb_func
 2758              	UART_AdvFeatureConfig:
 2759              	.LFB164:
2208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
 2760              		.loc 1 2208 0
 2761              		.cfi_startproc
 2762              		@ args = 0, pretend = 0, frame = 0
 2763              		@ frame_needed = 0, uses_anonymous_args = 0
 2764              		@ link register save eliminated.
 2765              	.LVL242:
2213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2766              		.loc 1 2213 0
 2767 0000 436A     		ldr	r3, [r0, #36]
 2768 0002 13F0010F 		tst	r3, #1
 2769 0006 06D0     		beq	.L206
2216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2770              		.loc 1 2216 0
 2771 0008 0168     		ldr	r1, [r0]
 2772 000a 4B68     		ldr	r3, [r1, #4]
 2773 000c 23F40032 		bic	r2, r3, #131072
 2774 0010 836A     		ldr	r3, [r0, #40]
 2775 0012 1343     		orrs	r3, r3, r2
 2776 0014 4B60     		str	r3, [r1, #4]
 2777              	.L206:
2220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2778              		.loc 1 2220 0
 2779 0016 436A     		ldr	r3, [r0, #36]
 2780 0018 13F0020F 		tst	r3, #2
 2781 001c 06D0     		beq	.L207
2223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2782              		.loc 1 2223 0
 2783 001e 0168     		ldr	r1, [r0]
 2784 0020 4B68     		ldr	r3, [r1, #4]
 2785 0022 23F48032 		bic	r2, r3, #65536
 2786 0026 C36A     		ldr	r3, [r0, #44]
 2787 0028 1343     		orrs	r3, r3, r2
 2788 002a 4B60     		str	r3, [r1, #4]
 2789              	.L207:
2227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2790              		.loc 1 2227 0
 2791 002c 436A     		ldr	r3, [r0, #36]
ARM GAS  /tmp/ccYpac0Q.s 			page 102


 2792 002e 13F0040F 		tst	r3, #4
 2793 0032 06D0     		beq	.L208
2230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2794              		.loc 1 2230 0
 2795 0034 0168     		ldr	r1, [r0]
 2796 0036 4B68     		ldr	r3, [r1, #4]
 2797 0038 23F48022 		bic	r2, r3, #262144
 2798 003c 036B     		ldr	r3, [r0, #48]
 2799 003e 1343     		orrs	r3, r3, r2
 2800 0040 4B60     		str	r3, [r1, #4]
 2801              	.L208:
2234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2802              		.loc 1 2234 0
 2803 0042 436A     		ldr	r3, [r0, #36]
 2804 0044 13F0080F 		tst	r3, #8
 2805 0048 06D0     		beq	.L209
2237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2806              		.loc 1 2237 0
 2807 004a 0168     		ldr	r1, [r0]
 2808 004c 4B68     		ldr	r3, [r1, #4]
 2809 004e 23F40042 		bic	r2, r3, #32768
 2810 0052 436B     		ldr	r3, [r0, #52]
 2811 0054 1343     		orrs	r3, r3, r2
 2812 0056 4B60     		str	r3, [r1, #4]
 2813              	.L209:
2241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2814              		.loc 1 2241 0
 2815 0058 436A     		ldr	r3, [r0, #36]
 2816 005a 13F0100F 		tst	r3, #16
 2817 005e 06D0     		beq	.L210
2244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2818              		.loc 1 2244 0
 2819 0060 0168     		ldr	r1, [r0]
 2820 0062 8B68     		ldr	r3, [r1, #8]
 2821 0064 23F48052 		bic	r2, r3, #4096
 2822 0068 836B     		ldr	r3, [r0, #56]
 2823 006a 1343     		orrs	r3, r3, r2
 2824 006c 8B60     		str	r3, [r1, #8]
 2825              	.L210:
2248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2826              		.loc 1 2248 0
 2827 006e 436A     		ldr	r3, [r0, #36]
 2828 0070 13F0200F 		tst	r3, #32
 2829 0074 06D0     		beq	.L211
2251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2830              		.loc 1 2251 0
 2831 0076 0168     		ldr	r1, [r0]
 2832 0078 8B68     		ldr	r3, [r1, #8]
 2833 007a 23F40052 		bic	r2, r3, #8192
 2834 007e C36B     		ldr	r3, [r0, #60]
 2835 0080 1343     		orrs	r3, r3, r2
 2836 0082 8B60     		str	r3, [r1, #8]
 2837              	.L211:
2255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2838              		.loc 1 2255 0
 2839 0084 436A     		ldr	r3, [r0, #36]
 2840 0086 13F0400F 		tst	r3, #64
ARM GAS  /tmp/ccYpac0Q.s 			page 103


 2841 008a 11D0     		beq	.L212
2259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
 2842              		.loc 1 2259 0
 2843 008c 0168     		ldr	r1, [r0]
 2844 008e 4B68     		ldr	r3, [r1, #4]
 2845 0090 23F48012 		bic	r2, r3, #1048576
 2846 0094 036C     		ldr	r3, [r0, #64]
 2847 0096 1343     		orrs	r3, r3, r2
 2848 0098 4B60     		str	r3, [r1, #4]
2261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2849              		.loc 1 2261 0
 2850 009a 036C     		ldr	r3, [r0, #64]
 2851 009c B3F5801F 		cmp	r3, #1048576
 2852 00a0 06D1     		bne	.L212
2264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 2853              		.loc 1 2264 0
 2854 00a2 0168     		ldr	r1, [r0]
 2855 00a4 4B68     		ldr	r3, [r1, #4]
 2856 00a6 23F4C002 		bic	r2, r3, #6291456
 2857 00aa 436C     		ldr	r3, [r0, #68]
 2858 00ac 1343     		orrs	r3, r3, r2
 2859 00ae 4B60     		str	r3, [r1, #4]
 2860              	.L212:
2269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2861              		.loc 1 2269 0
 2862 00b0 436A     		ldr	r3, [r0, #36]
 2863 00b2 13F0800F 		tst	r3, #128
 2864 00b6 06D0     		beq	.L205
2272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2865              		.loc 1 2272 0
 2866 00b8 0168     		ldr	r1, [r0]
 2867 00ba 4B68     		ldr	r3, [r1, #4]
 2868 00bc 23F40022 		bic	r2, r3, #524288
 2869 00c0 836C     		ldr	r3, [r0, #72]
 2870 00c2 1343     		orrs	r3, r3, r2
 2871 00c4 4B60     		str	r3, [r1, #4]
 2872              	.L205:
 2873 00c6 7047     		bx	lr
 2874              		.cfi_endproc
 2875              	.LFE164:
 2877              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 2878              		.align	2
 2879              		.global	UART_WaitOnFlagUntilTimeout
 2880              		.thumb
 2881              		.thumb_func
 2883              	UART_WaitOnFlagUntilTimeout:
 2884              	.LFB166:
2332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Wait until flag is set */
 2885              		.loc 1 2332 0
 2886              		.cfi_startproc
 2887              		@ args = 4, pretend = 0, frame = 0
 2888              		@ frame_needed = 0, uses_anonymous_args = 0
 2889              	.LVL243:
 2890 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2891              	.LCFI22:
 2892              		.cfi_def_cfa_offset 24
 2893              		.cfi_offset 4, -24
ARM GAS  /tmp/ccYpac0Q.s 			page 104


 2894              		.cfi_offset 5, -20
 2895              		.cfi_offset 6, -16
 2896              		.cfi_offset 7, -12
 2897              		.cfi_offset 8, -8
 2898              		.cfi_offset 14, -4
 2899 0004 0546     		mov	r5, r0
 2900 0006 0F46     		mov	r7, r1
 2901 0008 1646     		mov	r6, r2
 2902 000a 9846     		mov	r8, r3
 2903 000c 069C     		ldr	r4, [sp, #24]
2334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2904              		.loc 1 2334 0
 2905 000e 1EE0     		b	.L216
 2906              	.LVL244:
 2907              	.L219:
2337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2908              		.loc 1 2337 0
 2909 0010 B4F1FF3F 		cmp	r4, #-1
 2910 0014 1BD0     		beq	.L216
2339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 2911              		.loc 1 2339 0
 2912 0016 2CB1     		cbz	r4, .L217
2339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 2913              		.loc 1 2339 0 is_stmt 0 discriminator 1
 2914 0018 FFF7FEFF 		bl	HAL_GetTick
 2915              	.LVL245:
 2916 001c C8EB0000 		rsb	r0, r8, r0
 2917 0020 8442     		cmp	r4, r0
 2918 0022 14D2     		bcs	.L216
 2919              	.L217:
2342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2920              		.loc 1 2342 0 is_stmt 1
 2921 0024 2A68     		ldr	r2, [r5]
 2922 0026 1368     		ldr	r3, [r2]
 2923 0028 23F4D073 		bic	r3, r3, #416
 2924 002c 1360     		str	r3, [r2]
2343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2925              		.loc 1 2343 0
 2926 002e 2A68     		ldr	r2, [r5]
 2927 0030 9368     		ldr	r3, [r2, #8]
 2928 0032 23F00103 		bic	r3, r3, #1
 2929 0036 9360     		str	r3, [r2, #8]
2345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 2930              		.loc 1 2345 0
 2931 0038 2023     		movs	r3, #32
 2932 003a 85F86930 		strb	r3, [r5, #105]
2346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2933              		.loc 1 2346 0
 2934 003e 85F86A30 		strb	r3, [r5, #106]
2349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_TIMEOUT;
 2935              		.loc 1 2349 0
 2936 0042 0023     		movs	r3, #0
 2937 0044 85F86830 		strb	r3, [r5, #104]
2350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 2938              		.loc 1 2350 0
 2939 0048 0320     		movs	r0, #3
 2940 004a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
ARM GAS  /tmp/ccYpac0Q.s 			page 105


 2941              	.LVL246:
 2942              	.L216:
2334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2943              		.loc 1 2334 0
 2944 004e 2B68     		ldr	r3, [r5]
 2945 0050 DB69     		ldr	r3, [r3, #28]
 2946 0052 37EA0303 		bics	r3, r7, r3
 2947 0056 0CBF     		ite	eq
 2948 0058 0123     		moveq	r3, #1
 2949 005a 0023     		movne	r3, #0
 2950 005c B342     		cmp	r3, r6
 2951 005e D7D0     		beq	.L219
2354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2952              		.loc 1 2354 0
 2953 0060 0020     		movs	r0, #0
2355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2954              		.loc 1 2355 0
 2955 0062 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2956              		.cfi_endproc
 2957              	.LFE166:
 2959 0066 00BF     		.section	.text.HAL_UART_Transmit,"ax",%progbits
 2960              		.align	2
 2961              		.global	HAL_UART_Transmit
 2962              		.thumb
 2963              		.thumb_func
 2965              	HAL_UART_Transmit:
 2966              	.LFB131:
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
 2967              		.loc 1 724 0
 2968              		.cfi_startproc
 2969              		@ args = 0, pretend = 0, frame = 0
 2970              		@ frame_needed = 0, uses_anonymous_args = 0
 2971              	.LVL247:
 2972 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2973              	.LCFI23:
 2974              		.cfi_def_cfa_offset 24
 2975              		.cfi_offset 4, -24
 2976              		.cfi_offset 5, -20
 2977              		.cfi_offset 6, -16
 2978              		.cfi_offset 7, -12
 2979              		.cfi_offset 8, -8
 2980              		.cfi_offset 14, -4
 2981 0004 82B0     		sub	sp, sp, #8
 2982              	.LCFI24:
 2983              		.cfi_def_cfa_offset 32
 2984 0006 1E46     		mov	r6, r3
 2985              	.LVL248:
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2986              		.loc 1 729 0
 2987 0008 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 2988              	.LVL249:
 2989 000c DBB2     		uxtb	r3, r3
 2990 000e 202B     		cmp	r3, #32
 2991 0010 4FD1     		bne	.L227
 2992 0012 0446     		mov	r4, r0
 2993 0014 0D46     		mov	r5, r1
 2994 0016 9046     		mov	r8, r2
ARM GAS  /tmp/ccYpac0Q.s 			page 106


 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2995              		.loc 1 731 0
 2996 0018 0029     		cmp	r1, #0
 2997 001a 4CD0     		beq	.L228
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2998              		.loc 1 731 0 is_stmt 0 discriminator 1
 2999 001c 002A     		cmp	r2, #0
 3000 001e 4CD0     		beq	.L229
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3001              		.loc 1 737 0 is_stmt 1
 3002 0020 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 3003 0024 012B     		cmp	r3, #1
 3004 0026 4AD0     		beq	.L230
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3005              		.loc 1 737 0 is_stmt 0 discriminator 2
 3006 0028 0123     		movs	r3, #1
 3007 002a 80F86830 		strb	r3, [r0, #104]
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 3008              		.loc 1 739 0 is_stmt 1 discriminator 2
 3009 002e 0023     		movs	r3, #0
 3010 0030 C366     		str	r3, [r0, #108]
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3011              		.loc 1 740 0 discriminator 2
 3012 0032 2123     		movs	r3, #33
 3013 0034 80F86930 		strb	r3, [r0, #105]
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3014              		.loc 1 743 0 discriminator 2
 3015 0038 FFF7FEFF 		bl	HAL_GetTick
 3016              	.LVL250:
 3017 003c 0746     		mov	r7, r0
 3018              	.LVL251:
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 3019              		.loc 1 745 0 discriminator 2
 3020 003e A4F85080 		strh	r8, [r4, #80]	@ movhi
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 3021              		.loc 1 746 0 discriminator 2
 3022 0042 A4F85280 		strh	r8, [r4, #82]	@ movhi
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3023              		.loc 1 747 0 discriminator 2
 3024 0046 1FE0     		b	.L223
 3025              	.LVL252:
 3026              	.L226:
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 3027              		.loc 1 749 0
 3028 0048 B4F85230 		ldrh	r3, [r4, #82]
 3029 004c 9BB2     		uxth	r3, r3
 3030 004e 013B     		subs	r3, r3, #1
 3031 0050 9BB2     		uxth	r3, r3
 3032 0052 A4F85230 		strh	r3, [r4, #82]	@ movhi
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3033              		.loc 1 750 0
 3034 0056 0096     		str	r6, [sp]
 3035 0058 3B46     		mov	r3, r7
 3036 005a 0022     		movs	r2, #0
 3037 005c 8021     		movs	r1, #128
 3038 005e 2046     		mov	r0, r4
 3039 0060 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
ARM GAS  /tmp/ccYpac0Q.s 			page 107


 3040              	.LVL253:
 3041 0064 68BB     		cbnz	r0, .L231
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3042              		.loc 1 754 0
 3043 0066 A368     		ldr	r3, [r4, #8]
 3044 0068 B3F5805F 		cmp	r3, #4096
 3045 006c 08D1     		bne	.L224
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3046              		.loc 1 754 0 is_stmt 0 discriminator 1
 3047 006e 2369     		ldr	r3, [r4, #16]
 3048 0070 33B9     		cbnz	r3, .L224
 3049              	.LVL254:
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pData += 2U;
 3050              		.loc 1 757 0 is_stmt 1
 3051 0072 2268     		ldr	r2, [r4]
 3052 0074 35F8023B 		ldrh	r3, [r5], #2
 3053              	.LVL255:
 3054 0078 C3F30803 		ubfx	r3, r3, #0, #9
 3055 007c 1385     		strh	r3, [r2, #40]	@ movhi
 3056              	.LVL256:
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 3057              		.loc 1 758 0
 3058 007e 03E0     		b	.L223
 3059              	.LVL257:
 3060              	.L224:
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 3061              		.loc 1 762 0
 3062 0080 2368     		ldr	r3, [r4]
 3063              	.LVL258:
 3064 0082 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 3065 0084 1A85     		strh	r2, [r3, #40]	@ movhi
 3066 0086 0135     		adds	r5, r5, #1
 3067              	.LVL259:
 3068              	.L223:
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3069              		.loc 1 747 0
 3070 0088 B4F85230 		ldrh	r3, [r4, #82]
 3071 008c 9BB2     		uxth	r3, r3
 3072 008e 002B     		cmp	r3, #0
 3073 0090 DAD1     		bne	.L226
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3074              		.loc 1 765 0
 3075 0092 0096     		str	r6, [sp]
 3076 0094 3B46     		mov	r3, r7
 3077 0096 0022     		movs	r2, #0
 3078 0098 4021     		movs	r1, #64
 3079 009a 2046     		mov	r0, r4
 3080 009c FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3081              	.LVL260:
 3082 00a0 0346     		mov	r3, r0
 3083 00a2 80B9     		cbnz	r0, .L232
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3084              		.loc 1 771 0
 3085 00a4 2022     		movs	r2, #32
 3086 00a6 84F86920 		strb	r2, [r4, #105]
 774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3087              		.loc 1 774 0
ARM GAS  /tmp/ccYpac0Q.s 			page 108


 3088 00aa 0022     		movs	r2, #0
 3089 00ac 84F86820 		strb	r2, [r4, #104]
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3090              		.loc 1 776 0
 3091 00b0 0AE0     		b	.L222
 3092              	.LVL261:
 3093              	.L227:
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3094              		.loc 1 780 0
 3095 00b2 0223     		movs	r3, #2
 3096 00b4 08E0     		b	.L222
 3097              	.L228:
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 3098              		.loc 1 733 0
 3099 00b6 0123     		movs	r3, #1
 3100 00b8 06E0     		b	.L222
 3101              	.L229:
 3102 00ba 0123     		movs	r3, #1
 3103 00bc 04E0     		b	.L222
 3104              	.L230:
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3105              		.loc 1 737 0
 3106 00be 0223     		movs	r3, #2
 3107 00c0 02E0     		b	.L222
 3108              	.LVL262:
 3109              	.L231:
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 3110              		.loc 1 752 0
 3111 00c2 0323     		movs	r3, #3
 3112 00c4 00E0     		b	.L222
 3113              	.L232:
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 3114              		.loc 1 767 0
 3115 00c6 0323     		movs	r3, #3
 3116              	.LVL263:
 3117              	.L222:
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3118              		.loc 1 782 0
 3119 00c8 1846     		mov	r0, r3
 3120 00ca 02B0     		add	sp, sp, #8
 3121              	.LCFI25:
 3122              		.cfi_def_cfa_offset 24
 3123              		@ sp needed
 3124 00cc BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3125              		.cfi_endproc
 3126              	.LFE131:
 3128              		.section	.text.HAL_UART_Receive,"ax",%progbits
 3129              		.align	2
 3130              		.global	HAL_UART_Receive
 3131              		.thumb
 3132              		.thumb_func
 3134              	HAL_UART_Receive:
 3135              	.LFB132:
 793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
 3136              		.loc 1 793 0
 3137              		.cfi_startproc
 3138              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccYpac0Q.s 			page 109


 3139              		@ frame_needed = 0, uses_anonymous_args = 0
 3140              	.LVL264:
 3141 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3142              	.LCFI26:
 3143              		.cfi_def_cfa_offset 24
 3144              		.cfi_offset 4, -24
 3145              		.cfi_offset 5, -20
 3146              		.cfi_offset 6, -16
 3147              		.cfi_offset 7, -12
 3148              		.cfi_offset 8, -8
 3149              		.cfi_offset 14, -4
 3150 0004 82B0     		sub	sp, sp, #8
 3151              	.LCFI27:
 3152              		.cfi_def_cfa_offset 32
 3153 0006 1E46     		mov	r6, r3
 3154              	.LVL265:
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3155              		.loc 1 799 0
 3156 0008 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 3157              	.LVL266:
 3158 000c DBB2     		uxtb	r3, r3
 3159 000e 202B     		cmp	r3, #32
 3160 0010 64D1     		bne	.L244
 3161 0012 0446     		mov	r4, r0
 3162 0014 0D46     		mov	r5, r1
 3163 0016 9046     		mov	r8, r2
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3164              		.loc 1 801 0
 3165 0018 0029     		cmp	r1, #0
 3166 001a 61D0     		beq	.L245
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3167              		.loc 1 801 0 is_stmt 0 discriminator 1
 3168 001c 002A     		cmp	r2, #0
 3169 001e 61D0     		beq	.L246
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3170              		.loc 1 807 0 is_stmt 1
 3171 0020 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 3172 0024 012B     		cmp	r3, #1
 3173 0026 5FD0     		beq	.L247
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3174              		.loc 1 807 0 is_stmt 0 discriminator 2
 3175 0028 0123     		movs	r3, #1
 3176 002a 80F86830 		strb	r3, [r0, #104]
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 3177              		.loc 1 809 0 is_stmt 1 discriminator 2
 3178 002e 0023     		movs	r3, #0
 3179 0030 C366     		str	r3, [r0, #108]
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3180              		.loc 1 810 0 discriminator 2
 3181 0032 2223     		movs	r3, #34
 3182 0034 80F86A30 		strb	r3, [r0, #106]
 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3183              		.loc 1 813 0 discriminator 2
 3184 0038 FFF7FEFF 		bl	HAL_GetTick
 3185              	.LVL267:
 3186 003c 0746     		mov	r7, r0
 3187              	.LVL268:
ARM GAS  /tmp/ccYpac0Q.s 			page 110


 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = Size;
 3188              		.loc 1 815 0 discriminator 2
 3189 003e A4F85880 		strh	r8, [r4, #88]	@ movhi
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3190              		.loc 1 816 0 discriminator 2
 3191 0042 A4F85A80 		strh	r8, [r4, #90]	@ movhi
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3192              		.loc 1 819 0 discriminator 2
 3193 0046 A368     		ldr	r3, [r4, #8]
 3194 0048 B3F5805F 		cmp	r3, #4096
 3195 004c 0AD1     		bne	.L236
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3196              		.loc 1 819 0 is_stmt 0 discriminator 1
 3197 004e 2369     		ldr	r3, [r4, #16]
 3198 0050 23B9     		cbnz	r3, .L237
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3199              		.loc 1 819 0 discriminator 3
 3200 0052 40F2FF13 		movw	r3, #511
 3201 0056 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 3202 005a 0DE0     		b	.L238
 3203              	.L237:
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3204              		.loc 1 819 0 discriminator 4
 3205 005c FF23     		movs	r3, #255
 3206 005e A4F85C30 		strh	r3, [r4, #92]	@ movhi
 3207 0062 09E0     		b	.L238
 3208              	.L236:
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3209              		.loc 1 819 0 discriminator 2
 3210 0064 43B9     		cbnz	r3, .L238
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3211              		.loc 1 819 0 discriminator 5
 3212 0066 2369     		ldr	r3, [r4, #16]
 3213 0068 1BB9     		cbnz	r3, .L239
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3214              		.loc 1 819 0 discriminator 6
 3215 006a FF23     		movs	r3, #255
 3216 006c A4F85C30 		strh	r3, [r4, #92]	@ movhi
 3217 0070 02E0     		b	.L238
 3218              	.L239:
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3219              		.loc 1 819 0 discriminator 7
 3220 0072 7F23     		movs	r3, #127
 3221 0074 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 3222              	.L238:
 820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3223              		.loc 1 820 0 is_stmt 1
 3224 0078 B4F85C80 		ldrh	r8, [r4, #92]
 3225              	.LVL269:
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3226              		.loc 1 823 0
 3227 007c 22E0     		b	.L240
 3228              	.LVL270:
 3229              	.L243:
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 3230              		.loc 1 825 0
 3231 007e B4F85A30 		ldrh	r3, [r4, #90]
ARM GAS  /tmp/ccYpac0Q.s 			page 111


 3232 0082 9BB2     		uxth	r3, r3
 3233 0084 013B     		subs	r3, r3, #1
 3234 0086 9BB2     		uxth	r3, r3
 3235 0088 A4F85A30 		strh	r3, [r4, #90]	@ movhi
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3236              		.loc 1 826 0
 3237 008c 0096     		str	r6, [sp]
 3238 008e 3B46     		mov	r3, r7
 3239 0090 0022     		movs	r2, #0
 3240 0092 2021     		movs	r1, #32
 3241 0094 2046     		mov	r0, r4
 3242 0096 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3243              	.LVL271:
 3244 009a 38BB     		cbnz	r0, .L248
 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3245              		.loc 1 830 0
 3246 009c A368     		ldr	r3, [r4, #8]
 3247 009e B3F5805F 		cmp	r3, #4096
 3248 00a2 08D1     		bne	.L241
 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3249              		.loc 1 830 0 is_stmt 0 discriminator 1
 3250 00a4 2369     		ldr	r3, [r4, #16]
 3251 00a6 33B9     		cbnz	r3, .L241
 3252              	.LVL272:
 833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pData +=2U;
 3253              		.loc 1 833 0 is_stmt 1
 3254 00a8 2368     		ldr	r3, [r4]
 3255 00aa 9B8C     		ldrh	r3, [r3, #36]
 3256 00ac 08EA0303 		and	r3, r8, r3
 3257 00b0 25F8023B 		strh	r3, [r5], #2	@ movhi
 3258              	.LVL273:
 834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 3259              		.loc 1 834 0
 3260 00b4 06E0     		b	.L240
 3261              	.LVL274:
 3262              	.L241:
 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 3263              		.loc 1 838 0
 3264 00b6 2368     		ldr	r3, [r4]
 3265 00b8 9B8C     		ldrh	r3, [r3, #36]
 3266 00ba 5FFA88F2 		uxtb	r2, r8
 3267 00be 1340     		ands	r3, r3, r2
 3268 00c0 2B70     		strb	r3, [r5]
 3269 00c2 0135     		adds	r5, r5, #1
 3270              	.LVL275:
 3271              	.L240:
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3272              		.loc 1 823 0
 3273 00c4 B4F85A30 		ldrh	r3, [r4, #90]
 3274 00c8 9BB2     		uxth	r3, r3
 3275 00ca 002B     		cmp	r3, #0
 3276 00cc D7D1     		bne	.L243
 843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3277              		.loc 1 843 0
 3278 00ce 2023     		movs	r3, #32
 3279 00d0 84F86A30 		strb	r3, [r4, #106]
 846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccYpac0Q.s 			page 112


 3280              		.loc 1 846 0
 3281 00d4 0020     		movs	r0, #0
 3282 00d6 84F86800 		strb	r0, [r4, #104]
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3283              		.loc 1 848 0
 3284 00da 08E0     		b	.L235
 3285              	.LVL276:
 3286              	.L244:
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3287              		.loc 1 852 0
 3288 00dc 0220     		movs	r0, #2
 3289              	.LVL277:
 3290 00de 06E0     		b	.L235
 3291              	.LVL278:
 3292              	.L245:
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 3293              		.loc 1 803 0
 3294 00e0 0120     		movs	r0, #1
 3295              	.LVL279:
 3296 00e2 04E0     		b	.L235
 3297              	.LVL280:
 3298              	.L246:
 3299 00e4 0120     		movs	r0, #1
 3300              	.LVL281:
 3301 00e6 02E0     		b	.L235
 3302              	.LVL282:
 3303              	.L247:
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3304              		.loc 1 807 0
 3305 00e8 0220     		movs	r0, #2
 3306              	.LVL283:
 3307 00ea 00E0     		b	.L235
 3308              	.LVL284:
 3309              	.L248:
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 3310              		.loc 1 828 0
 3311 00ec 0320     		movs	r0, #3
 3312              	.LVL285:
 3313              	.L235:
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3314              		.loc 1 854 0
 3315 00ee 02B0     		add	sp, sp, #8
 3316              	.LCFI28:
 3317              		.cfi_def_cfa_offset 24
 3318              		@ sp needed
 3319 00f0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3320              		.cfi_endproc
 3321              	.LFE132:
 3323              		.section	.text.UART_CheckIdleState,"ax",%progbits
 3324              		.align	2
 3325              		.global	UART_CheckIdleState
 3326              		.thumb
 3327              		.thumb_func
 3329              	UART_CheckIdleState:
 3330              	.LFB165:
2282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart = 0U;
 3331              		.loc 1 2282 0
ARM GAS  /tmp/ccYpac0Q.s 			page 113


 3332              		.cfi_startproc
 3333              		@ args = 0, pretend = 0, frame = 0
 3334              		@ frame_needed = 0, uses_anonymous_args = 0
 3335              	.LVL286:
 3336 0000 30B5     		push	{r4, r5, lr}
 3337              	.LCFI29:
 3338              		.cfi_def_cfa_offset 12
 3339              		.cfi_offset 4, -12
 3340              		.cfi_offset 5, -8
 3341              		.cfi_offset 14, -4
 3342 0002 83B0     		sub	sp, sp, #12
 3343              	.LCFI30:
 3344              		.cfi_def_cfa_offset 24
 3345 0004 0446     		mov	r4, r0
 3346              	.LVL287:
2286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3347              		.loc 1 2286 0
 3348 0006 0023     		movs	r3, #0
 3349 0008 C366     		str	r3, [r0, #108]
2289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3350              		.loc 1 2289 0
 3351 000a FFF7FEFF 		bl	HAL_GetTick
 3352              	.LVL288:
 3353 000e 0546     		mov	r5, r0
 3354              	.LVL289:
2292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3355              		.loc 1 2292 0
 3356 0010 2368     		ldr	r3, [r4]
 3357 0012 1B68     		ldr	r3, [r3]
 3358 0014 13F0080F 		tst	r3, #8
 3359 0018 0AD0     		beq	.L251
2295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3360              		.loc 1 2295 0
 3361 001a 6FF07E43 		mvn	r3, #-33554432
 3362 001e 0093     		str	r3, [sp]
 3363 0020 0346     		mov	r3, r0
 3364 0022 0022     		movs	r2, #0
 3365 0024 4FF40011 		mov	r1, #2097152
 3366 0028 2046     		mov	r0, r4
 3367              	.LVL290:
 3368 002a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3369              	.LVL291:
 3370 002e C0B9     		cbnz	r0, .L254
 3371              	.L251:
2302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3372              		.loc 1 2302 0
 3373 0030 2368     		ldr	r3, [r4]
 3374 0032 1B68     		ldr	r3, [r3]
 3375 0034 13F0040F 		tst	r3, #4
 3376 0038 0AD0     		beq	.L253
2305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3377              		.loc 1 2305 0
 3378 003a 6FF07E43 		mvn	r3, #-33554432
 3379 003e 0093     		str	r3, [sp]
 3380 0040 2B46     		mov	r3, r5
 3381 0042 0022     		movs	r2, #0
 3382 0044 4FF48001 		mov	r1, #4194304
ARM GAS  /tmp/ccYpac0Q.s 			page 114


 3383 0048 2046     		mov	r0, r4
 3384 004a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3385              	.LVL292:
 3386 004e 50B9     		cbnz	r0, .L255
 3387              	.L253:
2313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3388              		.loc 1 2313 0
 3389 0050 2023     		movs	r3, #32
 3390 0052 84F86930 		strb	r3, [r4, #105]
2314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3391              		.loc 1 2314 0
 3392 0056 84F86A30 		strb	r3, [r4, #106]
2317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3393              		.loc 1 2317 0
 3394 005a 0020     		movs	r0, #0
 3395 005c 84F86800 		strb	r0, [r4, #104]
2319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3396              		.loc 1 2319 0
 3397 0060 02E0     		b	.L252
 3398              	.L254:
2298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 3399              		.loc 1 2298 0
 3400 0062 0320     		movs	r0, #3
 3401 0064 00E0     		b	.L252
 3402              	.L255:
2308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 3403              		.loc 1 2308 0
 3404 0066 0320     		movs	r0, #3
 3405              	.L252:
2320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3406              		.loc 1 2320 0
 3407 0068 03B0     		add	sp, sp, #12
 3408              	.LCFI31:
 3409              		.cfi_def_cfa_offset 12
 3410              		@ sp needed
 3411 006a 30BD     		pop	{r4, r5, pc}
 3412              		.cfi_endproc
 3413              	.LFE165:
 3415              		.section	.text.HAL_UART_Init,"ax",%progbits
 3416              		.align	2
 3417              		.global	HAL_UART_Init
 3418              		.thumb
 3419              		.thumb_func
 3421              	HAL_UART_Init:
 3422              	.LFB124:
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3423              		.loc 1 295 0
 3424              		.cfi_startproc
 3425              		@ args = 0, pretend = 0, frame = 0
 3426              		@ frame_needed = 0, uses_anonymous_args = 0
 3427              	.LVL293:
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3428              		.loc 1 297 0
 3429 0000 80B3     		cbz	r0, .L261
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3430              		.loc 1 295 0
 3431 0002 10B5     		push	{r4, lr}
ARM GAS  /tmp/ccYpac0Q.s 			page 115


 3432              	.LCFI32:
 3433              		.cfi_def_cfa_offset 8
 3434              		.cfi_offset 4, -8
 3435              		.cfi_offset 14, -4
 3436 0004 0446     		mov	r4, r0
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3437              		.loc 1 313 0
 3438 0006 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 3439 000a 13F0FF0F 		tst	r3, #255
 3440 000e 04D1     		bne	.L259
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3441              		.loc 1 316 0
 3442 0010 0023     		movs	r3, #0
 3443 0012 80F86830 		strb	r3, [r0, #104]
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3444              		.loc 1 319 0
 3445 0016 FFF7FEFF 		bl	HAL_UART_MspInit
 3446              	.LVL294:
 3447              	.L259:
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3448              		.loc 1 322 0
 3449 001a 2423     		movs	r3, #36
 3450 001c 84F86930 		strb	r3, [r4, #105]
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3451              		.loc 1 325 0
 3452 0020 2268     		ldr	r2, [r4]
 3453 0022 1368     		ldr	r3, [r2]
 3454 0024 23F00103 		bic	r3, r3, #1
 3455 0028 1360     		str	r3, [r2]
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3456              		.loc 1 328 0
 3457 002a 2046     		mov	r0, r4
 3458 002c FFF7FEFF 		bl	UART_SetConfig
 3459              	.LVL295:
 3460 0030 0128     		cmp	r0, #1
 3461 0032 19D0     		beq	.L258
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3462              		.loc 1 333 0
 3463 0034 636A     		ldr	r3, [r4, #36]
 3464 0036 13B1     		cbz	r3, .L260
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3465              		.loc 1 335 0
 3466 0038 2046     		mov	r0, r4
 3467 003a FFF7FEFF 		bl	UART_AdvFeatureConfig
 3468              	.LVL296:
 3469              	.L260:
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 3470              		.loc 1 341 0
 3471 003e 2268     		ldr	r2, [r4]
 3472 0040 5368     		ldr	r3, [r2, #4]
 3473 0042 23F49043 		bic	r3, r3, #18432
 3474 0046 5360     		str	r3, [r2, #4]
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3475              		.loc 1 342 0
 3476 0048 2268     		ldr	r2, [r4]
 3477 004a 9368     		ldr	r3, [r2, #8]
 3478 004c 23F02A03 		bic	r3, r3, #42
ARM GAS  /tmp/ccYpac0Q.s 			page 116


 3479 0050 9360     		str	r3, [r2, #8]
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3480              		.loc 1 345 0
 3481 0052 2268     		ldr	r2, [r4]
 3482 0054 1368     		ldr	r3, [r2]
 3483 0056 43F00103 		orr	r3, r3, #1
 3484 005a 1360     		str	r3, [r2]
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3485              		.loc 1 348 0
 3486 005c 2046     		mov	r0, r4
 3487 005e FFF7FEFF 		bl	UART_CheckIdleState
 3488              	.LVL297:
 3489 0062 10BD     		pop	{r4, pc}
 3490              	.LVL298:
 3491              	.L261:
 3492              	.LCFI33:
 3493              		.cfi_def_cfa_offset 0
 3494              		.cfi_restore 4
 3495              		.cfi_restore 14
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3496              		.loc 1 299 0
 3497 0064 0120     		movs	r0, #1
 3498              	.LVL299:
 3499 0066 7047     		bx	lr
 3500              	.LVL300:
 3501              	.L258:
 3502              	.LCFI34:
 3503              		.cfi_def_cfa_offset 8
 3504              		.cfi_offset 4, -8
 3505              		.cfi_offset 14, -4
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3506              		.loc 1 349 0
 3507 0068 10BD     		pop	{r4, pc}
 3508              		.cfi_endproc
 3509              	.LFE124:
 3511 006a 00BF     		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 3512              		.align	2
 3513              		.global	HAL_HalfDuplex_Init
 3514              		.thumb
 3515              		.thumb_func
 3517              	HAL_HalfDuplex_Init:
 3518              	.LFB125:
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3519              		.loc 1 358 0
 3520              		.cfi_startproc
 3521              		@ args = 0, pretend = 0, frame = 0
 3522              		@ frame_needed = 0, uses_anonymous_args = 0
 3523              	.LVL301:
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3524              		.loc 1 360 0
 3525 0000 0028     		cmp	r0, #0
 3526 0002 35D0     		beq	.L268
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3527              		.loc 1 358 0
 3528 0004 10B5     		push	{r4, lr}
 3529              	.LCFI35:
 3530              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccYpac0Q.s 			page 117


 3531              		.cfi_offset 4, -8
 3532              		.cfi_offset 14, -4
 3533 0006 0446     		mov	r4, r0
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3534              		.loc 1 368 0
 3535 0008 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 3536 000c 13F0FF0F 		tst	r3, #255
 3537 0010 04D1     		bne	.L266
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3538              		.loc 1 371 0
 3539 0012 0023     		movs	r3, #0
 3540 0014 80F86830 		strb	r3, [r0, #104]
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3541              		.loc 1 374 0
 3542 0018 FFF7FEFF 		bl	HAL_UART_MspInit
 3543              	.LVL302:
 3544              	.L266:
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3545              		.loc 1 377 0
 3546 001c 2423     		movs	r3, #36
 3547 001e 84F86930 		strb	r3, [r4, #105]
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3548              		.loc 1 380 0
 3549 0022 2268     		ldr	r2, [r4]
 3550 0024 1368     		ldr	r3, [r2]
 3551 0026 23F00103 		bic	r3, r3, #1
 3552 002a 1360     		str	r3, [r2]
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3553              		.loc 1 383 0
 3554 002c 2046     		mov	r0, r4
 3555 002e FFF7FEFF 		bl	UART_SetConfig
 3556              	.LVL303:
 3557 0032 0128     		cmp	r0, #1
 3558 0034 1ED0     		beq	.L265
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3559              		.loc 1 388 0
 3560 0036 636A     		ldr	r3, [r4, #36]
 3561 0038 13B1     		cbz	r3, .L267
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3562              		.loc 1 390 0
 3563 003a 2046     		mov	r0, r4
 3564 003c FFF7FEFF 		bl	UART_AdvFeatureConfig
 3565              	.LVL304:
 3566              	.L267:
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 3567              		.loc 1 396 0
 3568 0040 2268     		ldr	r2, [r4]
 3569 0042 5368     		ldr	r3, [r2, #4]
 3570 0044 23F49043 		bic	r3, r3, #18432
 3571 0048 5360     		str	r3, [r2, #4]
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3572              		.loc 1 397 0
 3573 004a 2268     		ldr	r2, [r4]
 3574 004c 9368     		ldr	r3, [r2, #8]
 3575 004e 23F02203 		bic	r3, r3, #34
 3576 0052 9360     		str	r3, [r2, #8]
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccYpac0Q.s 			page 118


 3577              		.loc 1 400 0
 3578 0054 2268     		ldr	r2, [r4]
 3579 0056 9368     		ldr	r3, [r2, #8]
 3580 0058 43F00803 		orr	r3, r3, #8
 3581 005c 9360     		str	r3, [r2, #8]
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3582              		.loc 1 403 0
 3583 005e 2268     		ldr	r2, [r4]
 3584 0060 1368     		ldr	r3, [r2]
 3585 0062 43F00103 		orr	r3, r3, #1
 3586 0066 1360     		str	r3, [r2]
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3587              		.loc 1 406 0
 3588 0068 2046     		mov	r0, r4
 3589 006a FFF7FEFF 		bl	UART_CheckIdleState
 3590              	.LVL305:
 3591 006e 10BD     		pop	{r4, pc}
 3592              	.LVL306:
 3593              	.L268:
 3594              	.LCFI36:
 3595              		.cfi_def_cfa_offset 0
 3596              		.cfi_restore 4
 3597              		.cfi_restore 14
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3598              		.loc 1 362 0
 3599 0070 0120     		movs	r0, #1
 3600              	.LVL307:
 3601 0072 7047     		bx	lr
 3602              	.LVL308:
 3603              	.L265:
 3604              	.LCFI37:
 3605              		.cfi_def_cfa_offset 8
 3606              		.cfi_offset 4, -8
 3607              		.cfi_offset 14, -4
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3608              		.loc 1 407 0
 3609 0074 10BD     		pop	{r4, pc}
 3610              		.cfi_endproc
 3611              	.LFE125:
 3613 0076 00BF     		.section	.text.HAL_LIN_Init,"ax",%progbits
 3614              		.align	2
 3615              		.global	HAL_LIN_Init
 3616              		.thumb
 3617              		.thumb_func
 3619              	HAL_LIN_Init:
 3620              	.LFB126:
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3621              		.loc 1 421 0
 3622              		.cfi_startproc
 3623              		@ args = 0, pretend = 0, frame = 0
 3624              		@ frame_needed = 0, uses_anonymous_args = 0
 3625              	.LVL309:
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3626              		.loc 1 423 0
 3627 0000 0028     		cmp	r0, #0
 3628 0002 43D0     		beq	.L275
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
ARM GAS  /tmp/ccYpac0Q.s 			page 119


 3629              		.loc 1 421 0
 3630 0004 38B5     		push	{r3, r4, r5, lr}
 3631              	.LCFI38:
 3632              		.cfi_def_cfa_offset 16
 3633              		.cfi_offset 3, -16
 3634              		.cfi_offset 4, -12
 3635              		.cfi_offset 5, -8
 3636              		.cfi_offset 14, -4
 3637 0006 0446     		mov	r4, r0
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3638              		.loc 1 434 0
 3639 0008 C369     		ldr	r3, [r0, #28]
 3640 000a B3F5004F 		cmp	r3, #32768
 3641 000e 3FD0     		beq	.L276
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3642              		.loc 1 439 0
 3643 0010 8368     		ldr	r3, [r0, #8]
 3644 0012 002B     		cmp	r3, #0
 3645 0014 3ED1     		bne	.L277
 3646 0016 0D46     		mov	r5, r1
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3647              		.loc 1 444 0
 3648 0018 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 3649 001c 13F0FF0F 		tst	r3, #255
 3650 0020 04D1     		bne	.L273
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3651              		.loc 1 447 0
 3652 0022 0023     		movs	r3, #0
 3653 0024 80F86830 		strb	r3, [r0, #104]
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3654              		.loc 1 450 0
 3655 0028 FFF7FEFF 		bl	HAL_UART_MspInit
 3656              	.LVL310:
 3657              	.L273:
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3658              		.loc 1 453 0
 3659 002c 2423     		movs	r3, #36
 3660 002e 84F86930 		strb	r3, [r4, #105]
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3661              		.loc 1 456 0
 3662 0032 2268     		ldr	r2, [r4]
 3663 0034 1368     		ldr	r3, [r2]
 3664 0036 23F00103 		bic	r3, r3, #1
 3665 003a 1360     		str	r3, [r2]
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3666              		.loc 1 459 0
 3667 003c 2046     		mov	r0, r4
 3668 003e FFF7FEFF 		bl	UART_SetConfig
 3669              	.LVL311:
 3670 0042 0128     		cmp	r0, #1
 3671 0044 27D0     		beq	.L272
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3672              		.loc 1 464 0
 3673 0046 636A     		ldr	r3, [r4, #36]
 3674 0048 13B1     		cbz	r3, .L274
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3675              		.loc 1 466 0
ARM GAS  /tmp/ccYpac0Q.s 			page 120


 3676 004a 2046     		mov	r0, r4
 3677 004c FFF7FEFF 		bl	UART_AdvFeatureConfig
 3678              	.LVL312:
 3679              	.L274:
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 3680              		.loc 1 472 0
 3681 0050 2268     		ldr	r2, [r4]
 3682 0052 5368     		ldr	r3, [r2, #4]
 3683 0054 23F40063 		bic	r3, r3, #2048
 3684 0058 5360     		str	r3, [r2, #4]
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3685              		.loc 1 473 0
 3686 005a 2268     		ldr	r2, [r4]
 3687 005c 9368     		ldr	r3, [r2, #8]
 3688 005e 23F02A03 		bic	r3, r3, #42
 3689 0062 9360     		str	r3, [r2, #8]
 476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3690              		.loc 1 476 0
 3691 0064 2268     		ldr	r2, [r4]
 3692 0066 5368     		ldr	r3, [r2, #4]
 3693 0068 43F48043 		orr	r3, r3, #16384
 3694 006c 5360     		str	r3, [r2, #4]
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3695              		.loc 1 479 0
 3696 006e 2368     		ldr	r3, [r4]
 3697 0070 5968     		ldr	r1, [r3, #4]
 3698 0072 21F02001 		bic	r1, r1, #32
 3699 0076 2943     		orrs	r1, r1, r5
 3700 0078 5960     		str	r1, [r3, #4]
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3701              		.loc 1 482 0
 3702 007a 2268     		ldr	r2, [r4]
 3703 007c 1368     		ldr	r3, [r2]
 3704 007e 43F00103 		orr	r3, r3, #1
 3705 0082 1360     		str	r3, [r2]
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3706              		.loc 1 485 0
 3707 0084 2046     		mov	r0, r4
 3708 0086 FFF7FEFF 		bl	UART_CheckIdleState
 3709              	.LVL313:
 3710 008a 38BD     		pop	{r3, r4, r5, pc}
 3711              	.LVL314:
 3712              	.L275:
 3713              	.LCFI39:
 3714              		.cfi_def_cfa_offset 0
 3715              		.cfi_restore 3
 3716              		.cfi_restore 4
 3717              		.cfi_restore 5
 3718              		.cfi_restore 14
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3719              		.loc 1 425 0
 3720 008c 0120     		movs	r0, #1
 3721              	.LVL315:
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3722              		.loc 1 486 0
 3723 008e 7047     		bx	lr
 3724              	.LVL316:
ARM GAS  /tmp/ccYpac0Q.s 			page 121


 3725              	.L276:
 3726              	.LCFI40:
 3727              		.cfi_def_cfa_offset 16
 3728              		.cfi_offset 3, -16
 3729              		.cfi_offset 4, -12
 3730              		.cfi_offset 5, -8
 3731              		.cfi_offset 14, -4
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3732              		.loc 1 436 0
 3733 0090 0120     		movs	r0, #1
 3734              	.LVL317:
 3735 0092 38BD     		pop	{r3, r4, r5, pc}
 3736              	.LVL318:
 3737              	.L277:
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3738              		.loc 1 441 0
 3739 0094 0120     		movs	r0, #1
 3740              	.LVL319:
 3741              	.L272:
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3742              		.loc 1 486 0
 3743 0096 38BD     		pop	{r3, r4, r5, pc}
 3744              		.cfi_endproc
 3745              	.LFE126:
 3747              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 3748              		.align	2
 3749              		.global	HAL_MultiProcessor_Init
 3750              		.thumb
 3751              		.thumb_func
 3753              	HAL_MultiProcessor_Init:
 3754              	.LFB127:
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3755              		.loc 1 508 0
 3756              		.cfi_startproc
 3757              		@ args = 0, pretend = 0, frame = 0
 3758              		@ frame_needed = 0, uses_anonymous_args = 0
 3759              	.LVL320:
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3760              		.loc 1 510 0
 3761 0000 0028     		cmp	r0, #0
 3762 0002 43D0     		beq	.L284
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3763              		.loc 1 508 0
 3764 0004 70B5     		push	{r4, r5, r6, lr}
 3765              	.LCFI41:
 3766              		.cfi_def_cfa_offset 16
 3767              		.cfi_offset 4, -16
 3768              		.cfi_offset 5, -12
 3769              		.cfi_offset 6, -8
 3770              		.cfi_offset 14, -4
 3771 0006 0446     		mov	r4, r0
 3772 0008 1546     		mov	r5, r2
 3773 000a 0E46     		mov	r6, r1
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3774              		.loc 1 518 0
 3775 000c 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 3776 0010 13F0FF0F 		tst	r3, #255
ARM GAS  /tmp/ccYpac0Q.s 			page 122


 3777 0014 04D1     		bne	.L281
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3778              		.loc 1 521 0
 3779 0016 0023     		movs	r3, #0
 3780 0018 80F86830 		strb	r3, [r0, #104]
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3781              		.loc 1 524 0
 3782 001c FFF7FEFF 		bl	HAL_UART_MspInit
 3783              	.LVL321:
 3784              	.L281:
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3785              		.loc 1 527 0
 3786 0020 2423     		movs	r3, #36
 3787 0022 84F86930 		strb	r3, [r4, #105]
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3788              		.loc 1 530 0
 3789 0026 2268     		ldr	r2, [r4]
 3790 0028 1368     		ldr	r3, [r2]
 3791 002a 23F00103 		bic	r3, r3, #1
 3792 002e 1360     		str	r3, [r2]
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3793              		.loc 1 533 0
 3794 0030 2046     		mov	r0, r4
 3795 0032 FFF7FEFF 		bl	UART_SetConfig
 3796              	.LVL322:
 3797 0036 0128     		cmp	r0, #1
 3798 0038 2AD0     		beq	.L280
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3799              		.loc 1 538 0
 3800 003a 636A     		ldr	r3, [r4, #36]
 3801 003c 13B1     		cbz	r3, .L282
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3802              		.loc 1 540 0
 3803 003e 2046     		mov	r0, r4
 3804 0040 FFF7FEFF 		bl	UART_AdvFeatureConfig
 3805              	.LVL323:
 3806              	.L282:
 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 3807              		.loc 1 546 0
 3808 0044 2268     		ldr	r2, [r4]
 3809 0046 5368     		ldr	r3, [r2, #4]
 3810 0048 23F49043 		bic	r3, r3, #18432
 3811 004c 5360     		str	r3, [r2, #4]
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3812              		.loc 1 547 0
 3813 004e 2268     		ldr	r2, [r4]
 3814 0050 9368     		ldr	r3, [r2, #8]
 3815 0052 23F02A03 		bic	r3, r3, #42
 3816 0056 9360     		str	r3, [r2, #8]
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3817              		.loc 1 549 0
 3818 0058 B5F5006F 		cmp	r5, #2048
 3819 005c 06D1     		bne	.L283
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3820              		.loc 1 552 0
 3821 005e 2368     		ldr	r3, [r4]
 3822 0060 5968     		ldr	r1, [r3, #4]
ARM GAS  /tmp/ccYpac0Q.s 			page 123


 3823 0062 21F07F41 		bic	r1, r1, #-16777216
 3824 0066 41EA0666 		orr	r6, r1, r6, lsl #24
 3825 006a 5E60     		str	r6, [r3, #4]
 3826              	.L283:
 556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3827              		.loc 1 556 0
 3828 006c 2168     		ldr	r1, [r4]
 3829 006e 0B68     		ldr	r3, [r1]
 3830 0070 23F40063 		bic	r3, r3, #2048
 3831 0074 45EA0302 		orr	r2, r5, r3
 3832 0078 0A60     		str	r2, [r1]
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3833              		.loc 1 559 0
 3834 007a 2268     		ldr	r2, [r4]
 3835 007c 1368     		ldr	r3, [r2]
 3836 007e 43F00103 		orr	r3, r3, #1
 3837 0082 1360     		str	r3, [r2]
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3838              		.loc 1 562 0
 3839 0084 2046     		mov	r0, r4
 3840 0086 FFF7FEFF 		bl	UART_CheckIdleState
 3841              	.LVL324:
 3842 008a 70BD     		pop	{r4, r5, r6, pc}
 3843              	.LVL325:
 3844              	.L284:
 3845              	.LCFI42:
 3846              		.cfi_def_cfa_offset 0
 3847              		.cfi_restore 4
 3848              		.cfi_restore 5
 3849              		.cfi_restore 6
 3850              		.cfi_restore 14
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3851              		.loc 1 512 0
 3852 008c 0120     		movs	r0, #1
 3853              	.LVL326:
 3854 008e 7047     		bx	lr
 3855              	.LVL327:
 3856              	.L280:
 3857              	.LCFI43:
 3858              		.cfi_def_cfa_offset 16
 3859              		.cfi_offset 4, -16
 3860              		.cfi_offset 5, -12
 3861              		.cfi_offset 6, -8
 3862              		.cfi_offset 14, -4
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3863              		.loc 1 563 0
 3864 0090 70BD     		pop	{r4, r5, r6, pc}
 3865              		.cfi_endproc
 3866              	.LFE127:
 3868 0092 00BF     		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 3869              		.align	2
 3870              		.global	HAL_MultiProcessor_EnableMuteMode
 3871              		.thumb
 3872              		.thumb_func
 3874              	HAL_MultiProcessor_EnableMuteMode:
 3875              	.LFB155:
1913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
ARM GAS  /tmp/ccYpac0Q.s 			page 124


 3876              		.loc 1 1913 0
 3877              		.cfi_startproc
 3878              		@ args = 0, pretend = 0, frame = 0
 3879              		@ frame_needed = 0, uses_anonymous_args = 0
 3880              	.LVL328:
 3881 0000 08B5     		push	{r3, lr}
 3882              	.LCFI44:
 3883              		.cfi_def_cfa_offset 8
 3884              		.cfi_offset 3, -8
 3885              		.cfi_offset 14, -4
1915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3886              		.loc 1 1915 0
 3887 0002 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 3888 0006 012B     		cmp	r3, #1
 3889 0008 10D0     		beq	.L289
1915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3890              		.loc 1 1915 0 is_stmt 0 discriminator 2
 3891 000a 0123     		movs	r3, #1
 3892 000c 80F86830 		strb	r3, [r0, #104]
1917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3893              		.loc 1 1917 0 is_stmt 1 discriminator 2
 3894 0010 2423     		movs	r3, #36
 3895 0012 80F86930 		strb	r3, [r0, #105]
1920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3896              		.loc 1 1920 0 discriminator 2
 3897 0016 0268     		ldr	r2, [r0]
 3898 0018 1368     		ldr	r3, [r2]
 3899 001a 43F40053 		orr	r3, r3, #8192
 3900 001e 1360     		str	r3, [r2]
1922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3901              		.loc 1 1922 0 discriminator 2
 3902 0020 2023     		movs	r3, #32
 3903 0022 80F86930 		strb	r3, [r0, #105]
1924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3904              		.loc 1 1924 0 discriminator 2
 3905 0026 FFF7FEFF 		bl	UART_CheckIdleState
 3906              	.LVL329:
 3907 002a 08BD     		pop	{r3, pc}
 3908              	.LVL330:
 3909              	.L289:
1915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3910              		.loc 1 1915 0
 3911 002c 0220     		movs	r0, #2
 3912              	.LVL331:
1925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3913              		.loc 1 1925 0
 3914 002e 08BD     		pop	{r3, pc}
 3915              		.cfi_endproc
 3916              	.LFE155:
 3918              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 3919              		.align	2
 3920              		.global	HAL_MultiProcessor_DisableMuteMode
 3921              		.thumb
 3922              		.thumb_func
 3924              	HAL_MultiProcessor_DisableMuteMode:
 3925              	.LFB156:
1934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
ARM GAS  /tmp/ccYpac0Q.s 			page 125


 3926              		.loc 1 1934 0
 3927              		.cfi_startproc
 3928              		@ args = 0, pretend = 0, frame = 0
 3929              		@ frame_needed = 0, uses_anonymous_args = 0
 3930              	.LVL332:
 3931 0000 08B5     		push	{r3, lr}
 3932              	.LCFI45:
 3933              		.cfi_def_cfa_offset 8
 3934              		.cfi_offset 3, -8
 3935              		.cfi_offset 14, -4
1936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3936              		.loc 1 1936 0
 3937 0002 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 3938 0006 012B     		cmp	r3, #1
 3939 0008 10D0     		beq	.L293
1936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3940              		.loc 1 1936 0 is_stmt 0 discriminator 2
 3941 000a 0123     		movs	r3, #1
 3942 000c 80F86830 		strb	r3, [r0, #104]
1938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3943              		.loc 1 1938 0 is_stmt 1 discriminator 2
 3944 0010 2423     		movs	r3, #36
 3945 0012 80F86930 		strb	r3, [r0, #105]
1941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3946              		.loc 1 1941 0 discriminator 2
 3947 0016 0268     		ldr	r2, [r0]
 3948 0018 1368     		ldr	r3, [r2]
 3949 001a 23F40053 		bic	r3, r3, #8192
 3950 001e 1360     		str	r3, [r2]
1943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3951              		.loc 1 1943 0 discriminator 2
 3952 0020 2023     		movs	r3, #32
 3953 0022 80F86930 		strb	r3, [r0, #105]
1945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3954              		.loc 1 1945 0 discriminator 2
 3955 0026 FFF7FEFF 		bl	UART_CheckIdleState
 3956              	.LVL333:
 3957 002a 08BD     		pop	{r3, pc}
 3958              	.LVL334:
 3959              	.L293:
1936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3960              		.loc 1 1936 0
 3961 002c 0220     		movs	r0, #2
 3962              	.LVL335:
1946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3963              		.loc 1 1946 0
 3964 002e 08BD     		pop	{r3, pc}
 3965              		.cfi_endproc
 3966              	.LFE156:
 3968              		.section	.text.UART_Transmit_IT,"ax",%progbits
 3969              		.align	2
 3970              		.global	UART_Transmit_IT
 3971              		.thumb
 3972              		.thumb_func
 3974              	UART_Transmit_IT:
 3975              	.LFB179:
2642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
ARM GAS  /tmp/ccYpac0Q.s 			page 126


2643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Send an amount of data in interrupt mode.
2646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   Function is called under interruption only, once
2647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
2648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
2652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 3976              		.loc 1 2652 0
 3977              		.cfi_startproc
 3978              		@ args = 0, pretend = 0, frame = 0
 3979              		@ frame_needed = 0, uses_anonymous_args = 0
 3980              		@ link register save eliminated.
 3981              	.LVL336:
2653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
2654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
2656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 3982              		.loc 1 2656 0
 3983 0000 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 3984 0004 DBB2     		uxtb	r3, r3
 3985 0006 212B     		cmp	r3, #33
 3986 0008 2ED1     		bne	.L300
2657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->TxXferCount == 0U)
 3987              		.loc 1 2658 0
 3988 000a B0F85230 		ldrh	r3, [r0, #82]
 3989 000e 9BB2     		uxth	r3, r3
 3990 0010 5BB9     		cbnz	r3, .L297
2659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
2661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 3991              		.loc 1 2661 0
 3992 0012 0268     		ldr	r2, [r0]
 3993 0014 1368     		ldr	r3, [r2]
 3994 0016 23F08003 		bic	r3, r3, #128
 3995 001a 1360     		str	r3, [r2]
2662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
2664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 3996              		.loc 1 2664 0
 3997 001c 0268     		ldr	r2, [r0]
 3998 001e 1368     		ldr	r3, [r2]
 3999 0020 43F04003 		orr	r3, r3, #64
 4000 0024 1360     		str	r3, [r2]
2665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_OK;
 4001              		.loc 1 2666 0
 4002 0026 0020     		movs	r0, #0
 4003              	.LVL337:
 4004 0028 7047     		bx	lr
 4005              	.LVL338:
 4006              	.L297:
2667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
ARM GAS  /tmp/ccYpac0Q.s 			page 127


2669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 4007              		.loc 1 2670 0
 4008 002a 8368     		ldr	r3, [r0, #8]
 4009 002c B3F5805F 		cmp	r3, #4096
 4010 0030 0BD1     		bne	.L298
 4011              		.loc 1 2670 0 is_stmt 0 discriminator 1
 4012 0032 0369     		ldr	r3, [r0, #16]
 4013 0034 4BB9     		cbnz	r3, .L298
2671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
2672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         tmp = (uint16_t*) huart->pTxBuffPtr;
 4014              		.loc 1 2672 0 is_stmt 1
 4015 0036 C36C     		ldr	r3, [r0, #76]
 4016              	.LVL339:
2673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 4017              		.loc 1 2673 0
 4018 0038 0268     		ldr	r2, [r0]
 4019 003a 1B88     		ldrh	r3, [r3]
 4020              	.LVL340:
 4021 003c C3F30803 		ubfx	r3, r3, #0, #9
 4022 0040 1385     		strh	r3, [r2, #40]	@ movhi
 4023              	.LVL341:
2674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 4024              		.loc 1 2674 0
 4025 0042 C36C     		ldr	r3, [r0, #76]
 4026 0044 0233     		adds	r3, r3, #2
 4027 0046 C364     		str	r3, [r0, #76]
 4028 0048 05E0     		b	.L299
 4029              	.L298:
2675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
2676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
2677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
2678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0xFFU);
 4030              		.loc 1 2678 0
 4031 004a 0268     		ldr	r2, [r0]
 4032 004c C36C     		ldr	r3, [r0, #76]
 4033 004e 591C     		adds	r1, r3, #1
 4034 0050 C164     		str	r1, [r0, #76]
 4035 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4036 0054 1385     		strh	r3, [r2, #40]	@ movhi
 4037              	.L299:
2679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
2680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxXferCount--;
 4038              		.loc 1 2680 0
 4039 0056 B0F85230 		ldrh	r3, [r0, #82]
 4040 005a 9BB2     		uxth	r3, r3
 4041 005c 013B     		subs	r3, r3, #1
 4042 005e 9BB2     		uxth	r3, r3
 4043 0060 A0F85230 		strh	r3, [r0, #82]	@ movhi
2681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_OK;
 4044              		.loc 1 2682 0
 4045 0064 0020     		movs	r0, #0
 4046              	.LVL342:
 4047 0066 7047     		bx	lr
 4048              	.LVL343:
 4049              	.L300:
ARM GAS  /tmp/ccYpac0Q.s 			page 128


2683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 4050              		.loc 1 2687 0
 4051 0068 0220     		movs	r0, #2
 4052              	.LVL344:
2688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4053              		.loc 1 2689 0
 4054 006a 7047     		bx	lr
 4055              		.cfi_endproc
 4056              	.LFE179:
 4058              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 4059              		.align	2
 4060              		.global	UART_EndTransmit_IT
 4061              		.thumb
 4062              		.thumb_func
 4064              	UART_EndTransmit_IT:
 4065              	.LFB180:
2690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
2693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
2694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *               the configuration information for the specified UART module.
2695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
2698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4066              		.loc 1 2698 0
 4067              		.cfi_startproc
 4068              		@ args = 0, pretend = 0, frame = 0
 4069              		@ frame_needed = 0, uses_anonymous_args = 0
 4070              	.LVL345:
 4071 0000 08B5     		push	{r3, lr}
 4072              	.LCFI46:
 4073              		.cfi_def_cfa_offset 8
 4074              		.cfi_offset 3, -8
 4075              		.cfi_offset 14, -4
2699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
2700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 4076              		.loc 1 2700 0
 4077 0002 0168     		ldr	r1, [r0]
 4078 0004 0B68     		ldr	r3, [r1]
 4079 0006 23F04003 		bic	r3, r3, #64
 4080 000a 0B60     		str	r3, [r1]
2701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
2703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4081              		.loc 1 2703 0
 4082 000c 2023     		movs	r3, #32
 4083 000e 80F86930 		strb	r3, [r0, #105]
2704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 4084              		.loc 1 2705 0
 4085 0012 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
ARM GAS  /tmp/ccYpac0Q.s 			page 129


 4086              	.LVL346:
2706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4087              		.loc 1 2708 0
 4088 0016 0020     		movs	r0, #0
 4089 0018 08BD     		pop	{r3, pc}
 4090              		.cfi_endproc
 4091              	.LFE180:
 4093 001a 00BF     		.section	.text.UART_Receive_IT,"ax",%progbits
 4094              		.align	2
 4095              		.global	UART_Receive_IT
 4096              		.thumb
 4097              		.thumb_func
 4099              	UART_Receive_IT:
 4100              	.LFB181:
2709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Receive an amount of data in interrupt mode.
2712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   Function is called under interruption only, once
2713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
2714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4101              		.loc 1 2718 0
 4102              		.cfi_startproc
 4103              		@ args = 0, pretend = 0, frame = 0
 4104              		@ frame_needed = 0, uses_anonymous_args = 0
 4105              	.LVL347:
2719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
2720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t  uhMask = huart->Mask;
 4106              		.loc 1 2720 0
 4107 0000 B0F85C20 		ldrh	r2, [r0, #92]
 4108              	.LVL348:
2721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t  uhdata;
2722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
2724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
 4109              		.loc 1 2724 0
 4110 0004 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 4111 0008 DBB2     		uxtb	r3, r3
 4112 000a 222B     		cmp	r3, #34
 4113 000c 2FD1     		bne	.L304
2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
 4114              		.loc 1 2718 0
 4115 000e 10B5     		push	{r4, lr}
 4116              	.LCFI47:
 4117              		.cfi_def_cfa_offset 8
 4118              		.cfi_offset 4, -8
 4119              		.cfi_offset 14, -4
2725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 4120              		.loc 1 2726 0
 4121 0010 0368     		ldr	r3, [r0]
 4122 0012 9B8C     		ldrh	r3, [r3, #36]
ARM GAS  /tmp/ccYpac0Q.s 			page 130


 4123 0014 9BB2     		uxth	r3, r3
 4124              	.LVL349:
2727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 4125              		.loc 1 2727 0
 4126 0016 8168     		ldr	r1, [r0, #8]
 4127 0018 B1F5805F 		cmp	r1, #4096
 4128 001c 08D1     		bne	.L305
 4129              		.loc 1 2727 0 is_stmt 0 discriminator 1
 4130 001e 0169     		ldr	r1, [r0, #16]
 4131 0020 31B9     		cbnz	r1, .L305
2728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr ;
 4132              		.loc 1 2729 0 is_stmt 1
 4133 0022 416D     		ldr	r1, [r0, #84]
 4134              	.LVL350:
2730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       *tmp = (uint16_t)(uhdata & uhMask);
 4135              		.loc 1 2730 0
 4136 0024 1A40     		ands	r2, r2, r3
 4137              	.LVL351:
 4138 0026 0A80     		strh	r2, [r1]	@ movhi
 4139              	.LVL352:
2731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->pRxBuffPtr +=2U;
 4140              		.loc 1 2731 0
 4141 0028 436D     		ldr	r3, [r0, #84]
 4142              	.LVL353:
 4143 002a 0233     		adds	r3, r3, #2
 4144 002c 4365     		str	r3, [r0, #84]
 4145 002e 05E0     		b	.L306
 4146              	.LVL354:
 4147              	.L305:
2732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
2734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       *huart->pRxBuffPtr++ = (uint8_t)(uhdata & (uint8_t)uhMask);
 4148              		.loc 1 2735 0
 4149 0030 416D     		ldr	r1, [r0, #84]
 4150 0032 4C1C     		adds	r4, r1, #1
 4151 0034 4465     		str	r4, [r0, #84]
 4152 0036 D2B2     		uxtb	r2, r2
 4153              	.LVL355:
 4154 0038 1A40     		ands	r2, r2, r3
 4155 003a 0A70     		strb	r2, [r1]
 4156              	.LVL356:
 4157              	.L306:
2736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(--huart->RxXferCount == 0U)
 4158              		.loc 1 2738 0
 4159 003c B0F85A30 		ldrh	r3, [r0, #90]
 4160 0040 9BB2     		uxth	r3, r3
 4161 0042 013B     		subs	r3, r3, #1
 4162 0044 9BB2     		uxth	r3, r3
 4163 0046 A0F85A30 		strh	r3, [r0, #90]	@ movhi
 4164 004a BBB9     		cbnz	r3, .L308
2739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
2741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
ARM GAS  /tmp/ccYpac0Q.s 			page 131


 4165              		.loc 1 2741 0
 4166 004c 0268     		ldr	r2, [r0]
 4167 004e 1368     		ldr	r3, [r2]
 4168 0050 23F49073 		bic	r3, r3, #288
 4169 0054 1360     		str	r3, [r2]
2742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4170              		.loc 1 2744 0
 4171 0056 0268     		ldr	r2, [r0]
 4172 0058 9368     		ldr	r3, [r2, #8]
 4173 005a 23F00103 		bic	r3, r3, #1
 4174 005e 9360     		str	r3, [r2, #8]
2745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
2747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 4175              		.loc 1 2747 0
 4176 0060 2023     		movs	r3, #32
 4177 0062 80F86A30 		strb	r3, [r0, #106]
2748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 4178              		.loc 1 2749 0
 4179 0066 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 4180              	.LVL357:
2750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_OK;
 4181              		.loc 1 2751 0
 4182 006a 0020     		movs	r0, #0
 4183 006c 10BD     		pop	{r4, pc}
 4184              	.LVL358:
 4185              	.L304:
 4186              	.LCFI48:
 4187              		.cfi_def_cfa_offset 0
 4188              		.cfi_restore 4
 4189              		.cfi_restore 14
2752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
2755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
2759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 4190              		.loc 1 2759 0
 4191 006e 0268     		ldr	r2, [r0]
 4192              	.LVL359:
 4193 0070 9369     		ldr	r3, [r2, #24]
 4194 0072 43F00803 		orr	r3, r3, #8
 4195 0076 9361     		str	r3, [r2, #24]
 4196              	.LVL360:
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 4197              		.loc 1 2761 0
 4198 0078 0220     		movs	r0, #2
 4199              	.LVL361:
2762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
ARM GAS  /tmp/ccYpac0Q.s 			page 132


 4200              		.loc 1 2763 0
 4201 007a 7047     		bx	lr
 4202              	.LVL362:
 4203              	.L308:
 4204              	.LCFI49:
 4205              		.cfi_def_cfa_offset 8
 4206              		.cfi_offset 4, -8
 4207              		.cfi_offset 14, -4
2754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4208              		.loc 1 2754 0
 4209 007c 0020     		movs	r0, #0
 4210              	.LVL363:
 4211              		.loc 1 2763 0
 4212 007e 10BD     		pop	{r4, pc}
 4213              		.cfi_endproc
 4214              	.LFE181:
 4216              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 4217              		.align	2
 4218              		.global	HAL_UART_IRQHandler
 4219              		.thumb
 4220              		.thumb_func
 4222              	HAL_UART_IRQHandler:
 4223              	.LFB146:
1617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 4224              		.loc 1 1617 0
 4225              		.cfi_startproc
 4226              		@ args = 0, pretend = 0, frame = 0
 4227              		@ frame_needed = 0, uses_anonymous_args = 0
 4228              	.LVL364:
 4229 0000 38B5     		push	{r3, r4, r5, lr}
 4230              	.LCFI50:
 4231              		.cfi_def_cfa_offset 16
 4232              		.cfi_offset 3, -16
 4233              		.cfi_offset 4, -12
 4234              		.cfi_offset 5, -8
 4235              		.cfi_offset 14, -4
 4236 0002 0446     		mov	r4, r0
1618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 4237              		.loc 1 1618 0
 4238 0004 0268     		ldr	r2, [r0]
 4239 0006 D369     		ldr	r3, [r2, #28]
 4240              	.LVL365:
1619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t cr3its;
 4241              		.loc 1 1619 0
 4242 0008 1168     		ldr	r1, [r2]
 4243              	.LVL366:
1625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4244              		.loc 1 1625 0
 4245 000a 13F00F05 		ands	r5, r3, #15
 4246              	.LVL367:
 4247 000e 08D1     		bne	.L311
1628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4248              		.loc 1 1628 0
 4249 0010 13F0200F 		tst	r3, #32
 4250 0014 05D0     		beq	.L311
1628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4251              		.loc 1 1628 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccYpac0Q.s 			page 133


 4252 0016 11F0200F 		tst	r1, #32
 4253 001a 02D0     		beq	.L311
1630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return;
 4254              		.loc 1 1630 0 is_stmt 1
 4255 001c FFF7FEFF 		bl	UART_Receive_IT
 4256              	.LVL368:
1631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4257              		.loc 1 1631 0
 4258 0020 38BD     		pop	{r3, r4, r5, pc}
 4259              	.LVL369:
 4260              	.L311:
1636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(   (errorflags != RESET)
 4261              		.loc 1 1636 0
 4262 0022 9068     		ldr	r0, [r2, #8]
 4263              	.LVL370:
1637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      && (   ((cr3its & USART_CR3_EIE) != RESET)
 4264              		.loc 1 1637 0
 4265 0024 002D     		cmp	r5, #0
 4266 0026 6FD0     		beq	.L313
1638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)) )
 4267              		.loc 1 1638 0
 4268 0028 10F00105 		ands	r5, r0, #1
 4269              	.LVL371:
 4270 002c 02D1     		bne	.L314
1639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4271              		.loc 1 1639 0
 4272 002e 11F4907F 		tst	r1, #288
 4273 0032 69D0     		beq	.L313
 4274              	.L314:
1642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4275              		.loc 1 1642 0
 4276 0034 13F0010F 		tst	r3, #1
 4277 0038 07D0     		beq	.L315
1642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4278              		.loc 1 1642 0 is_stmt 0 discriminator 1
 4279 003a 11F4807F 		tst	r1, #256
 4280 003e 04D0     		beq	.L315
1644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4281              		.loc 1 1644 0 is_stmt 1
 4282 0040 0120     		movs	r0, #1
 4283              	.LVL372:
 4284 0042 1062     		str	r0, [r2, #32]
1646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4285              		.loc 1 1646 0
 4286 0044 E26E     		ldr	r2, [r4, #108]
 4287 0046 0243     		orrs	r2, r2, r0
 4288 0048 E266     		str	r2, [r4, #108]
 4289              	.L315:
1650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4290              		.loc 1 1650 0
 4291 004a 13F0020F 		tst	r3, #2
 4292 004e 07D0     		beq	.L316
1650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4293              		.loc 1 1650 0 is_stmt 0 discriminator 1
 4294 0050 35B1     		cbz	r5, .L316
1652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4295              		.loc 1 1652 0 is_stmt 1
ARM GAS  /tmp/ccYpac0Q.s 			page 134


 4296 0052 2268     		ldr	r2, [r4]
 4297 0054 0220     		movs	r0, #2
 4298 0056 1062     		str	r0, [r2, #32]
1654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4299              		.loc 1 1654 0
 4300 0058 E26E     		ldr	r2, [r4, #108]
 4301 005a 42F00402 		orr	r2, r2, #4
 4302 005e E266     		str	r2, [r4, #108]
 4303              	.L316:
1658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4304              		.loc 1 1658 0
 4305 0060 13F0040F 		tst	r3, #4
 4306 0064 07D0     		beq	.L317
1658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4307              		.loc 1 1658 0 is_stmt 0 discriminator 1
 4308 0066 35B1     		cbz	r5, .L317
1660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4309              		.loc 1 1660 0 is_stmt 1
 4310 0068 2268     		ldr	r2, [r4]
 4311 006a 0420     		movs	r0, #4
 4312 006c 1062     		str	r0, [r2, #32]
1662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4313              		.loc 1 1662 0
 4314 006e E26E     		ldr	r2, [r4, #108]
 4315 0070 42F00202 		orr	r2, r2, #2
 4316 0074 E266     		str	r2, [r4, #108]
 4317              	.L317:
1666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 4318              		.loc 1 1666 0
 4319 0076 13F0080F 		tst	r3, #8
 4320 007a 09D0     		beq	.L318
1666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 4321              		.loc 1 1666 0 is_stmt 0 discriminator 1
 4322 007c 11F0200F 		tst	r1, #32
 4323 0080 00D1     		bne	.L319
1667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4324              		.loc 1 1667 0 is_stmt 1
 4325 0082 2DB1     		cbz	r5, .L318
 4326              	.L319:
1669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4327              		.loc 1 1669 0
 4328 0084 2268     		ldr	r2, [r4]
 4329 0086 0820     		movs	r0, #8
 4330 0088 1062     		str	r0, [r2, #32]
1671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4331              		.loc 1 1671 0
 4332 008a E26E     		ldr	r2, [r4, #108]
 4333 008c 0243     		orrs	r2, r2, r0
 4334 008e E266     		str	r2, [r4, #108]
 4335              	.L318:
1675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4336              		.loc 1 1675 0
 4337 0090 E26E     		ldr	r2, [r4, #108]
 4338 0092 002A     		cmp	r2, #0
 4339 0094 5DD0     		beq	.L310
1678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 4340              		.loc 1 1678 0
ARM GAS  /tmp/ccYpac0Q.s 			page 135


 4341 0096 13F0200F 		tst	r3, #32
 4342 009a 05D0     		beq	.L320
1678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 4343              		.loc 1 1678 0 is_stmt 0 discriminator 1
 4344 009c 11F0200F 		tst	r1, #32
 4345 00a0 02D0     		beq	.L320
1680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 4346              		.loc 1 1680 0 is_stmt 1
 4347 00a2 2046     		mov	r0, r4
 4348 00a4 FFF7FEFF 		bl	UART_Receive_IT
 4349              	.LVL373:
 4350              	.L320:
1685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 4351              		.loc 1 1685 0
 4352 00a8 E36E     		ldr	r3, [r4, #108]
 4353 00aa 13F0080F 		tst	r3, #8
 4354 00ae 04D1     		bne	.L321
1686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {  
 4355              		.loc 1 1686 0 discriminator 1
 4356 00b0 2368     		ldr	r3, [r4]
 4357 00b2 9B68     		ldr	r3, [r3, #8]
1685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 4358              		.loc 1 1685 0 discriminator 1
 4359 00b4 13F0400F 		tst	r3, #64
 4360 00b8 20D0     		beq	.L322
 4361              	.L321:
1691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4362              		.loc 1 1691 0
 4363 00ba 2046     		mov	r0, r4
 4364 00bc FFF7FEFF 		bl	UART_EndRxTransfer
 4365              	.LVL374:
1694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
 4366              		.loc 1 1694 0
 4367 00c0 2368     		ldr	r3, [r4]
 4368 00c2 9A68     		ldr	r2, [r3, #8]
 4369 00c4 12F0400F 		tst	r2, #64
 4370 00c8 14D0     		beq	.L323
1696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4371              		.loc 1 1696 0
 4372 00ca 9A68     		ldr	r2, [r3, #8]
 4373 00cc 22F04002 		bic	r2, r2, #64
 4374 00d0 9A60     		str	r2, [r3, #8]
1699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           {
 4375              		.loc 1 1699 0
 4376 00d2 636E     		ldr	r3, [r4, #100]
 4377 00d4 53B1     		cbz	r3, .L324
1703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4378              		.loc 1 1703 0
 4379 00d6 1F4A     		ldr	r2, .L328
 4380 00d8 5A63     		str	r2, [r3, #52]
1706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             {
 4381              		.loc 1 1706 0
 4382 00da 606E     		ldr	r0, [r4, #100]
 4383 00dc FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4384              	.LVL375:
 4385 00e0 0028     		cmp	r0, #0
 4386 00e2 36D0     		beq	.L310
ARM GAS  /tmp/ccYpac0Q.s 			page 136


1709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             }
 4387              		.loc 1 1709 0
 4388 00e4 606E     		ldr	r0, [r4, #100]
 4389 00e6 436B     		ldr	r3, [r0, #52]
 4390 00e8 9847     		blx	r3
 4391              	.LVL376:
 4392 00ea 38BD     		pop	{r3, r4, r5, pc}
 4393              	.LVL377:
 4394              	.L324:
1715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           }
 4395              		.loc 1 1715 0
 4396 00ec 2046     		mov	r0, r4
 4397 00ee FFF7FEFF 		bl	HAL_UART_ErrorCallback
 4398              	.LVL378:
 4399 00f2 38BD     		pop	{r3, r4, r5, pc}
 4400              	.LVL379:
 4401              	.L323:
1721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
 4402              		.loc 1 1721 0
 4403 00f4 2046     		mov	r0, r4
 4404 00f6 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 4405              	.LVL380:
 4406 00fa 38BD     		pop	{r3, r4, r5, pc}
 4407              	.LVL381:
 4408              	.L322:
1728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 4409              		.loc 1 1728 0
 4410 00fc 2046     		mov	r0, r4
 4411 00fe FFF7FEFF 		bl	HAL_UART_ErrorCallback
 4412              	.LVL382:
1729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 4413              		.loc 1 1729 0
 4414 0102 0023     		movs	r3, #0
 4415 0104 E366     		str	r3, [r4, #108]
 4416 0106 38BD     		pop	{r3, r4, r5, pc}
 4417              	.LVL383:
 4418              	.L313:
1737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4419              		.loc 1 1737 0
 4420 0108 13F4801F 		tst	r3, #1048576
 4421 010c 0ED0     		beq	.L325
1737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4422              		.loc 1 1737 0 is_stmt 0 discriminator 1
 4423 010e 10F4800F 		tst	r0, #4194304
 4424 0112 0BD0     		beq	.L325
1739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the process */
 4425              		.loc 1 1739 0 is_stmt 1
 4426 0114 4FF48013 		mov	r3, #1048576
 4427              	.LVL384:
 4428 0118 1362     		str	r3, [r2, #32]
1741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 4429              		.loc 1 1741 0
 4430 011a 2023     		movs	r3, #32
 4431 011c 84F86930 		strb	r3, [r4, #105]
1742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
 4432              		.loc 1 1742 0
 4433 0120 84F86A30 		strb	r3, [r4, #106]
ARM GAS  /tmp/ccYpac0Q.s 			page 137


1743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
 4434              		.loc 1 1743 0
 4435 0124 2046     		mov	r0, r4
 4436              	.LVL385:
 4437 0126 FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
 4438              	.LVL386:
1744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4439              		.loc 1 1744 0
 4440 012a 38BD     		pop	{r3, r4, r5, pc}
 4441              	.LVL387:
 4442              	.L325:
1748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4443              		.loc 1 1748 0
 4444 012c 13F0800F 		tst	r3, #128
 4445 0130 06D0     		beq	.L326
1748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4446              		.loc 1 1748 0 is_stmt 0 discriminator 1
 4447 0132 11F0800F 		tst	r1, #128
 4448 0136 03D0     		beq	.L326
1750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
 4449              		.loc 1 1750 0 is_stmt 1
 4450 0138 2046     		mov	r0, r4
 4451              	.LVL388:
 4452 013a FFF7FEFF 		bl	UART_Transmit_IT
 4453              	.LVL389:
1751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4454              		.loc 1 1751 0
 4455 013e 38BD     		pop	{r3, r4, r5, pc}
 4456              	.LVL390:
 4457              	.L326:
1755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4458              		.loc 1 1755 0
 4459 0140 13F0400F 		tst	r3, #64
 4460 0144 05D0     		beq	.L310
1755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4461              		.loc 1 1755 0 is_stmt 0 discriminator 1
 4462 0146 11F0400F 		tst	r1, #64
 4463 014a 02D0     		beq	.L310
1757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
 4464              		.loc 1 1757 0 is_stmt 1
 4465 014c 2046     		mov	r0, r4
 4466              	.LVL391:
 4467 014e FFF7FEFF 		bl	UART_EndTransmit_IT
 4468              	.LVL392:
 4469              	.L310:
 4470 0152 38BD     		pop	{r3, r4, r5, pc}
 4471              	.LVL393:
 4472              	.L329:
 4473              		.align	2
 4474              	.L328:
 4475 0154 00000000 		.word	UART_DMAAbortOnError
 4476              		.cfi_endproc
 4477              	.LFE146:
 4479              		.section	.text.UART_Wakeup_AddressConfig,"ax",%progbits
 4480              		.align	2
 4481              		.global	UART_Wakeup_AddressConfig
 4482              		.thumb
ARM GAS  /tmp/ccYpac0Q.s 			page 138


 4483              		.thumb_func
 4485              	UART_Wakeup_AddressConfig:
 4486              	.LFB182:
2764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the UART wake-up from stop mode parameters when triggered by address detectio
2767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param WakeUpSelection UART wake up from stop mode parameters.
2769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void UART_Wakeup_AddressConfig(UART_HandleTypeDef *huart, UART_WakeUpTypeDef WakeUpSelection)
2772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4487              		.loc 1 2772 0
 4488              		.cfi_startproc
 4489              		@ args = 0, pretend = 0, frame = 8
 4490              		@ frame_needed = 0, uses_anonymous_args = 0
 4491              		@ link register save eliminated.
 4492              	.LVL394:
 4493 0000 82B0     		sub	sp, sp, #8
 4494              	.LCFI51:
 4495              		.cfi_def_cfa_offset 8
 4496 0002 02AB     		add	r3, sp, #8
 4497 0004 03E90600 		stmdb	r3, {r1, r2}
2773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_ADDRESSLENGTH_DETECT(WakeUpSelection.AddressLength));
2774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the USART address length */
2776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADDM7, WakeUpSelection.AddressLength);
 4498              		.loc 1 2776 0
 4499 0008 0268     		ldr	r2, [r0]
 4500 000a 5368     		ldr	r3, [r2, #4]
 4501 000c 23F01003 		bic	r3, r3, #16
 4502 0010 BDF80410 		ldrh	r1, [sp, #4]
 4503 0014 0B43     		orrs	r3, r3, r1
 4504 0016 5360     		str	r3, [r2, #4]
2777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the USART address node */
2779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)WakeUpSelection.Address << UART_CR2_AD
 4505              		.loc 1 2779 0
 4506 0018 0268     		ldr	r2, [r0]
 4507 001a 5368     		ldr	r3, [r2, #4]
 4508 001c 23F07F43 		bic	r3, r3, #-16777216
 4509 0020 9DF80610 		ldrb	r1, [sp, #6]	@ zero_extendqisi2
 4510 0024 43EA0163 		orr	r3, r3, r1, lsl #24
 4511 0028 5360     		str	r3, [r2, #4]
2780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4512              		.loc 1 2780 0
 4513 002a 02B0     		add	sp, sp, #8
 4514              	.LCFI52:
 4515              		.cfi_def_cfa_offset 0
 4516              		@ sp needed
 4517 002c 7047     		bx	lr
 4518              		.cfi_endproc
 4519              	.LFE182:
 4521 002e 00BF     		.text
 4522              	.Letext0:
 4523              		.file 2 "/opt/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_types.h"
 4524              		.file 3 "/opt/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
ARM GAS  /tmp/ccYpac0Q.s 			page 139


 4525              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xc.h"
 4526              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 4527              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 4528              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 4529              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 4530              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 4531              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 4532              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart_ex.h"
 4533              		.file 12 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  /tmp/ccYpac0Q.s 			page 140


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f3xx_hal_uart.c
     /tmp/ccYpac0Q.s:22     .text.UART_EndTxTransfer:00000000 $t
     /tmp/ccYpac0Q.s:26     .text.UART_EndTxTransfer:00000000 UART_EndTxTransfer
     /tmp/ccYpac0Q.s:48     .text.UART_EndRxTransfer:00000000 $t
     /tmp/ccYpac0Q.s:52     .text.UART_EndRxTransfer:00000000 UART_EndRxTransfer
     /tmp/ccYpac0Q.s:78     .text.HAL_UART_MspInit:00000000 $t
     /tmp/ccYpac0Q.s:83     .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
     /tmp/ccYpac0Q.s:96     .text.HAL_UART_MspDeInit:00000000 $t
     /tmp/ccYpac0Q.s:101    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
     /tmp/ccYpac0Q.s:114    .text.HAL_UART_DeInit:00000000 $t
     /tmp/ccYpac0Q.s:119    .text.HAL_UART_DeInit:00000000 HAL_UART_DeInit
     /tmp/ccYpac0Q.s:185    .text.HAL_UART_Transmit_IT:00000000 $t
     /tmp/ccYpac0Q.s:190    .text.HAL_UART_Transmit_IT:00000000 HAL_UART_Transmit_IT
     /tmp/ccYpac0Q.s:265    .text.HAL_UART_Receive_IT:00000000 $t
     /tmp/ccYpac0Q.s:270    .text.HAL_UART_Receive_IT:00000000 HAL_UART_Receive_IT
     /tmp/ccYpac0Q.s:386    .text.HAL_UART_Transmit_DMA:00000000 $t
     /tmp/ccYpac0Q.s:391    .text.HAL_UART_Transmit_DMA:00000000 HAL_UART_Transmit_DMA
     /tmp/ccYpac0Q.s:504    .text.HAL_UART_Transmit_DMA:00000084 $d
     /tmp/ccYpac0Q.s:1108   .text.UART_DMATransmitCplt:00000000 UART_DMATransmitCplt
     /tmp/ccYpac0Q.s:1178   .text.UART_DMATxHalfCplt:00000000 UART_DMATxHalfCplt
     /tmp/ccYpac0Q.s:1345   .text.UART_DMAError:00000000 UART_DMAError
     /tmp/ccYpac0Q.s:511    .text.HAL_UART_Receive_DMA:00000000 $t
     /tmp/ccYpac0Q.s:516    .text.HAL_UART_Receive_DMA:00000000 HAL_UART_Receive_DMA
     /tmp/ccYpac0Q.s:633    .text.HAL_UART_Receive_DMA:00000090 $d
     /tmp/ccYpac0Q.s:1224   .text.UART_DMAReceiveCplt:00000000 UART_DMAReceiveCplt
     /tmp/ccYpac0Q.s:1299   .text.UART_DMARxHalfCplt:00000000 UART_DMARxHalfCplt
     /tmp/ccYpac0Q.s:640    .text.HAL_UART_DMAPause:00000000 $t
     /tmp/ccYpac0Q.s:645    .text.HAL_UART_DMAPause:00000000 HAL_UART_DMAPause
     /tmp/ccYpac0Q.s:720    .text.HAL_UART_DMAResume:00000000 $t
     /tmp/ccYpac0Q.s:725    .text.HAL_UART_DMAResume:00000000 HAL_UART_DMAResume
     /tmp/ccYpac0Q.s:794    .text.HAL_UART_DMAStop:00000000 $t
     /tmp/ccYpac0Q.s:799    .text.HAL_UART_DMAStop:00000000 HAL_UART_DMAStop
     /tmp/ccYpac0Q.s:874    .text.HAL_UART_Abort:00000000 $t
     /tmp/ccYpac0Q.s:879    .text.HAL_UART_Abort:00000000 HAL_UART_Abort
     /tmp/ccYpac0Q.s:965    .text.HAL_UART_AbortTransmit:00000000 $t
     /tmp/ccYpac0Q.s:970    .text.HAL_UART_AbortTransmit:00000000 HAL_UART_AbortTransmit
     /tmp/ccYpac0Q.s:1021   .text.HAL_UART_AbortReceive:00000000 $t
     /tmp/ccYpac0Q.s:1026   .text.HAL_UART_AbortReceive:00000000 HAL_UART_AbortReceive
     /tmp/ccYpac0Q.s:1086   .text.HAL_UART_TxCpltCallback:00000000 $t
     /tmp/ccYpac0Q.s:1091   .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
     /tmp/ccYpac0Q.s:1104   .text.UART_DMATransmitCplt:00000000 $t
     /tmp/ccYpac0Q.s:1156   .text.HAL_UART_TxHalfCpltCallback:00000000 $t
     /tmp/ccYpac0Q.s:1161   .text.HAL_UART_TxHalfCpltCallback:00000000 HAL_UART_TxHalfCpltCallback
     /tmp/ccYpac0Q.s:1174   .text.UART_DMATxHalfCplt:00000000 $t
     /tmp/ccYpac0Q.s:1202   .text.HAL_UART_RxCpltCallback:00000000 $t
     /tmp/ccYpac0Q.s:1207   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
     /tmp/ccYpac0Q.s:1220   .text.UART_DMAReceiveCplt:00000000 $t
     /tmp/ccYpac0Q.s:1277   .text.HAL_UART_RxHalfCpltCallback:00000000 $t
     /tmp/ccYpac0Q.s:1282   .text.HAL_UART_RxHalfCpltCallback:00000000 HAL_UART_RxHalfCpltCallback
     /tmp/ccYpac0Q.s:1295   .text.UART_DMARxHalfCplt:00000000 $t
     /tmp/ccYpac0Q.s:1323   .text.HAL_UART_ErrorCallback:00000000 $t
     /tmp/ccYpac0Q.s:1328   .text.HAL_UART_ErrorCallback:00000000 HAL_UART_ErrorCallback
     /tmp/ccYpac0Q.s:1341   .text.UART_DMAError:00000000 $t
     /tmp/ccYpac0Q.s:1411   .text.UART_DMAAbortOnError:00000000 $t
     /tmp/ccYpac0Q.s:1415   .text.UART_DMAAbortOnError:00000000 UART_DMAAbortOnError
     /tmp/ccYpac0Q.s:1443   .text.HAL_UART_AbortCpltCallback:00000000 $t
ARM GAS  /tmp/ccYpac0Q.s 			page 141


     /tmp/ccYpac0Q.s:1448   .text.HAL_UART_AbortCpltCallback:00000000 HAL_UART_AbortCpltCallback
     /tmp/ccYpac0Q.s:1461   .text.HAL_UART_Abort_IT:00000000 $t
     /tmp/ccYpac0Q.s:1466   .text.HAL_UART_Abort_IT:00000000 HAL_UART_Abort_IT
     /tmp/ccYpac0Q.s:1623   .text.HAL_UART_Abort_IT:000000c8 $d
     /tmp/ccYpac0Q.s:1688   .text.UART_DMATxAbortCallback:00000000 UART_DMATxAbortCallback
     /tmp/ccYpac0Q.s:1633   .text.UART_DMARxAbortCallback:00000000 UART_DMARxAbortCallback
     /tmp/ccYpac0Q.s:1629   .text.UART_DMARxAbortCallback:00000000 $t
     /tmp/ccYpac0Q.s:1684   .text.UART_DMATxAbortCallback:00000000 $t
     /tmp/ccYpac0Q.s:1739   .text.HAL_UART_AbortTransmitCpltCallback:00000000 $t
     /tmp/ccYpac0Q.s:1744   .text.HAL_UART_AbortTransmitCpltCallback:00000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/ccYpac0Q.s:1757   .text.HAL_UART_AbortTransmit_IT:00000000 $t
     /tmp/ccYpac0Q.s:1762   .text.HAL_UART_AbortTransmit_IT:00000000 HAL_UART_AbortTransmit_IT
     /tmp/ccYpac0Q.s:1839   .text.HAL_UART_AbortTransmit_IT:00000060 $d
     /tmp/ccYpac0Q.s:1848   .text.UART_DMATxOnlyAbortCallback:00000000 UART_DMATxOnlyAbortCallback
     /tmp/ccYpac0Q.s:1844   .text.UART_DMATxOnlyAbortCallback:00000000 $t
     /tmp/ccYpac0Q.s:1877   .text.HAL_UART_AbortReceiveCpltCallback:00000000 $t
     /tmp/ccYpac0Q.s:1882   .text.HAL_UART_AbortReceiveCpltCallback:00000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/ccYpac0Q.s:1895   .text.HAL_UART_AbortReceive_IT:00000000 $t
     /tmp/ccYpac0Q.s:1900   .text.HAL_UART_AbortReceive_IT:00000000 HAL_UART_AbortReceive_IT
     /tmp/ccYpac0Q.s:1989   .text.HAL_UART_AbortReceive_IT:00000074 $d
     /tmp/ccYpac0Q.s:1998   .text.UART_DMARxOnlyAbortCallback:00000000 UART_DMARxOnlyAbortCallback
     /tmp/ccYpac0Q.s:1994   .text.UART_DMARxOnlyAbortCallback:00000000 $t
     /tmp/ccYpac0Q.s:2031   .text.HAL_MultiProcessor_EnterMuteMode:00000000 $t
     /tmp/ccYpac0Q.s:2036   .text.HAL_MultiProcessor_EnterMuteMode:00000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccYpac0Q.s:2054   .text.HAL_HalfDuplex_EnableTransmitter:00000000 $t
     /tmp/ccYpac0Q.s:2059   .text.HAL_HalfDuplex_EnableTransmitter:00000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccYpac0Q.s:2108   .text.HAL_HalfDuplex_EnableReceiver:00000000 $t
     /tmp/ccYpac0Q.s:2113   .text.HAL_HalfDuplex_EnableReceiver:00000000 HAL_HalfDuplex_EnableReceiver
     /tmp/ccYpac0Q.s:2162   .text.HAL_LIN_SendBreak:00000000 $t
     /tmp/ccYpac0Q.s:2167   .text.HAL_LIN_SendBreak:00000000 HAL_LIN_SendBreak
     /tmp/ccYpac0Q.s:2211   .text.HAL_UART_GetState:00000000 $t
     /tmp/ccYpac0Q.s:2216   .text.HAL_UART_GetState:00000000 HAL_UART_GetState
     /tmp/ccYpac0Q.s:2238   .text.HAL_UART_GetError:00000000 $t
     /tmp/ccYpac0Q.s:2243   .text.HAL_UART_GetError:00000000 HAL_UART_GetError
     /tmp/ccYpac0Q.s:2260   .text.UART_SetConfig:00000000 $t
     /tmp/ccYpac0Q.s:2265   .text.UART_SetConfig:00000000 UART_SetConfig
     /tmp/ccYpac0Q.s:2331   .text.UART_SetConfig:0000005c $d
     /tmp/ccYpac0Q.s:2335   .text.UART_SetConfig:00000060 $t
     /tmp/ccYpac0Q.s:2543   .text.UART_SetConfig:0000017e $d
     /tmp/ccYpac0Q.s:2653   .text.UART_SetConfig:0000020e $d
     /tmp/ccYpac0Q.s:2744   .text.UART_SetConfig:0000028c $d
     /tmp/ccYpac0Q.s:2753   .text.UART_AdvFeatureConfig:00000000 $t
     /tmp/ccYpac0Q.s:2758   .text.UART_AdvFeatureConfig:00000000 UART_AdvFeatureConfig
     /tmp/ccYpac0Q.s:2878   .text.UART_WaitOnFlagUntilTimeout:00000000 $t
     /tmp/ccYpac0Q.s:2883   .text.UART_WaitOnFlagUntilTimeout:00000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccYpac0Q.s:2960   .text.HAL_UART_Transmit:00000000 $t
     /tmp/ccYpac0Q.s:2965   .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
     /tmp/ccYpac0Q.s:3129   .text.HAL_UART_Receive:00000000 $t
     /tmp/ccYpac0Q.s:3134   .text.HAL_UART_Receive:00000000 HAL_UART_Receive
     /tmp/ccYpac0Q.s:3324   .text.UART_CheckIdleState:00000000 $t
     /tmp/ccYpac0Q.s:3329   .text.UART_CheckIdleState:00000000 UART_CheckIdleState
     /tmp/ccYpac0Q.s:3416   .text.HAL_UART_Init:00000000 $t
     /tmp/ccYpac0Q.s:3421   .text.HAL_UART_Init:00000000 HAL_UART_Init
     /tmp/ccYpac0Q.s:3512   .text.HAL_HalfDuplex_Init:00000000 $t
     /tmp/ccYpac0Q.s:3517   .text.HAL_HalfDuplex_Init:00000000 HAL_HalfDuplex_Init
     /tmp/ccYpac0Q.s:3614   .text.HAL_LIN_Init:00000000 $t
     /tmp/ccYpac0Q.s:3619   .text.HAL_LIN_Init:00000000 HAL_LIN_Init
ARM GAS  /tmp/ccYpac0Q.s 			page 142


     /tmp/ccYpac0Q.s:3748   .text.HAL_MultiProcessor_Init:00000000 $t
     /tmp/ccYpac0Q.s:3753   .text.HAL_MultiProcessor_Init:00000000 HAL_MultiProcessor_Init
     /tmp/ccYpac0Q.s:3869   .text.HAL_MultiProcessor_EnableMuteMode:00000000 $t
     /tmp/ccYpac0Q.s:3874   .text.HAL_MultiProcessor_EnableMuteMode:00000000 HAL_MultiProcessor_EnableMuteMode
     /tmp/ccYpac0Q.s:3919   .text.HAL_MultiProcessor_DisableMuteMode:00000000 $t
     /tmp/ccYpac0Q.s:3924   .text.HAL_MultiProcessor_DisableMuteMode:00000000 HAL_MultiProcessor_DisableMuteMode
     /tmp/ccYpac0Q.s:3969   .text.UART_Transmit_IT:00000000 $t
     /tmp/ccYpac0Q.s:3974   .text.UART_Transmit_IT:00000000 UART_Transmit_IT
     /tmp/ccYpac0Q.s:4059   .text.UART_EndTransmit_IT:00000000 $t
     /tmp/ccYpac0Q.s:4064   .text.UART_EndTransmit_IT:00000000 UART_EndTransmit_IT
     /tmp/ccYpac0Q.s:4094   .text.UART_Receive_IT:00000000 $t
     /tmp/ccYpac0Q.s:4099   .text.UART_Receive_IT:00000000 UART_Receive_IT
     /tmp/ccYpac0Q.s:4217   .text.HAL_UART_IRQHandler:00000000 $t
     /tmp/ccYpac0Q.s:4222   .text.HAL_UART_IRQHandler:00000000 HAL_UART_IRQHandler
     /tmp/ccYpac0Q.s:4475   .text.HAL_UART_IRQHandler:00000154 $d
     /tmp/ccYpac0Q.s:4480   .text.UART_Wakeup_AddressConfig:00000000 $t
     /tmp/ccYpac0Q.s:4485   .text.UART_Wakeup_AddressConfig:00000000 UART_Wakeup_AddressConfig
                     .debug_frame:00000010 $d
     /tmp/ccYpac0Q.s:2552   .text.UART_SetConfig:00000187 $d
     /tmp/ccYpac0Q.s:2552   .text.UART_SetConfig:00000188 $t
     /tmp/ccYpac0Q.s:2662   .text.UART_SetConfig:00000217 $d
     /tmp/ccYpac0Q.s:2662   .text.UART_SetConfig:00000218 $t

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetSysClockFreq
HAL_GetTick
HAL_UARTEx_WakeupCallback
