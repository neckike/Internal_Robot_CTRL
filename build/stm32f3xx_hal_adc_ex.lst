ARM GAS  /tmp/cc0XO8k8.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"stm32f3xx_hal_adc_ex.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.ADC_Disable,"ax",%progbits
  22              		.align	2
  23              		.thumb
  24              		.thumb_func
  26              	ADC_Disable:
  27              	.LFB164:
  28              		.file 1 "Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c"
   1:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
   2:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ******************************************************************************
   3:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @file    stm32f3xx_hal_adc_ex.c
   4:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief   This file provides firmware functions to manage the following 
   6:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          functionalities of the Analog to Digital Convertor (ADC)
   7:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          peripheral:
   8:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *           + Operation functions
   9:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *             ++ Start, stop, get result of conversions of injected
  10:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *                group, using 2 possible modes: polling, interruption.
  11:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *             ++ Multimode feature (available on devices with 2 ADCs or more)
  12:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *             ++ Calibration (ADC automatic self-calibration)
  13:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *           + Control functions
  14:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *             ++ Channels configuration on injected group
  15:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          Other functions (generic functions) are available in file 
  16:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          "stm32f3xx_hal_adc.c".
  17:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         
  18:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   @verbatim
  19:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   [..] 
  20:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   (@) Sections "ADC peripheral features" and "How to use this driver" are
  21:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       available in file of generic functions "stm32f3xx_hal_adc.c".
  22:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   [..]
  23:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   @endverbatim
  24:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ******************************************************************************
  25:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @attention
  26:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *
  27:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  28:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *
  29:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * Redistribution and use in source and binary forms, with or without modification,
  30:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * are permitted provided that the following conditions are met:
ARM GAS  /tmp/cc0XO8k8.s 			page 2


  31:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  32:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *      this list of conditions and the following disclaimer.
  33:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  34:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *      this list of conditions and the following disclaimer in the documentation
  35:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *      and/or other materials provided with the distribution.
  36:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  37:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *      may be used to endorse or promote products derived from this software
  38:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *      without specific prior written permission.
  39:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *
  40:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  41:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  42:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  43:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  44:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  45:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  46:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  47:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  48:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  49:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  50:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *
  51:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ******************************************************************************  
  52:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
  53:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
  54:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /* Includes ------------------------------------------------------------------*/
  55:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #include "stm32f3xx_hal.h"
  56:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
  57:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /** @addtogroup STM32F3xx_HAL_Driver
  58:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @{
  59:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
  60:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
  61:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /** @defgroup ADCEx ADCEx
  62:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief ADC Extended HAL module driver
  63:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @{
  64:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
  65:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
  66:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #ifdef HAL_ADC_MODULE_ENABLED
  67:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
  68:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /* Private typedef -----------------------------------------------------------*/
  69:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /* Private define ------------------------------------------------------------*/
  70:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /** @defgroup ADCEx_Private_Constants ADCEx Private Constants
  71:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @{
  72:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
  73:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
  74:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
  75:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
  76:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
  77:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Fixed timeout values for ADC calibration, enable settling time, disable  */
  78:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* settling time.                                                           */
  79:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Values defined to be higher than worst cases: low clock frequency,       */
  80:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* maximum prescalers.                                                      */
  81:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Ex of profile low frequency : Clock source at 0.5 MHz, ADC clock         */
  82:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* prescaler 256 (devices STM32F30xx), sampling time 7.5 ADC clock cycles,  */
  83:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* resolution 12 bits.                                                      */
  84:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Unit: ms                                                                 */
  85:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_CALIBRATION_TIMEOUT         ( 10U)
  86:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_ENABLE_TIMEOUT              (  2U)
  87:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_DISABLE_TIMEOUT             (  2U)
ARM GAS  /tmp/cc0XO8k8.s 			page 3


  88:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_STOP_CONVERSION_TIMEOUT     ( 11U)
  89:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
  90:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Timeout to wait for current conversion on going to be completed.         */
  91:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Timeout fixed to worst case, for 1 channel.                              */
  92:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   - maximum sampling time (601.5 adc_clk)                                */
  93:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   - ADC resolution (Tsar 12 bits= 12.5 adc_clk)                          */
  94:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   - ADC clock (from PLL with prescaler 256 (devices STM32F30xx))         */
  95:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Unit: cycles of CPU clock.                                               */
  96:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_CONVERSION_TIME_MAX_CPU_CYCLES ( 156928U)
  97:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
  98:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Delay for ADC stabilization time (ADC voltage regulator start-up time)   */
  99:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Maximum delay is 10us (refer to device datasheet, param. TADCVREG_STUP). */
 100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Unit: us                                                                 */
 101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_STAB_DELAY_US               ( 10U)
 102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Delay for temperature sensor stabilization time.                         */
 104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Maximum delay is 10us (refer device datasheet, parameter tSTART).        */
 105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Unit: us                                                                 */
 106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_TEMPSENSOR_DELAY_US         ( 10U)
 107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
 110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
 111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
 112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
 114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Timeout values for ADC enable and disable settling time.                 */
 115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Values defined to be higher than worst cases: low clocks freq,           */
 116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* maximum prescaler.                                                       */
 117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Ex of profile low frequency : Clock source at 0.1 MHz, ADC clock         */
 118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* prescaler 4U, sampling time 12.5 ADC clock cycles, resolution 12 bits.    */
 119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Unit: ms                                                                 */
 120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_ENABLE_TIMEOUT              ( 2U)
 121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_DISABLE_TIMEOUT             ( 2U)
 122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Delay for ADC calibration:                                               */
 124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Hardware prerequisite before starting a calibration: the ADC must have   */
 125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* been in power-on state for at least two ADC clock cycles.                */
 126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Unit: ADC clock cycles                                                   */
 127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_PRECALIBRATION_DELAY_ADCCLOCKCYCLES       ( 2U)
 128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Timeout value for ADC calibration                                        */
 130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Value defined to be higher than worst cases: low clocks freq,            */
 131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* maximum prescaler.                                                       */
 132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Ex of profile low frequency : Clock source at 0.1 MHz, ADC clock         */
 133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* prescaler 4U, sampling time 12.5 ADC clock cycles, resolution 12 bits.    */
 134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Unit: ms                                                                 */
 135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_CALIBRATION_TIMEOUT         ( 10U)
 136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Delay for ADC stabilization time.                                        */
 138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Maximum delay is 1us (refer to device datasheet, parameter tSTAB).       */
 139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Unit: us                                                                 */
 140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_STAB_DELAY_US               ( 1U)
 141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Delay for temperature sensor stabilization time.                         */
 143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Maximum delay is 10us (refer to device datasheet, parameter tSTART).     */
 144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Unit: us                                                                 */
ARM GAS  /tmp/cc0XO8k8.s 			page 4


 145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_TEMPSENSOR_DELAY_US         ( 10U)
 146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Maximum number of CPU cycles corresponding to 1 ADC cycle                */
 148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Value fixed to worst case: clock prescalers slowing down ADC clock to    */
 149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* minimum frequency                                                        */
 150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   - AHB prescaler: 16                                                    */
 151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   - ADC prescaler: 8                                                     */
 152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Unit: cycles of CPU clock.                                               */
 153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_CYCLE_WORST_CASE_CPU_CYCLES ( 128U)
 154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* ADC conversion cycles (unit: ADC clock cycles)                           */
 156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* (selected sampling time + conversion time of 12.5 ADC clock cycles, with */
 157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* resolution 12 bits)                                                      */
 158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_CONVERSIONCLOCKCYCLES_SAMPLETIME_1CYCLE5    ( 14U)
 159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_CONVERSIONCLOCKCYCLES_SAMPLETIME_7CYCLES5   ( 20U)
 160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_CONVERSIONCLOCKCYCLES_SAMPLETIME_13CYCLES5  ( 26U)
 161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_CONVERSIONCLOCKCYCLES_SAMPLETIME_28CYCLES5  ( 41U)
 162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_CONVERSIONCLOCKCYCLES_SAMPLETIME_41CYCLES5  ( 54U)
 163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_CONVERSIONCLOCKCYCLES_SAMPLETIME_55CYCLES5  ( 68U)
 164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_CONVERSIONCLOCKCYCLES_SAMPLETIME_71CYCLES5  ( 84U)
 165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_CONVERSIONCLOCKCYCLES_SAMPLETIME_239CYCLES5 (252U)
 166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
 167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
 168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @}
 169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
 170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /* Private macro -------------------------------------------------------------*/
 172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /* Private variables ---------------------------------------------------------*/
 173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /* Private function prototypes -----------------------------------------------*/
 174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
 175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
 176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
 177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
 178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef* hadc);
 179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static HAL_StatusTypeDef ADC_Disable(ADC_HandleTypeDef* hadc);
 180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static HAL_StatusTypeDef ADC_ConversionStop(ADC_HandleTypeDef* hadc, uint32_t ConversionGroup);
 181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
 183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
 184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
 185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
 187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef* hadc);
 188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static HAL_StatusTypeDef ADC_ConversionStop_Disable(ADC_HandleTypeDef* hadc);
 189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
 190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma);
 192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma);
 193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma);
 194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /* Exported functions --------------------------------------------------------*/
 196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions ADCEx Exported Functions
 198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @{
 199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
 200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions_Group1 ADCEx Initialization and de-initialization functions
ARM GAS  /tmp/cc0XO8k8.s 			page 5


 202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief    ADC Extended Initialization and Configuration functions
 203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *
 204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** @verbatim    
 205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****  ===============================================================================
 206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****               ##### Initialization and de-initialization functions #####
 207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****  ===============================================================================
 208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     [..]  This section provides functions allowing to:
 209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Initialize and configure the ADC. 
 210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) De-initialize the ADC.
 211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** @endverbatim
 213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @{
 214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
 215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
 217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
 218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
 219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
 220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
 221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Initializes the ADC peripheral and regular group according to  
 222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         parameters specified in structure "ADC_InitTypeDef".
 223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   As prerequisite, ADC clock must be configured at RCC top level
 224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         depending on possible clock sources: AHB clock or PLL clock.
 225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         See commented example code below that can be copied and uncommented 
 226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         into HAL_ADC_MspInit().
 227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
 228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         This function initializes the ADC MSP (HAL_ADC_MspInit()) only when
 229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         coming from ADC state reset. Following calls to this function can
 230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         be used to reconfigure some parameters of ADC_InitTypeDef  
 231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         structure on the fly, without modifying MSP configuration. If ADC  
 232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         MSP has to be modified again, HAL_ADC_DeInit() must be called
 233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         before HAL_ADC_Init().
 234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned by ADC state.
 235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For parameters constraints, see comments of structure 
 236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         "ADC_InitTypeDef".
 237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   This function configures the ADC within 2 scopes: scope of entire 
 238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         ADC and scope of regular group. For parameters details, see comments 
 239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         of structure "ADC_InitTypeDef".
 240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   For devices with several ADCs: parameters related to common ADC 
 241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         registers (ADC clock mode) are set only if all ADCs sharing the
 242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         same common group are disabled.
 243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         If this is not the case, these common parameters setting are  
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         bypassed without error reporting: it can be the intended behaviour in
 245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         case of update of a parameter of ADC_InitTypeDef on the fly,
 246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         without  disabling the other ADCs sharing the same common group.
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
 248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
 249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
 250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
 251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSharingSameCommonRegister;
 255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmpCFGR = 0U;
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0U;
 257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check ADC handle */
ARM GAS  /tmp/cc0XO8k8.s 			page 6


 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(hadc == NULL)
 260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     return HAL_ERROR;
 262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
 265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign)); 
 269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIG(hadc->Init.ExternalTrigConv));
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
 276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
 281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(hadc->Init.DiscontinuousConvMode != DISABLE)
 283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       assert_param(IS_ADC_REGULAR_DISCONT_NUMBER(hadc->Init.NbrOfDiscConversion));
 285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Configuration of ADC core parameters and ADC MSP related parameters */
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* As prerequisite, into HAL_ADC_MspInit(), ADC clock must be configured  */
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* at RCC top level.                                                      */
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Refer to header of this file for more details on clock enabling        */
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* procedure.                                                             */
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Actions performed only if ADC is coming from state reset:              */
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Initialization of ADC MSP                                            */
 298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - ADC voltage regulator enable                                         */
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (hadc->State == HAL_ADC_STATE_RESET)
 300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Initialize ADC error code */
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
 303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Initialize HAL ADC API internal variables */
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       hadc->InjectionConfig.ChannelCount = 0U;
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       hadc->InjectionConfig.ContextQueue = 0U;
 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Allocate lock resource and initialize it */
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       hadc->Lock = HAL_UNLOCKED;
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Init the low level hardware */
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       HAL_ADC_MspInit(hadc);
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable voltage regulator (if disabled at this step) */
 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADVREGEN_0))
ARM GAS  /tmp/cc0XO8k8.s 			page 7


 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Note: The software must wait for the startup time of the ADC       */
 318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /*       voltage regulator before launching a calibration or          */
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /*       enabling the ADC. This temporization must be implemented by  */ 
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /*       software and is equal to 10 us in the worst case             */
 321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /*       process/temperature/power supply.                            */
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Disable the ADC (if not already disabled) */
 324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_hal_status = ADC_Disable(hadc);
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Check if ADC is effectively disabled */
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Configuration of ADC parameters if previous preliminary actions    */ 
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* are correctly completed.                                           */
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL) &&
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             (tmp_hal_status == HAL_OK)                                  )
 331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Set ADC state */
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_STATE_CLR_SET(hadc->State,
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                             HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                             HAL_ADC_STATE_BUSY_INTERNAL);
 336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Set the intermediate state before moving the ADC voltage         */
 338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* regulator to state enable.                                       */
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           CLEAR_BIT(hadc->Instance->CR, (ADC_CR_ADVREGEN_1 | ADC_CR_ADVREGEN_0));
 340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Set ADVREGEN bits to 0x01U */
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->Instance->CR, ADC_CR_ADVREGEN_0);
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Delay for ADC stabilization time.                                */
 344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Compute number of CPU cycles to wait for */
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           wait_loop_index = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           while(wait_loop_index != 0U)
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             wait_loop_index--;
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           }
 350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Verification that ADC voltage regulator is correctly enabled, whether  */
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* or not ADC is coming from state reset (if any potential problem of     */
 356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* clocking, voltage regulator would not be enabled).                     */
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADVREGEN_0) ||
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_ADVREGEN_1)   )
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_ERROR_INTERNAL);
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC error code to ADC IP internal error */
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_hal_status = HAL_ERROR;
 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
ARM GAS  /tmp/cc0XO8k8.s 			page 8


 373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* correctly completed and if there is no conversion on going on regular    */
 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* group (ADC may already be enabled at this point if HAL_ADC_Init() is     */
 376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* called to update a parameter on the fly).                                */
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL) &&
 378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (tmp_hal_status == HAL_OK)                                &&
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)          )
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
 382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY,
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configuration of common ADC parameters                                 */
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Pointer to the common control register to which is belonging hadc      */
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (Depending on STM32F3 product, there may be up to 4 ADC and 2 common   */
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* control registers)                                                     */
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set handle of the other ADC sharing the same common register           */
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_COMMON_ADC_OTHER(hadc, &tmphadcSharingSameCommonRegister);
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Parameters update conditioned to ADC state:                            */
 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Parameters that can be updated only when ADC is disabled:              */
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - Multimode clock configuration                                       */
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if ((ADC_IS_ENABLE(hadc) == RESET)                                   &&
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ((tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )   )
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Reset configuration of ADC common register CCR:                      */
 405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*   - ADC clock mode: CKMODE                                           */
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Some parameters of this register are not reset, since they are set   */
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* by other functions and must be kept in case of usage of this         */
 408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* function on the fly (update of a parameter of ADC_InitTypeDef        */
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* without needing to reconfigure all other ADC groups/channels         */
 410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* parameters):                                                         */
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*   - multimode related parameters: MDMA, DMACFG, DELAY, MULTI (set    */
 412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*     into HAL_ADCEx_MultiModeConfigChannel() )                        */
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*   - internal measurement paths: Vbat, temperature sensor, Vref       */
 414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*     (set into HAL_ADC_ConfigChannel() or                             */
 415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*     HAL_ADCEx_InjectedConfigChannel() )                              */
 416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(tmpADC_Common->CCR       ,
 418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CCR_CKMODE           ,
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  hadc->Init.ClockPrescaler );
 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configuration of ADC:                                                  */
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - resolution                                                          */
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - data alignment                                                      */
 426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - external trigger to start conversion                                */
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - external trigger polarity                                           */
 428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - continuous conversion mode                                          */
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - overrun                                                             */
ARM GAS  /tmp/cc0XO8k8.s 			page 9


 430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - discontinuous mode                                                  */
 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(tmpCFGR, ADC_CFGR_CONTINUOUS(hadc->Init.ContinuousConvMode) |
 432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      ADC_CFGR_OVERRUN(hadc->Init.Overrun)               |
 433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      hadc->Init.DataAlign                               |
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      hadc->Init.Resolution                               );
 435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable discontinuous mode only if continuous mode is disabled */
 437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (hadc->Init.ContinuousConvMode == DISABLE)
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Enable the selected ADC regular discontinuous mode */
 442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set the number of channels to be converted in discontinuous mode */
 443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(tmpCFGR, ADC_CFGR_DISCEN                                            |
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                          ADC_CFGR_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion)  );
 445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* ADC regular group discontinuous was intended to be enabled,        */
 449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* but ADC regular group modes continuous and sequencer discontinuous */
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* cannot be enabled simultaneously.                                  */
 451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_BUSY_INTERNAL,
 455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_ERROR_CONFIG);
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC error code to ADC IP internal error */
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable external trigger if trigger selection is different of software  */
 463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* start.                                                                 */
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: This configuration keeps the hardware feature of parameter       */
 465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       software start.                                                  */
 467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(tmpCFGR, ADC_CFGR_EXTSEL_SET(hadc, hadc->Init.ExternalTrigConv) |
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                        hadc->Init.ExternalTrigConvEdge                         );
 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Parameters update conditioned to ADC state:                            */
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Parameters that can be updated when ADC is disabled or enabled without */
 475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* conversion on going on regular and injected groups:                    */
 476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - DMA continuous request                                              */
 477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - LowPowerAutoWait feature                                            */
 478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET)
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_AUTDLY |
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                       ADC_CFGR_DMACFG  );
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(tmpCFGR, ADC_CFGR_AUTOWAIT(hadc->Init.LowPowerAutoWait)       |
 484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                        ADC_CFGR_DMACONTREQ(hadc->Init.DMAContinuousRequests) );
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
ARM GAS  /tmp/cc0XO8k8.s 			page 10


 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC configuration register with previous settings */
 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->CFGR,
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_CFGR_DISCNUM |
 490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_CFGR_DISCEN  |
 491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_CFGR_CONT    |
 492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_CFGR_OVRMOD  |
 493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_CFGR_EXTSEL  |
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_CFGR_EXTEN   |
 495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_CFGR_ALIGN   |
 496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_CFGR_RES        ,
 497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                tmpCFGR              );
 498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configuration of regular group sequencer:                              */
 501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - if scan mode is disabled, regular channels sequence length is set to */
 502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*   0x00: 1 channel converted (channel on regular rank 1U)                */
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*   Parameter "NbrOfConversion" is discarded.                            */
 504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*   Note: Scan mode is not present by hardware on this device, but       */
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*   emulated by software for alignment over all STM32 devices.           */
 506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - if scan mode is enabled, regular channels sequence length is set to  */
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*   parameter "NbrOfConversion"                                          */   
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set number of ranks in regular group sequencer */     
 511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->SQR1                     ,
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SQR1_L                               ,
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  (hadc->Init.NbrOfConversion - (uint8_t)1U) );  
 514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_L);
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC error code to none */
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_CLEAR_ERRORCODE(hadc);
 522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set the ADC state */
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
 529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_ERROR_INTERNAL);
 534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR; 
 536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
 541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
ARM GAS  /tmp/cc0XO8k8.s 			page 11


 544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
 545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
 548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Initializes the ADC peripheral and regular group according to  
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         parameters specified in structure "ADC_InitTypeDef".
 551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   As prerequisite, ADC clock must be configured at RCC top level
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (clock source APB2).
 553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         See commented example code below that can be copied and uncommented 
 554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         into HAL_ADC_MspInit().
 555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
 556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         This function initializes the ADC MSP (HAL_ADC_MspInit()) only when
 557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         coming from ADC state reset. Following calls to this function can
 558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         be used to reconfigure some parameters of ADC_InitTypeDef  
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         structure on the fly, without modifying MSP configuration. If ADC  
 560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         MSP has to be modified again, HAL_ADC_DeInit() must be called
 561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         before HAL_ADC_Init().
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state.
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For parameters constraints, see comments of structure 
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         "ADC_InitTypeDef".
 565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   This function configures the ADC within 2 scopes: scope of entire 
 566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         ADC and scope of regular group. For parameters details, see comments 
 567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         of structure "ADC_InitTypeDef".
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
 569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
 570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
 571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_cr1 = 0U;
 575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_cr2 = 0U;
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_sqr1 = 0U;
 577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check ADC handle */
 579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(hadc == NULL)
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     return HAL_ERROR;
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIG(hadc->Init.ExternalTrigConv));
 590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(hadc->Init.DiscontinuousConvMode != DISABLE)
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       assert_param(IS_ADC_REGULAR_DISCONT_NUMBER(hadc->Init.NbrOfDiscConversion));
 598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
ARM GAS  /tmp/cc0XO8k8.s 			page 12


 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* As prerequisite, into HAL_ADC_MspInit(), ADC clock must be configured    */
 602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* at RCC top level.                                                        */
 603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Refer to header of this file for more details on clock enabling          */
 604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* procedure.                                                               */
 605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Actions performed only if ADC is coming from state reset:                */
 607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - Initialization of ADC MSP                                              */
 608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (hadc->State == HAL_ADC_STATE_RESET)
 609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Initialize ADC error code */
 611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_CLEAR_ERRORCODE(hadc);
 612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Allocate lock resource and initialize it */
 614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     hadc->Lock = HAL_UNLOCKED;
 615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Init the low level hardware */
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     HAL_ADC_MspInit(hadc);
 618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential conversion on going, on regular and injected groups */
 621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral */
 622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Note: In case of ADC already enabled, precaution to not launch an        */
 623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*       unwanted conversion while modifying register CR2 by writing 1 to   */
 624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*       bit ADON.                                                          */
 625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* correctly completed.                                                     */
 630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL) &&
 631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (tmp_hal_status == HAL_OK)                                  )
 632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC parameters */
 639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configuration of ADC:                                                  */
 641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - data alignment                                                      */
 642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - external trigger to start conversion                                */
 643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - external trigger polarity (always set to 1U, because needed for all  */
 644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*    triggers: external trigger of SW start)                             */
 645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - continuous conversion mode                                          */
 646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: External trigger polarity (ADC_CR2_EXTTRIG) is set into          */
 647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       HAL_ADC_Start_xxx functions because if set in this function,     */
 648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       a conversion on injected group would start a conversion also on  */
 649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       regular group after ADC enabling.                                */
 650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_cr2 |= (hadc->Init.DataAlign                             |
 651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                 hadc->Init.ExternalTrigConv                      |
 652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                 ADC_CR2_CONTINUOUS(hadc->Init.ContinuousConvMode) );
 653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configuration of ADC:                                                  */
 655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - scan mode                                                           */
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - discontinuous mode disable/enable                                   */
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - discontinuous mode number of conversions                            */
ARM GAS  /tmp/cc0XO8k8.s 			page 13


 658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_cr1 |= (ADC_CR1_SCAN_SET(hadc->Init.ScanConvMode));
 659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable discontinuous mode only if continuous mode is disabled */
 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: If parameter "Init.ScanConvMode" is set to disable, parameter    */
 662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       discontinuous is set anyway, but will have no effect on ADC HW.  */
 663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (hadc->Init.ContinuousConvMode == DISABLE)
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Enable the selected ADC regular discontinuous mode */
 668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set the number of channels to be converted in discontinuous mode */
 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_cr1 |= (ADC_CR1_DISCEN                                           |
 670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                   ADC_CR1_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion) );
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
 673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* ADC regular group discontinuous was intended to be enabled,        */
 675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* but ADC regular group modes continuous and sequencer discontinuous */
 676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* cannot be enabled simultaneously.                                  */
 677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
 679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC error code to ADC IP internal error */
 682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC configuration register CR1 with previous settings */
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CR1,
 688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CR1_SCAN    |
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CR1_DISCEN  |
 690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CR1_DISCNUM    ,
 691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  tmp_cr1             );
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC configuration register CR2 with previous settings */
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CR2,
 695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CR2_ALIGN   |
 696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CR2_EXTSEL  |
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CR2_EXTTRIG |
 698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CR2_CONT       ,
 699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  tmp_cr2             );
 700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configuration of regular group sequencer:                              */
 702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - if scan mode is disabled, regular channels sequence length is set to */
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*   0x00: 1 channel converted (channel on regular rank 1U)                */
 704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*   Parameter "NbrOfConversion" is discarded.                            */
 705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*   Note: Scan mode is present by hardware on this device and, if        */
 706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*   disabled, discards automatically nb of conversions. Anyway, nb of    */
 707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*   conversions is forced to 0x00 for alignment over all STM32 devices.  */
 708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - if scan mode is enabled, regular channels sequence length is set to  */
 709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*   parameter "NbrOfConversion"                                          */
 710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (ADC_CR1_SCAN_SET(hadc->Init.ScanConvMode) == ADC_SCAN_ENABLE)
 711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_sqr1 = ADC_SQR1_L_SHIFT(hadc->Init.NbrOfConversion);
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
ARM GAS  /tmp/cc0XO8k8.s 			page 14


 715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->SQR1,
 716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SQR1_L          ,
 717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                tmp_sqr1             );
 718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check back that ADC registers have effectively been configured to      */
 720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* ensure of no potential problem of ADC core IP clocking.                */
 721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check through register CR2 (excluding bits set in other functions:     */
 722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* execution control bits (ADON, JSWSTART, SWSTART), regular group bits   */
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (DMA), injected group bits (JEXTTRIG and JEXTSEL), channel internal    */
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* measurement path bit (TSVREFE).                                        */
 725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (READ_BIT(hadc->Instance->CR2, ~(ADC_CR2_ADON | ADC_CR2_DMA |
 726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                         ADC_CR2_SWSTART | ADC_CR2_JSWSTART |
 727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                         ADC_CR2_JEXTTRIG | ADC_CR2_JEXTSEL |
 728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                         ADC_CR2_TSVREFE                     ))
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          == tmp_cr2)
 730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC error code to none */
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set the ADC state */
 735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
 742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_ERROR_INTERNAL);
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC error code to ADC IP internal error */
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_hal_status = HAL_ERROR;
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
 756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
 763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
 768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
 769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
 770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Deinitialize the ADC peripheral registers to their default reset
ARM GAS  /tmp/cc0XO8k8.s 			page 15


 772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         values, with deinitialization of the ADC MSP.
 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   For devices with several ADCs: reset of ADC common registers is done 
 774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         only if all ADCs sharing the same common group are disabled.
 775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         If this is not the case, reset of these common parameters reset is  
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         bypassed without error reporting: it can be the intended behaviour in
 777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         case of reset of a single ADC while the other ADCs sharing the same 
 778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         common group is still running.
 779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   For devices with several ADCs: Global reset of all ADCs sharing a
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         common group is possible.
 781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         As this function is intended to reset a single ADC, to not impact 
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         other ADCs, instructions for global reset of multiple ADCs have been
 783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         let commented below.
 784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         If needed, the example code can be copied and uncommented into
 785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function HAL_ADC_MspDeInit().
 786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
 787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
 788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
 789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef* hadc)
 790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSharingSameCommonRegister;
 794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check ADC handle */
 796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(hadc == NULL)
 797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      return HAL_ERROR;
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
 802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Set ADC state */
 805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential conversion on going, on regular and injected groups */
 808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
 811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Flush register JSQR: queue sequencer reset when injected queue         */
 814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* sequencer is enabled and ADC disabled.                                 */
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable injected queue sequencer after injected conversion stop         */
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQM);
 817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable the ADC peripheral */
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Disable(hadc);
 820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Change ADC state */
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       hadc->State = HAL_ADC_STATE_READY;
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {      
ARM GAS  /tmp/cc0XO8k8.s 			page 16


 829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_hal_status = HAL_ERROR;
 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* correctly completed.                                                     */
 836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* ========== Reset ADC registers ========== */
 839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register IER */
 840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_AWD3  | ADC_IT_AWD2 | ADC_IT_AWD1 |
 841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 ADC_IT_JQOVF | ADC_IT_OVR  |
 842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 ADC_IT_JEOS  | ADC_IT_JEOC |
 843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 ADC_IT_EOS   | ADC_IT_EOC  |
 844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 ADC_IT_EOSMP | ADC_IT_RDY                 ) );
 845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register ISR */
 847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_AWD3  | ADC_FLAG_AWD2 | ADC_FLAG_AWD1 |
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 ADC_FLAG_JQOVF | ADC_FLAG_OVR  |
 849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 ADC_FLAG_JEOS  | ADC_FLAG_JEOC |
 850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 ADC_FLAG_EOS   | ADC_FLAG_EOC  |
 851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 ADC_FLAG_EOSMP | ADC_FLAG_RDY                   ) );
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register CR */
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Bits ADC_CR_JADSTP, ADC_CR_ADSTP, ADC_CR_JADSTART, ADC_CR_ADSTART are  */
 855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* in access mode "read-set": no direct reset applicable.                 */
 856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset Calibration mode to default setting (single ended):              */
 857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable voltage regulator:                                             */
 858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: Voltage regulator disable is conditioned to ADC state disabled:  */
 859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       already done above.                                              */
 860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: Voltage regulator disable is intended for power saving.          */
 861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Sequence to disable voltage regulator:                                 */
 862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 1. Set the intermediate state before moving the ADC voltage regulator  */
 863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*    to disable state.                                                   */
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CR, ADC_CR_ADVREGEN_1 | ADC_CR_ADVREGEN_0 | ADC_CR_ADCALDIF);
 865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 2. Set ADVREGEN bits to 0x10U */
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->Instance->CR, ADC_CR_ADVREGEN_1);
 867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register CFGR */
 869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_AWD1CH  | ADC_CFGR_JAUTO   | ADC_CFGR_JAWD1EN |   
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CFGR_AWD1EN  | ADC_CFGR_AWD1SGL | ADC_CFGR_JQM     |     
 871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CFGR_JDISCEN | ADC_CFGR_DISCNUM | ADC_CFGR_DISCEN  | 
 872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CFGR_AUTDLY  | ADC_CFGR_CONT    | ADC_CFGR_OVRMOD  |     
 873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CFGR_EXTEN   | ADC_CFGR_EXTSEL  | ADC_CFGR_ALIGN   |     
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CFGR_RES     | ADC_CFGR_DMACFG  | ADC_CFGR_DMAEN    );
 875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register SMPR1 */
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->SMPR1, ADC_SMPR1_SMP9 | ADC_SMPR1_SMP8 | ADC_SMPR1_SMP7 | 
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                      ADC_SMPR1_SMP6 | ADC_SMPR1_SMP5 | ADC_SMPR1_SMP4 | 
 879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                      ADC_SMPR1_SMP3 | ADC_SMPR1_SMP2 | ADC_SMPR1_SMP1  );
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register SMPR2 */
 882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->SMPR2, ADC_SMPR2_SMP18 | ADC_SMPR2_SMP17 | ADC_SMPR2_SMP16 | 
 883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                      ADC_SMPR2_SMP15 | ADC_SMPR2_SMP14 | ADC_SMPR2_SMP13 | 
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                      ADC_SMPR2_SMP12 | ADC_SMPR2_SMP11 | ADC_SMPR2_SMP10  );
 885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
ARM GAS  /tmp/cc0XO8k8.s 			page 17


 886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register TR1 */
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->TR1, ADC_TR1_HT1 | ADC_TR1_LT1);
 888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register TR2 */
 890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->TR2, ADC_TR2_HT2 | ADC_TR2_LT2);
 891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register TR3 */
 893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->TR3, ADC_TR3_HT3 | ADC_TR3_LT3);
 894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register SQR1 */
 896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_SQ4 | ADC_SQR1_SQ3 | ADC_SQR1_SQ2 | 
 897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_SQR1_SQ1 | ADC_SQR1_L);
 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register SQR2 */
 900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->SQR2, ADC_SQR2_SQ9 | ADC_SQR2_SQ8 | ADC_SQR2_SQ7 | 
 901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_SQR2_SQ6 | ADC_SQR2_SQ5);
 902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register SQR3 */
 904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->SQR3, ADC_SQR3_SQ14 | ADC_SQR3_SQ13 | ADC_SQR3_SQ12 | 
 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_SQR3_SQ11 | ADC_SQR3_SQ10);
 906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register SQR4 */
 908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->SQR4, ADC_SQR4_SQ16 | ADC_SQR4_SQ15);
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register DR */
 911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* bits in access mode read only, no direct reset applicable*/
 912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register OFR1 */
 914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->OFR1, ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1);
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register OFR2 */
 916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->OFR2, ADC_OFR2_OFFSET2_EN | ADC_OFR2_OFFSET2_CH | ADC_OFR2_OFFSET2);
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register OFR3 */
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->OFR3, ADC_OFR3_OFFSET3_EN | ADC_OFR3_OFFSET3_CH | ADC_OFR3_OFFSET3);
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register OFR4 */
 920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->OFR4, ADC_OFR4_OFFSET4_EN | ADC_OFR4_OFFSET4_CH | ADC_OFR4_OFFSET4);
 921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset registers JDR1, JDR2, JDR3, JDR4 */
 923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* bits in access mode read only, no direct reset applicable*/
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register AWD2CR */
 926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->AWD2CR, ADC_AWD2CR_AWD2CH);
 927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register AWD3CR */
 929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->AWD3CR, ADC_AWD3CR_AWD3CH);
 930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register DIFSEL */
 932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->DIFSEL, ADC_DIFSEL_DIFSEL);
 933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register CALFACT */
 935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CALFACT, ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S);
 936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* ========== Reset common ADC registers ========== */
ARM GAS  /tmp/cc0XO8k8.s 			page 18


 943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Pointer to the common control register to which is belonging hadc      */
 945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (Depending on STM32F3 product, there may be up to 4 ADC and 2 common   */
 946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* control registers)                                                     */
 947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set handle of the other ADC sharing the same common register           */
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_COMMON_ADC_OTHER(hadc, &tmphadcSharingSameCommonRegister);
 951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Software is allowed to change common parameters only when all ADCs of  */
 953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* the common group are disabled.                                         */
 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if ((ADC_IS_ENABLE(hadc) == RESET)                                  &&
 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (tmphadcSharingSameCommonRegister.Instance == NULL) ||
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET) )   )
 957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Reset configuration of ADC common register CCR:
 959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         - clock mode: CKMODE
 960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         - multimode related parameters: MDMA, DMACFG, DELAY, MULTI (set into
 961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           HAL_ADCEx_MultiModeConfigChannel() )
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         - internal measurement paths: Vbat, temperature sensor, Vref (set into
 963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           HAL_ADC_ConfigChannel() or HAL_ADCEx_InjectedConfigChannel() )
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       */
 965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       CLEAR_BIT(tmpADC_Common->CCR, ADC_CCR_CKMODE |
 966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CCR_VBATEN |
 967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CCR_TSEN   |
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CCR_VREFEN |
 969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CCR_MDMA   |
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CCR_DMACFG |
 971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CCR_DELAY  |
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CCR_MULTI   );
 973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Other ADC common registers (CSR, CDR) are in access mode read only,
 975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          no direct reset applicable */
 976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* ========== Hard reset and clock disable of ADC peripheral ========== */
 980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Into HAL_ADC_MspDeInit(), ADC clock can be hard reset and disabled     */
 981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* at RCC top level.                                                      */
 982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Refer to header of this file for more details on clock disabling       */
 983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* procedure.                                                             */
 984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* DeInit the low level hardware */
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     HAL_ADC_MspDeInit(hadc);
 988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC error code to none */
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_CLEAR_ERRORCODE(hadc);
 991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     hadc->State = HAL_ADC_STATE_RESET;
 994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
 997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
ARM GAS  /tmp/cc0XO8k8.s 			page 19


1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
1001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
1003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
1004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
1007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
1009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
1010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Deinitialize the ADC peripheral registers to its default reset values.
1011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
1012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
1013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
1014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef* hadc)
1015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** { 
1016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check ADC handle */
1019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(hadc == NULL)
1020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      return HAL_ERROR;
1022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
1025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Set ADC state */
1028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
1029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential conversion on going, on regular and injected groups */
1031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral */
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* correctly completed.                                                     */
1037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* ========== Reset ADC registers ========== */
1040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register SR */
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_AWD | ADC_FLAG_JEOC | ADC_FLAG_EOC |
1042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 ADC_FLAG_JSTRT | ADC_FLAG_STRT));
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                          
1044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register CR1 */
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CR1, (ADC_CR1_AWDEN   | ADC_CR1_JAWDEN | ADC_CR1_DISCNUM | 
1046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CR1_JDISCEN | ADC_CR1_DISCEN | ADC_CR1_JAUTO   | 
1047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CR1_AWDSGL  | ADC_CR1_SCAN   | ADC_CR1_JEOCIE  |   
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CR1_AWDIE   | ADC_CR1_EOCIE  | ADC_CR1_AWDCH    ));
1049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register CR2 */
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CR2, (ADC_CR2_TSVREFE | ADC_CR2_SWSTART | ADC_CR2_JSWSTART | 
1052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CR2_EXTTRIG | ADC_CR2_EXTSEL  | ADC_CR2_JEXTTRIG |  
1053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CR2_JEXTSEL | ADC_CR2_ALIGN   | ADC_CR2_DMA      |        
1054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CR2_RSTCAL  | ADC_CR2_CAL     | ADC_CR2_CONT     |         
1055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CR2_ADON                                          ));
1056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
ARM GAS  /tmp/cc0XO8k8.s 			page 20


1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register SMPR1 */
1058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->SMPR1, (ADC_SMPR1_SMP18 | ADC_SMPR1_SMP17 | ADC_SMPR1_SMP15 | 
1059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                       ADC_SMPR1_SMP15 | ADC_SMPR1_SMP14 | ADC_SMPR1_SMP13 | 
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                       ADC_SMPR1_SMP12 | ADC_SMPR1_SMP11 | ADC_SMPR1_SMP10  ));
1061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register SMPR2 */
1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->SMPR2, (ADC_SMPR2_SMP9 | ADC_SMPR2_SMP8 | ADC_SMPR2_SMP7 | 
1064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                       ADC_SMPR2_SMP6 | ADC_SMPR2_SMP5 | ADC_SMPR2_SMP4 | 
1065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                       ADC_SMPR2_SMP3 | ADC_SMPR2_SMP2 | ADC_SMPR2_SMP1 | 
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                       ADC_SMPR2_SMP0                                    ));
1067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register JOFR1 */
1069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->JOFR1, ADC_JOFR1_JOFFSET1);
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register JOFR2 */
1071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->JOFR2, ADC_JOFR2_JOFFSET2);
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register JOFR3 */
1073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->JOFR3, ADC_JOFR3_JOFFSET3);
1074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register JOFR4 */
1075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->JOFR4, ADC_JOFR4_JOFFSET4);
1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register HTR */
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->HTR, ADC_HTR_HT);
1079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register LTR */
1080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->LTR, ADC_LTR_LT);
1081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register SQR1 */
1083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_L    |
1084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_SQR1_SQ16 | ADC_SQR1_SQ15 | 
1085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_SQR1_SQ14 | ADC_SQR1_SQ13  );
1086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register SQR1 */
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_L    |
1089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_SQR1_SQ16 | ADC_SQR1_SQ15 | 
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_SQR1_SQ14 | ADC_SQR1_SQ13  );
1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register SQR2 */
1093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->SQR2, ADC_SQR2_SQ12 | ADC_SQR2_SQ11 | ADC_SQR2_SQ10 | 
1094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_SQR2_SQ9  | ADC_SQR2_SQ8  | ADC_SQR2_SQ7   );
1095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register SQR3 */
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->SQR3, ADC_SQR3_SQ6 | ADC_SQR3_SQ5 | ADC_SQR3_SQ4 | 
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_SQR3_SQ3 | ADC_SQR3_SQ2 | ADC_SQR3_SQ1  );
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register JSQR */
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->JSQR, ADC_JSQR_JL |
1102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_JSQR_JSQ4 | ADC_JSQR_JSQ3 | 
1103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_JSQR_JSQ2 | ADC_JSQR_JSQ1  );
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register JSQR */
1106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->JSQR, ADC_JSQR_JL |
1107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_JSQR_JSQ4 | ADC_JSQR_JSQ3 | 
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_JSQR_JSQ2 | ADC_JSQR_JSQ1  );
1109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register DR */
1111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* bits in access mode read only, no direct reset applicable*/
1112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset registers JDR1, JDR2, JDR3, JDR4 */
ARM GAS  /tmp/cc0XO8k8.s 			page 21


1114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* bits in access mode read only, no direct reset applicable*/
1115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset VBAT measurement path, in case of enabled before by selecting    */
1117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* channel ADC_CHANNEL_VBAT. */
1118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SYSCFG->CFGR1 &= ~(SYSCFG_CFGR1_VBAT);
1119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* ========== Hard reset ADC peripheral ========== */
1122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Performs a global reset of the entire ADC peripheral: ADC state is     */
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* forced to a similar state after device power-on.                       */
1124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If needed, copy-paste and uncomment the following reset code into      */
1125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* function "void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)":              */
1126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*                                                                        */
1127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  __HAL_RCC_ADC1_FORCE_RESET()                                          */
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  __HAL_RCC_ADC1_RELEASE_RESET()                                        */
1129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* DeInit the low level hardware */
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     HAL_ADC_MspDeInit(hadc);
1132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC error code to none */
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_CLEAR_ERRORCODE(hadc);
1135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
1137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     hadc->State = HAL_ADC_STATE_RESET;
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
1143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
1146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
1147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
1150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @}
1151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
1152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions_Group2 ADCEx Input and Output operation functions
1154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief    ADC Extended IO operation functions
1155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *
1156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** @verbatim   
1157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****  ===============================================================================
1158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****              ##### IO operation functions #####
1159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****  ===============================================================================  
1160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     [..]  This section provides functions allowing to:
1161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Start conversion of regular group.
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Stop conversion of regular group.
1163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Poll for conversion complete on regular group.
1164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Poll for conversion event.
1165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Get result of regular channel conversion.
1166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Start conversion of regular group and enable interruptions.
1167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Stop conversion of regular group and disable interruptions.
1168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Handle ADC interrupt request
1169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Start conversion of regular group and enable DMA transfer.
1170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Stop conversion of regular group and disable ADC DMA transfer.
ARM GAS  /tmp/cc0XO8k8.s 			page 22


1171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Start conversion of injected group.
1173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Stop conversion of injected group.
1174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Poll for conversion complete on injected group.
1175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Get result of injected channel conversion.
1176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Start conversion of injected group and enable interruptions.
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Stop conversion of injected group and disable interruptions.
1178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Start multimode and enable DMA transfer.
1180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Stop multimode and disable ADC DMA transfer.
1181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Get result of multimode conversion.
1182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Perform the ADC self-calibration for single or differential ending.
1184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Get calibration factors for single or differential ending.
1185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Set calibration factors for single or differential ending.
1186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** @endverbatim
1188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @{
1189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
1190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
1192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
1193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
1194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
1195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
1196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of regular group.
1197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions enabled in this function: None.
1198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (for devices with several ADCs):
1199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         if ADC is slave, ADC is enabled only (conversion is not started).
1200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         if ADC is master, ADC is enabled and multimode conversion is started.
1201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
1202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
1203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
1204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef* hadc)
1205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
1206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
1209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
1213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Process locked */
1215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
1216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable the ADC peripheral */
1218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
1219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Start conversion if ADC is effectively enabled */
1221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
1222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state                                                        */
1224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* - Clear state bitfield related to regular group conversion results   */
1225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* - Set state bitfield related to regular operation                    */
1226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
1227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
ARM GAS  /tmp/cc0XO8k8.s 			page 23


1228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY);
1229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
1230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set group injected state (from auto-injection) and multimode state   */
1231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* for all cases of multimode: independent mode, multimode ADC master   */
1232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* or multimode ADC slave (for devices with several ADCs):              */
1233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
1234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
1235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC state (ADC independent or master) */
1236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* If conversions on group regular are also triggering group injected,*/
1239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* update ADC state.                                                  */
1240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != RESET)
1241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
1242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
1243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
1244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
1246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
1247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC state (ADC slave) */
1248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* If conversions on group regular are also triggering group injected,*/
1251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* update ADC state.                                                  */
1252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (ADC_MULTIMODE_AUTO_INJECTED(hadc))
1253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
1254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
1256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
1258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* State machine update: Check if an injected conversion is ongoing */
1259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
1261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Reset ADC error code fields related to conversions on group regular*/
1262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
1263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
1265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
1266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Reset ADC all error code fields */
1267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ADC_CLEAR_ERRORCODE(hadc);
1268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
1270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
1271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
1274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
1275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear regular group conversion flag and overrun flag */
1276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC           */
1277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* operations)                                                          */
1278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
1280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable conversion of regular group.                                  */
1281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.  */
1282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next */
1283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* trigger event.                                                       */
1284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Case of multimode enabled (for devices with several ADCs):           */
ARM GAS  /tmp/cc0XO8k8.s 			page 24


1285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - if ADC is slave, ADC is enabled only (conversion is not started). */
1286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - if ADC is master, ADC is enabled and conversion is started.       */
1287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (ADC_NONMULTIMODE_REG_OR_MULTIMODEMASTER(hadc))
1288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
1289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR, ADC_CR_ADSTART);
1290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
1293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
1295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
1296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
1299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_BUSY;
1301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
1304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
1305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
1306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
1307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
1308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
1309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
1310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
1312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
1313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of regular group.
1314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions enabled in this function: None.
1315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
1316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
1317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
1318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef* hadc)
1319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
1320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
1323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
1326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
1327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****    
1328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Enable the ADC peripheral */
1329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_Enable(hadc);
1330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Start conversion if ADC is effectively enabled */
1332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
1333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state                                                          */
1335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Clear state bitfield related to regular group conversion results     */
1336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Set state bitfield related to regular operation                      */
1337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
1338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC,
1339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY);
1340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set group injected state (from auto-injection) */
ARM GAS  /tmp/cc0XO8k8.s 			page 25


1342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If conversions on group regular are also triggering group injected,    */
1343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* update ADC state.                                                      */
1344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
1345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
1347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* State machine update: Check if an injected conversion is ongoing */
1350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Reset ADC error code fields related to conversions on group regular */
1353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
1354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
1356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Reset ADC all error code fields */
1358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
1359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Process unlocked */
1362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Unlock before starting ADC conversions: in case of potential           */
1363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
1364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
1365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear regular group conversion flag and overrun flag */
1367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
1368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC);
1369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable conversion of regular group.                                    */
1371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If software start has been selected, conversion starts immediately.    */
1372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If external trigger has been selected, conversion will start at next   */
1373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* trigger event.                                                         */
1374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: Alternate trigger for single conversion could be to force an     */
1375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       additional set of bit ADON "hadc->Instance->CR2 |= ADC_CR2_ADON;"*/
1376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (ADC_IS_SOFTWARE_START_REGULAR(hadc))
1377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start ADC conversion on regular group with SW start */
1379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, (ADC_CR2_SWSTART | ADC_CR2_EXTTRIG));
1380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
1382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start ADC conversion on regular group with external trigger */
1384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, ADC_CR2_EXTTRIG);
1385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
1389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
1390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
1391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
1392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
1394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
1395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
1396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
1397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
1398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of both groups regular and injected,
ARM GAS  /tmp/cc0XO8k8.s 			page 26


1399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         disable ADC peripheral.
1400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   ADC peripheral disable is forcing interruption of potential 
1401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         conversion on injected group. If injected group is under use,
1402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         it should be preliminarily stopped using function
1403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         @ref HAL_ADCEx_InjectedStop().
1404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         To stop ADC conversion only on ADC group regular
1405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         while letting ADC group injected conversions running,
1406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         use function @ref HAL_ADCEx_RegularStop().
1407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
1408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status.
1409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
1410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef* hadc)
1411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
1412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
1415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
1418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
1419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* 1. Stop potential conversion on going, on regular and injected groups */
1421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
1422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
1425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripheral */
1427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Disable(hadc);
1428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
1430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
1431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state */
1433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
1434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
1436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
1440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
1441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
1443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
1444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
1445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
1446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
1447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
1448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
1449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
1451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
1452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in 
1453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         case of auto_injection mode), disable ADC peripheral.
1454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   ADC peripheral disable is forcing interruption of potential 
1455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         conversion on injected group. If injected group is under use, it
ARM GAS  /tmp/cc0XO8k8.s 			page 27


1456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
1457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
1458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status.
1459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
1460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef* hadc)
1461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
1462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
1465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      
1467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
1468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
1469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential conversion on going, on regular and injected groups */
1471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral */
1472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
1473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check if ADC is effectively disabled */
1475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
1476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
1478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
1479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
1481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
1484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
1485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
1487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
1488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
1489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
1490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
1492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
1493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
1494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
1495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
1496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Wait for regular group conversion to be completed.
1497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   ADC conversion flags EOS (end of sequence) and EOC (end of
1498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         conversion) are cleared by this function, with an exception:
1499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         if low power feature "LowPowerAutoWait" is enabled, flags are 
1500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         not cleared to not interfere with this feature until data register
1501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         is read using function HAL_ADC_GetValue().
1502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   This function cannot be used in a particular setup: ADC configured 
1503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         in DMA mode and polling for end of each conversion (ADC init
1504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         parameter "EOCSelection" set to ADC_EOC_SINGLE_CONV).
1505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
1506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         performed on each conversion. Nevertheless, polling can still 
1507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         be performed on the complete sequence (ADC init
1508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         parameter "EOCSelection" set to ADC_EOC_SEQ_CONV).
1509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
1510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  Timeout Timeout value in millisecond.
1511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Depending on init parameter "EOCSelection", flags EOS or EOC is 
1512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         checked and cleared depending on autodelay status (bit AUTDLY).     
ARM GAS  /tmp/cc0XO8k8.s 			page 28


1513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
1514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
1515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
1516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
1517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart;
1518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_Flag_EOC;
1519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
1520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_cfgr     = 0x0U;
1521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
1523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /* If end of conversion selected to end of sequence */
1526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
1527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_Flag_EOC = ADC_FLAG_EOS;
1529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* If end of conversion selected to end of each conversion */
1531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else /* ADC_EOC_SINGLE_CONV */
1532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Verification that ADC configuration is compliant with polling for      */
1534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* each conversion:                                                       */
1535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
1536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* several ranks and polling for end of each conversion.                  */
1537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* For code simplicity sake, this particular case is generalized to       */
1538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* ADC configured in DMA mode and and polling for end of each conversion. */
1539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Pointer to the common control register to which is belonging hadc      */
1541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (Depending on STM32F3 product, there may have up to 4 ADC and 2 common */
1542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* control registers)                                                     */
1543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
1544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check DMA configuration, depending on MultiMode set or not */
1546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (READ_BIT(tmpADC_Common->CCR, ADC_CCR_MULTI) == ADC_MODE_INDEPENDENT)
1547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (HAL_IS_BIT_SET(hadc->Instance->CFGR, ADC_CFGR_DMAEN))
1549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
1550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
1551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Process unlocked */
1554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
1555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_ERROR;
1557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
1560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* MultiMode is enabled, Common Control Register MDMA bits must be checked */
1562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (READ_BIT(tmpADC_Common->CCR, ADC_CCR_MDMA) != RESET)
1563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
1564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
1565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Process unlocked */
1568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
1569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
ARM GAS  /tmp/cc0XO8k8.s 			page 29


1570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_ERROR;
1571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_Flag_EOC = (ADC_FLAG_EOC | ADC_FLAG_EOS);
1575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Get relevant register CFGR in ADC instance of ADC master or slave      */
1579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* in function of multimode state (for devices with multimode             */
1580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* available).                                                            */
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
1582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR); 
1584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
1586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_cfgr = READ_REG(ADC_MASTER_INSTANCE(hadc)->CFGR);
1588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Get tick count */
1591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tickstart = HAL_GetTick();  
1592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Wait until End of Conversion or End of Sequence flag is raised */
1594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   while(HAL_IS_BIT_CLR(hadc->Instance->ISR, tmp_Flag_EOC))
1595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if timeout is disabled (set to infinite wait) */
1597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
1598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
1600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
1601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to timeout */
1602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
1603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Process unlocked */
1605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
1606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_TIMEOUT;
1608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Update ADC state machine */
1613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
1614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Determine whether any further conversion upcoming on group regular       */
1616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
1617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(ADC_IS_SOFTWARE_START_REGULAR(hadc)           && 
1618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      (READ_BIT (tmp_cfgr, ADC_CFGR_CONT) == RESET)   )
1619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If End of Sequence is reached, disable interrupts */
1621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if( __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS) )
1622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit             */
1624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* ADSTART==0 (no conversion on going)                                  */
1625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
1626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {        
ARM GAS  /tmp/cc0XO8k8.s 			page 30


1627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC state */
1628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
1629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
1632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
1633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
1634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
1636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
1637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Change ADC state to error state */
1638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC error code to ADC IP internal error */
1641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
1642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Clear end of conversion flag of regular group if low power feature       */
1647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* "LowPowerAutoWait " is disabled, to not interfere with this feature      */
1648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* until data register is read using function HAL_ADC_GetValue().           */
1649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (READ_BIT (tmp_cfgr, ADC_CFGR_AUTDLY) == RESET)
1650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear regular group conversion flag */
1652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (EOC or EOS depending on HAL ADC initialization parameter) */
1653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, tmp_Flag_EOC);
1654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return ADC state */
1657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return HAL_OK;
1658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
1659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
1660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
1661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
1662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
1663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
1665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
1666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Wait for regular group conversion to be completed.
1667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   This function cannot be used in a particular setup: ADC configured 
1668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         in DMA mode.
1669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
1670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         performed on each conversion.
1671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   On STM32F37x devices, limitation in case of sequencer enabled
1672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (several ranks selected): polling cannot be done on each 
1673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         conversion inside the sequence. In this case, polling is replaced by
1674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         wait for maximum conversion time.
1675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
1676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  Timeout Timeout value in millisecond.
1677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
1678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
1679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
1680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
1681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart;
1682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Variables for polling in case of scan mode enabled */
ARM GAS  /tmp/cc0XO8k8.s 			page 31


1684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t Conversion_Timeout_CPU_cycles_max = 0U;
1685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t Conversion_Timeout_CPU_cycles = 0U;
1686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
1688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Verification that ADC configuration is compliant with polling for        */
1691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* each conversion:                                                         */
1692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Particular case is ADC configured in DMA mode                            */
1693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA))
1694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
1696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Process unlocked */
1699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
1700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     return HAL_ERROR;
1702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Get tick count */
1705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tickstart = HAL_GetTick();
1706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Polling for end of conversion: differentiation if single/sequence        */
1708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conversion.                                                              */
1709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - If single conversion for regular group (Scan mode disabled or enabled */
1710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    with NbrOfConversion =1U), flag EOC is used to determine the           */
1711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    conversion completion.                                                */
1712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - If sequence conversion for regular group (scan mode enabled and       */
1713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    NbrOfConversion >=2U), flag EOC is set only at the end of the          */
1714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    sequence.                                                             */
1715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    To poll for each conversion, the maximum conversion time is computed  */
1716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    from ADC conversion time (selected sampling time + conversion time of */
1717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    12.5 ADC clock cycles) and APB2/ADC clock prescalers (depending on    */
1718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    settings, conversion time range can be from 28 to 32256 CPU cycles).  */
1719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    As flag EOC is not set after each conversion, no timeout status can   */
1720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    be set.                                                               */
1721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_SCAN) &&
1722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L)    )
1723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Wait until End of Conversion flag is raised */
1725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     while(HAL_IS_BIT_CLR(hadc->Instance->SR, ADC_FLAG_EOC))
1726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Check if timeout is disabled (set to infinite wait) */
1728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if(Timeout != HAL_MAX_DELAY)
1729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
1730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
1731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
1732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Update ADC state machine to timeout */
1733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
1734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
1735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Process unlocked */
1736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
1737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
1738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           return HAL_TIMEOUT;
1739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
1740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
ARM GAS  /tmp/cc0XO8k8.s 			page 32


1741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
1744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Replace polling by wait for maximum conversion time */
1746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Calculation of CPU cycles corresponding to ADC conversion cycles.      */
1747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Retrieve ADC clock prescaler and ADC maximum conversion cycles on all  */
1748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* channels.                                                              */
1749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     Conversion_Timeout_CPU_cycles_max = ADC_CLOCK_PRESCALER_RANGE() ;
1750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     Conversion_Timeout_CPU_cycles_max *= ADC_CONVCYCLES_MAX_RANGE(hadc);
1751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Poll with maximum conversion time */
1753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     while(Conversion_Timeout_CPU_cycles < Conversion_Timeout_CPU_cycles_max)
1754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Check if timeout is disabled (set to infinite wait) */
1756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if(Timeout != HAL_MAX_DELAY)
1757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
1758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
1759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
1760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Update ADC state machine to timeout */
1761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
1762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
1763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Process unlocked */
1764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
1765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
1766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           return HAL_TIMEOUT;
1767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
1768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       Conversion_Timeout_CPU_cycles ++;
1770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Clear regular group conversion flag */
1774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
1775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Update ADC state machine */
1777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
1778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Determine whether any further conversion upcoming on group regular       */
1780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
1781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Note: On STM32F37x devices, in case of sequencer enabled                 */
1782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*       (several ranks selected), end of conversion flag is raised         */
1783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*       at the end of the sequence.                                        */
1784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(ADC_IS_SOFTWARE_START_REGULAR(hadc)        && 
1785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      (hadc->Init.ContinuousConvMode == DISABLE)   )
1786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {   
1787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
1788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
1789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     { 
1792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_READY);
1793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return ADC state */
1797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return HAL_OK;
ARM GAS  /tmp/cc0XO8k8.s 			page 33


1798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
1799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
1800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
1802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
1803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
1804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
1805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
1806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Poll for conversion event.
1807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
1808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  EventType the ADC event type.
1809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
1810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_AWD1_EVENT: ADC Analog watchdog 1 event (main analog watchdog, present on a
1811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_AWD2_EVENT: ADC Analog watchdog 2 event (additional analog watchdog, not pr
1812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_AWD3_EVENT: ADC Analog watchdog 3 event (additional analog watchdog, not pr
1813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_OVR_EVENT: ADC Overrun event
1814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_JQOVF_EVENT: ADC Injected context queue overflow event
1815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  Timeout Timeout value in millisecond.
1816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
1817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
1818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef* hadc, uint32_t EventType, uint32_t Timeou
1819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
1820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart; 
1821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
1823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
1825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Get start tick count */
1827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tickstart = HAL_GetTick();  
1828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check selected event flag */
1830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   while(__HAL_ADC_GET_FLAG(hadc, EventType) == RESET)
1831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if timeout is disabled (set to infinite wait) */
1833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
1834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
1836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
1837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to timeout */
1838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
1839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Process unlocked */
1841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
1842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_TIMEOUT;
1844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   switch(EventType)
1850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Analog watchdog (level out of window) event */
1852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Note: In case of several analog watchdog enabled, if needed to know      */
1853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* which one triggered and on which ADCx, test ADC state of analog watchdog */
1854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* flags HAL_ADC_STATE_AWD1/2U/3 using function "HAL_ADC_GetState()".        */
ARM GAS  /tmp/cc0XO8k8.s 			page 34


1855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* For example:                                                             */
1856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  " if (HAL_IS_BIT_SET(HAL_ADC_GetState(hadc1), HAL_ADC_STATE_AWD1)) "    */
1857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  " if (HAL_IS_BIT_SET(HAL_ADC_GetState(hadc1), HAL_ADC_STATE_AWD2)) "    */
1858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  " if (HAL_IS_BIT_SET(HAL_ADC_GetState(hadc1), HAL_ADC_STATE_AWD3)) "    */
1859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check analog watchdog 1 flag */
1860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   case ADC_AWD_EVENT:
1861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
1862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
1863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      
1864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear ADC analog watchdog flag */
1865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
1866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     break;
1867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check analog watchdog 2 flag */
1869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   case ADC_AWD2_EVENT:
1870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
1871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
1872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
1873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear ADC analog watchdog flag */
1874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
1875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     break;
1876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check analog watchdog 3 flag */
1878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   case ADC_AWD3_EVENT:
1879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
1880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
1881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
1882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear ADC analog watchdog flag */
1883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
1884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     break;
1885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Injected context queue overflow event */
1887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   case ADC_JQOVF_EVENT:
1888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
1889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
1890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
1891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC error code to Injected context queue overflow */
1892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
1893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear ADC Injected context queue overflow flag */
1895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JQOVF);
1896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     break;
1897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      
1898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Overrun event */
1899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   default: /* Case ADC_OVR_EVENT */
1900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If overrun is set to overwrite previous data, overrun event is not     */
1901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* considered as an error.                                                */
1902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (cf ref manual "Managing conversions without using the DMA and without */
1903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* overrun ")                                                             */
1904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
1905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state */
1907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
1908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC error code to overrun */
1910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
1911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
ARM GAS  /tmp/cc0XO8k8.s 			page 35


1912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear ADC Overrun flag */
1914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     break;
1916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return ADC state */
1919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return HAL_OK;
1920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
1921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
1922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
1923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
1924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
1925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
1927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
1928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Poll for conversion event.
1929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
1930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  EventType the ADC event type.
1931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
1932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_AWD_EVENT: ADC Analog watchdog event.
1933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  Timeout Timeout value in millisecond.
1934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
1935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
1936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef* hadc, uint32_t EventType, uint32_t Timeou
1937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
1938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart; 
1939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
1941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
1943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tickstart = HAL_GetTick();   
1945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
1946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check selected event flag */
1947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   while(__HAL_ADC_GET_FLAG(hadc, EventType) == RESET)
1948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if timeout is disabled (set to infinite wait) */
1950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
1951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
1953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
1954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to timeout */
1955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
1956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Process unlocked */
1958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
1959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_ERROR;
1961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Analog watchdog (level out of window) event */
1966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
1967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
1968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
ARM GAS  /tmp/cc0XO8k8.s 			page 36


1969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Clear ADC analog watchdog flag */
1970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
1971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return ADC state */
1973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return HAL_OK;
1974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
1975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
1976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
1978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
1979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
1980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
1981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
1982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of regular group with interruption.
1983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions enabled in this function:
1984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - EOC (end of conversion of regular group) or EOS (end of 
1985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            sequence of regular group) depending on ADC initialization 
1986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            parameter "EOCSelection"
1987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - overrun, depending on ADC initialization parameter "Overrun"
1988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Each of these interruptions has its dedicated callback function.
1989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (for devices with several ADCs): This 
1990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function must be called for ADC slave first, then ADC master. 
1991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For ADC slave, ADC is enabled only (conversion is not started).  
1992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For ADC master, ADC is enabled and multimode conversion is started.
1993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
1994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
1995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
1996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef* hadc)
1997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
1998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
2001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
2004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
2005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
2006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Process locked */
2007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
2008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable the ADC peripheral */
2010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
2011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Start conversion if ADC is effectively enabled */
2013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
2014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state                                                        */
2016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* - Clear state bitfield related to regular group conversion results   */
2017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* - Set state bitfield related to regular operation                    */
2018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
2019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
2020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY);
2021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
2022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set group injected state (from auto-injection) and multimode state   */
2023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* for all cases of multimode: independent mode, multimode ADC master   */
2024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* or multimode ADC slave (for devices with several ADCs):              */
2025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
ARM GAS  /tmp/cc0XO8k8.s 			page 37


2026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
2027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC state (ADC independent or master) */
2028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
2029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* If conversions on group regular are also triggering group injected,*/
2031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* update ADC state.                                                  */
2032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != RESET)
2033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
2034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
2035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
2036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
2037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
2038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
2039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC state (ADC slave) */
2040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
2041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* If conversions on group regular are also triggering group injected,*/
2043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* update ADC state.                                                  */
2044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (ADC_MULTIMODE_AUTO_INJECTED(hadc))
2045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
2046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
2047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
2048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
2049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
2050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* State machine update: Check if an injected conversion is ongoing */
2051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
2052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
2053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Reset ADC error code fields related to conversions on group regular*/
2054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
2055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
2056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
2057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
2058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Reset ADC all error code fields */
2059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ADC_CLEAR_ERRORCODE(hadc);
2060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
2061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
2062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
2063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Unlock before starting ADC conversions: in case of potential         */
2064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
2065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
2066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
2067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear regular group conversion flag and overrun flag */
2068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC           */
2069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* operations)                                                          */
2070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
2071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
2072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable ADC end of conversion interrupt */
2073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable ADC overrun interrupt */  
2074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       switch(hadc->Init.EOCSelection)
2075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
2076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         case ADC_EOC_SEQ_CONV: 
2077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
2078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, (ADC_IT_EOS));
2079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           break;
2080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* case ADC_EOC_SINGLE_CONV */
2081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         default:
2082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS));
ARM GAS  /tmp/cc0XO8k8.s 			page 38


2083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           break;
2084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
2085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
2086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If overrun is set to overwrite previous data (default setting),      */
2087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* overrun interrupt is not activated (overrun event is not considered  */
2088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* as an error).                                                        */
2089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* (cf ref manual "Managing conversions without using the DMA and       */
2090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* without overrun ")                                                   */
2091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
2092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
2093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
2094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
2095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
2096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable conversion of regular group.                                  */
2097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.  */
2098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next */
2099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* trigger event.                                                       */
2100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Case of multimode enabled (for devices with several ADCs):           */
2101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - if ADC is slave, ADC is enabled only (conversion is not started). */
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - if ADC is master, ADC is enabled and conversion is started.       */
2103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (ADC_NONMULTIMODE_REG_OR_MULTIMODEMASTER(hadc))
2104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
2105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR, ADC_CR_ADSTART);
2106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
2107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
2109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
2111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
2112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
2114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
2115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
2116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_BUSY;
2117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
2118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
2120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
2121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
2122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
2123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
2124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
2125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
2126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
2128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
2129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of regular group with interruption.
2130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions enabled in this function:
2131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - EOC (end of conversion of regular group)
2132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Each of these interruptions has its dedicated callback function.
2133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
2134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
2135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
2136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef* hadc)
2137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
2138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
ARM GAS  /tmp/cc0XO8k8.s 			page 39


2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
2141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
2144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
2145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Enable the ADC peripheral */
2147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_Enable(hadc);
2148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Start conversion if ADC is effectively enabled */
2150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
2151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
2152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state                                                          */
2153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Clear state bitfield related to regular group conversion results     */
2154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Set state bitfield related to regular operation                      */
2155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
2156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC,
2157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY);
2158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set group injected state (from auto-injection) */
2160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If conversions on group regular are also triggering group injected,    */
2161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* update ADC state.                                                      */
2162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
2163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
2165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* State machine update: Check if an injected conversion is ongoing */
2168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
2169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Reset ADC error code fields related to conversions on group regular */
2171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
2172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
2174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Reset ADC all error code fields */
2176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
2177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Process unlocked */
2180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Unlock before starting ADC conversions: in case of potential           */
2181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
2182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
2183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear regular group conversion flag and overrun flag */
2185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
2186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC);
2187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable end of conversion interrupt for regular group */
2189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOC);
2190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable conversion of regular group.                                    */
2192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If software start has been selected, conversion starts immediately.    */
2193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If external trigger has been selected, conversion will start at next   */
2194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* trigger event.                                                         */
2195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (ADC_IS_SOFTWARE_START_REGULAR(hadc))
2196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
ARM GAS  /tmp/cc0XO8k8.s 			page 40


2197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start ADC conversion on regular group with SW start */
2198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, (ADC_CR2_SWSTART | ADC_CR2_EXTTRIG));
2199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
2201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start ADC conversion on regular group with external trigger */
2203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, ADC_CR2_EXTTRIG);
2204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
2206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
2208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
2209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
2210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
2211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
2213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
2214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
2215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
2216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
2217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of both groups regular and injected,
2218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         disable ADC peripheral.
2219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions disabled in this function:
2220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - EOC (end of conversion of regular group) and EOS (end of 
2221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            sequence of regular group)
2222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - overrun
2223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   ADC peripheral disable is forcing interruption of potential 
2224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         conversion on injected group. If injected group is under use,
2225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         it should be preliminarily stopped using function
2226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         @ref HAL_ADCEx_InjectedStop().
2227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         To stop ADC conversion only on ADC group regular
2228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         while letting ADC group injected conversions running,
2229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         use function @ref HAL_ADCEx_RegularStop_IT().
2230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
2231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status.
2232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
2233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef* hadc)
2234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
2235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
2238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
2241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
2242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* 1. Stop potential conversion on going, on regular and injected groups */
2244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
2245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
2247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
2248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
2249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC end of conversion interrupt for regular group */
2250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
2251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
2252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripheral */
ARM GAS  /tmp/cc0XO8k8.s 			page 41


2254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Disable(hadc);
2255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
2257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
2258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state */
2260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
2261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
2262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
2263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
2265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
2267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
2268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
2270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
2271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
2272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
2273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
2274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
2275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
2276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
2278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
2279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of regular group (and injected group in 
2280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         case of auto_injection mode), disable interrution of 
2281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         end-of-conversion, disable ADC peripheral.
2282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
2283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
2284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
2285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef* hadc)
2286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
2287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
2290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      
2292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
2293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
2294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential conversion on going, on regular and injected groups */
2296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral */
2297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
2298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check if ADC is effectively disabled */
2300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
2301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
2302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC end of conversion interrupt for regular group */
2303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
2304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
2306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
2307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
2308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
2309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
2310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
ARM GAS  /tmp/cc0XO8k8.s 			page 42


2311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
2312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
2313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
2315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
2316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
2317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
2318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
2320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
2321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
2322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
2323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
2324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of regular group and transfers result
2325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         through DMA.
2326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions enabled in this function:
2327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA transfer complete
2328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA half transfer
2329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - overrun
2330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Each of these interruptions has its dedicated callback function.
2331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (for devices with several ADCs): This 
2332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function is for single-ADC mode only. For multimode, use the 
2333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         dedicated MultimodeStart function.
2334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
2335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  pData The destination Buffer address.
2336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  Length The length of data to be transferred from ADC peripheral to memory.
2337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
2338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
2339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef* hadc, uint32_t* pData, uint32_t Length)
2340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
2341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
2344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
2347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
2348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
2349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Process locked */
2350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
2351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Verification if multimode is disabled (for devices with several ADC)   */
2353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If multimode is enabled, dedicated function multimode conversion       */
2354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* start DMA must be used.                                                */
2355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(ADC_COMMON_CCR_MULTI(hadc) == RESET)
2356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable the ADC peripheral */
2358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Enable(hadc);
2359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
2360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start conversion if ADC is effectively enabled */
2361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
2362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
2363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC state                                                      */
2364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* - Clear state bitfield related to regular group conversion results */
2365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* - Set state bitfield related to regular operation                  */
2366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
2367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL
ARM GAS  /tmp/cc0XO8k8.s 			page 43


2368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY);
2369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set group injected state (from auto-injection) and multimode state */
2371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* for all cases of multimode: independent mode, multimode ADC master */
2372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* or multimode ADC slave (for devices with several ADCs):            */
2373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
2374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
2375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Set ADC state (ADC independent or master) */
2376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
2377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
2378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* If conversions on group regular are also triggering group injected,*/
2379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* update ADC state.                                                  */
2380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != RESET)
2381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
2382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
2383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           }
2384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
2385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         else
2386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
2387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Set ADC state (ADC slave) */
2388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
2389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
2390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* If conversions on group regular are also triggering group injected,*/
2391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* update ADC state.                                                  */
2392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           if (ADC_MULTIMODE_AUTO_INJECTED(hadc))
2393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
2394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
2395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           }
2396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
2397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* State machine update: Check if an injected conversion is ongoing */
2399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
2400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
2401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Reset ADC error code fields related to conversions on group regular*/
2402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
2403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
2404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         else
2405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
2406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Reset ADC all error code fields */
2407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_CLEAR_ERRORCODE(hadc);
2408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
2409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Process unlocked */
2411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Unlock before starting ADC conversions: in case of potential         */
2412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* interruption, to let the process to ADC IRQ Handler.                 */
2413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
2414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set the DMA transfer complete callback */
2417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
2418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set the DMA half transfer complete callback */
2420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
2421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set the DMA error callback */
2423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
2424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
ARM GAS  /tmp/cc0XO8k8.s 			page 44


2425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****               
2426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC */
2427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* start (in case of SW start):                                       */
2428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Clear regular group conversion flag and overrun flag */
2430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* (To ensure of no unknown state from potential previous ADC         */
2431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* operations)                                                        */
2432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
2433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Enable ADC overrun interrupt */
2435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
2436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Enable ADC DMA mode */
2438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
2439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Start the DMA channel */
2441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
2442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  
2443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Enable conversion of regular group.                                */
2444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* If software start has been selected, conversion starts immediately.*/
2445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* If external trigger has been selected, conversion will start at    */
2446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* next trigger event.                                                */
2447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR, ADC_CR_ADSTART);
2448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
2450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
2451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
2452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Process unlocked */
2453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
2454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
2455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
2457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_hal_status = HAL_ERROR;
2459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
2460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
2461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
2462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
2464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
2465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
2466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_BUSY;
2467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
2468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
2470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
2471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
2472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
2473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
2474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
2475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
2476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
2478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
2479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of regular group and transfers result
2480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         through DMA.
2481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions enabled in this function:
ARM GAS  /tmp/cc0XO8k8.s 			page 45


2482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA transfer complete
2483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA half transfer
2484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Each of these interruptions has its dedicated callback function.
2485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   For devices with several ADCs: This function is for single-ADC mode 
2486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         only. For multimode, use the dedicated MultimodeStart function.
2487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
2488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  pData The destination Buffer address.
2489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  Length The length of data to be transferred from ADC peripheral to memory.
2490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
2491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
2492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef* hadc, uint32_t* pData, uint32_t Length)
2493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
2494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
2497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
2500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
2501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Enable the ADC peripheral */
2503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_Enable(hadc);
2504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Start conversion if ADC is effectively enabled */
2506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
2507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
2508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state                                                          */
2509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Clear state bitfield related to regular group conversion results     */
2510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Set state bitfield related to regular operation                      */
2511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
2512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC,
2513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY);
2514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set group injected state (from auto-injection) */
2516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If conversions on group regular are also triggering group injected,    */
2517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* update ADC state.                                                      */
2518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
2519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
2521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* State machine update: Check if an injected conversion is ongoing */
2524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
2525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Reset ADC error code fields related to conversions on group regular */
2527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
2528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
2530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Reset ADC all error code fields */
2532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
2533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Process unlocked */
2536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Unlock before starting ADC conversions: in case of potential           */
2537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
2538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
ARM GAS  /tmp/cc0XO8k8.s 			page 46


2539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set the DMA transfer complete callback */
2541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
2542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        
2543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set the DMA half transfer complete callback */
2544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
2545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set the DMA error callback */
2547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
2548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC     */
2551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* start (in case of SW start):                                           */
2552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear regular group conversion flag and overrun flag */
2554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
2555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC);
2556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable ADC DMA mode */
2558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     hadc->Instance->CR2 |= ADC_CR2_DMA;
2559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Start the DMA channel */
2561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
2562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable conversion of regular group.                                    */
2564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If software start has been selected, conversion starts immediately.    */
2565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If external trigger has been selected, conversion will start at next   */
2566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* trigger event.                                                         */
2567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: Alternate trigger for single conversion could be to force an     */
2568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       additional set of bit ADON "hadc->Instance->CR2 |= ADC_CR2_ADON;"*/
2569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (ADC_IS_SOFTWARE_START_REGULAR(hadc))
2570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start ADC conversion on regular group with SW start */
2572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, (ADC_CR2_SWSTART | ADC_CR2_EXTTRIG));
2573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
2575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start ADC conversion on regular group with external trigger */
2577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, ADC_CR2_EXTTRIG);
2578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
2580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
2582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
2583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
2584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
2585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
2587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
2588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
2589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
2590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
2591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of both groups regular and injected,
2592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         disable ADC DMA transfer, disable ADC peripheral.
2593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions disabled in this function:
2594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA transfer complete
2595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA half transfer
ARM GAS  /tmp/cc0XO8k8.s 			page 47


2596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - overrun
2597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   ADC peripheral disable is forcing interruption of potential 
2598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         conversion on injected group. If injected group is under use,
2599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         it should be preliminarily stopped using function
2600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         @ref HAL_ADCEx_InjectedStop().
2601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         To stop ADC conversion only on ADC group regular
2602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         while letting ADC group injected conversions running,
2603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         use function @ref HAL_ADCEx_RegularStop_DMA().
2604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (for devices with several ADCs): This 
2605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function is for single-ADC mode only. For multimode, use the 
2606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         dedicated MultimodeStop function.
2607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
2608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status.
2609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
2610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef* hadc)
2611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {  
2612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
2615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
2618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
2619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* 1. Stop potential conversion on going, on regular and injected groups */
2621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
2622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
2624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
2625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
2626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC DMA (ADC DMA configuration ADC_CFGR_DMACFG is kept) */
2627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
2628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
2630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
2631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);   
2632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
2634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status != HAL_OK)
2635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
2637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);     
2638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
2641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
2642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripheral */
2644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed,          */
2645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* to retain a potential failing status.                                  */
2646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
2647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Disable(hadc);
2649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
2651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_Disable(hadc);
ARM GAS  /tmp/cc0XO8k8.s 			page 48


2653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
2656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
2657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state */
2659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
2660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
2661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
2662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
2665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
2667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
2668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
2670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
2671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
2672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
2673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
2674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
2675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
2676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
2678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
2679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of regular group (and injected group in 
2680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable 
2681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         ADC peripheral.
2682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   ADC peripheral disable is forcing interruption of potential 
2683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         conversion on injected group. If injected group is under use, it
2684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
2685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   For devices with several ADCs: This function is for single-ADC mode 
2686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         only. For multimode, use the dedicated MultimodeStop function.
2687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
2688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status.
2689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
2690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef* hadc)
2691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
2692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
2695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      
2697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
2698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
2699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential conversion on going, on regular and injected groups */
2701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral */
2702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
2703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check if ADC is effectively disabled */
2705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
2706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
2707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC DMA mode */
2708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     hadc->Instance->CR2 &= ~ADC_CR2_DMA;
2709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
ARM GAS  /tmp/cc0XO8k8.s 			page 49


2710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
2711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
2712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
2713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
2715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
2716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state */
2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
2719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
2720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
2721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
2723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
2725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
2726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
2728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
2730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
2731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
2733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
2734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
2735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
2736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
2738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
2739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
2740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
2741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
2742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Get ADC regular group conversion result.
2743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Reading register DR automatically clears ADC flag EOC
2744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (ADC group regular end of unitary conversion).
2745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   This function does not clear ADC flag EOS 
2746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (ADC group regular end of sequence conversion).
2747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Occurrence of flag EOS rising:
2748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - If sequencer is composed of 1 rank, flag EOS is equivalent
2749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            to flag EOC.
2750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - If sequencer is composed of several ranks, during the scan
2751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            sequence flag EOC only is raised, at the end of the scan sequence
2752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            both flags EOC and EOS are raised.
2753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         To clear this flag, either use function: 
2754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
2755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         model polling: @ref HAL_ADC_PollForConversion() 
2756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_EOS).
2757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
2758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval ADC group regular conversion data
2759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
2761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
2762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
2763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Note: ADC flag EOC is not cleared here by software because               */
2766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*       automatically cleared by hardware when reading register DR.        */
ARM GAS  /tmp/cc0XO8k8.s 			page 50


2767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return ADC converted value */ 
2769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return hadc->Instance->DR;
2770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
2771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
2772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
2773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
2774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
2775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
2777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
2778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Get ADC regular group conversion result.
2779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Reading register DR automatically clears ADC flag EOC
2780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (ADC group regular end of unitary conversion).
2781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   This function does not clear ADC flag EOS 
2782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (ADC group regular end of sequence conversion).
2783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Occurrence of flag EOS rising:
2784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - If sequencer is composed of 1 rank, flag EOS is equivalent
2785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            to flag EOC.
2786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - If sequencer is composed of several ranks, during the scan
2787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            sequence flag EOC only is raised, at the end of the scan sequence
2788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            both flags EOC and EOS are raised.
2789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         To clear this flag, either use function: 
2790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
2791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         model polling: @ref HAL_ADC_PollForConversion() 
2792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_EOS).
2793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
2794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval ADC group regular conversion data
2795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
2796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
2797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
2798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
2799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Note: EOC flag is not cleared here by software because automatically     */
2802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*       cleared by hardware when reading register DR.                      */
2803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return ADC converted value */ 
2805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return hadc->Instance->DR;
2806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
2807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
2808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
2810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
2811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
2812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
2813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
2814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Handles ADC interrupt request.  
2815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
2816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
2817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
2818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef* hadc)
2819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
2820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t overrun_error = 0U; /* flag set if overrun occurrence has to be considered as an error *
2821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
2822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_cfgr     = 0x0U;
2823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_cfgr_jqm = 0x0U;
ARM GAS  /tmp/cc0XO8k8.s 			page 51


2824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
2826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
2828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
2829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* ========== Check End of Conversion flag for regular group ========== */
2831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if( (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_EOC)) || 
2832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_EOS))   )
2833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
2834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update state machine on conversion status if not in error state */
2835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
2836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state */
2838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC); 
2839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Get relevant register CFGR in ADC instance of ADC master or slave    */
2842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* in function of multimode state (for devices with multimode           */
2843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* available).                                                          */
2844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (ADC_NONMULTIMODE_REG_OR_MULTIMODEMASTER(hadc))
2845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_cfgr = READ_REG(hadc->Instance->CFGR); 
2847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
2849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_cfgr = READ_REG(ADC_MASTER_INSTANCE(hadc)->CFGR);
2851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable interruption if no further conversion upcoming by regular      */
2854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* external trigger or by continuous mode,                                */
2855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* and if scan sequence if completed.                                     */
2856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(ADC_IS_SOFTWARE_START_REGULAR(hadc)         && 
2857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == RESET)  )
2858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If End of Sequence is reached, disable interrupts */
2860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if( __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS) )
2861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
2862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit           */
2863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* ADSTART==0 (no conversion on going)                                */
2864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
2865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
2866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Disable ADC end of sequence conversion interrupt */
2867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Note: Overrun interrupt was enabled with EOC interrupt in        */
2868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* HAL_Start_IT(), but is not disabled here because can be used     */
2869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* by overrun IRQ process below.                                    */
2870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
2871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
2872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Set ADC state */
2873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
2874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
2875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
2876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
2877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_READY);
2878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           }
2879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
2880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         else
ARM GAS  /tmp/cc0XO8k8.s 			page 52


2881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
2882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Update ADC state machine to error */
2883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Set ADC error code to ADC IP internal error */
2886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
2888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
2889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Conversion complete callback */
2892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: into callback, to determine if conversion has been triggered     */
2893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       from EOC or EOS, possibility to use:                             */
2894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*        " if( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_EOS)) "                */
2895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       HAL_ADC_ConvCpltCallback(hadc);
2896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear regular group conversion flag */
2899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: in case of overrun set to ADC_OVR_DATA_PRESERVED, end of         */
2900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       conversion flags clear induces the release of the preserved      */
2901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       data.                                                            */
2902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       Therefore, if the preserved data value is needed, it must be     */
2903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       read preliminarily into HAL_ADC_ConvCpltCallback().              */
2904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS) );
2905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
2906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* ========== Check End of Conversion flag for injected group ========== */
2909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if( (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOC) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_JEOC)) ||   
2910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_JEOS))   )
2911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
2912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
2913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
2914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Get relevant register CFGR in ADC instance of ADC master or slave      */
2916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* in function of multimode state (for devices with multimode             */
2917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* available).                                                            */
2918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (ADC_NONMULTIMODE_REG_OR_MULTIMODEMASTER(hadc))
2919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_cfgr = READ_REG(hadc->Instance->CFGR); 
2921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
2923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_cfgr = READ_REG(ADC_MASTER_INSTANCE(hadc)->CFGR);
2925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable interruption if no further conversion upcoming by injected     */
2928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* external trigger or by automatic injected conversion with regular      */
2929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* group having no further conversion upcoming (same conditions as        */
2930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* regular group interruption disabling above),                           */
2931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* and if injected scan sequence is completed.                            */
2932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(ADC_IS_SOFTWARE_START_INJECTED(hadc)                   ||
2933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        ((READ_BIT (tmp_cfgr, ADC_CFGR_JAUTO) == RESET)    &&
2934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         (ADC_IS_SOFTWARE_START_REGULAR(hadc)          &&
2935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         (READ_BIT (tmp_cfgr, ADC_CFGR_CONT) == RESET)   )   )   )
2936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If End of Sequence is reached, disable interrupts */
ARM GAS  /tmp/cc0XO8k8.s 			page 53


2938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if( __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS))
2939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
2940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Get relevant register CFGR in ADC instance of ADC master or slave  */
2942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* in function of multimode state (for devices with multimode         */
2943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* available).                                                        */
2944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (ADC_NONMULTIMODE_INJ_OR_MULTIMODEMASTER(hadc))
2945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
2946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           tmp_cfgr_jqm = READ_REG(hadc->Instance->CFGR); 
2947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
2948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         else
2949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
2950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           tmp_cfgr_jqm = READ_REG(ADC_MASTER_INSTANCE(hadc)->CFGR);
2951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
2952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Particular case if injected contexts queue is enabled:             */
2954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* when the last context has been fully processed, JSQR is reset      */
2955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* by the hardware. Even if no injected conversion is planned to come */
2956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* (queue empty, triggers are ignored), it can start again            */
2957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* immediately after setting a new context (JADSTART is still set).   */
2958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Therefore, state of HAL ADC injected group is kept to busy.        */
2959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if(READ_BIT(tmp_cfgr_jqm, ADC_CFGR_JQM) == RESET)
2960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
2961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Allowed to modify bits ADC_IT_JEOC/ADC_IT_JEOS only if bit       */
2962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* JADSTART==0 (no conversion on going)                             */
2963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           if (ADC_IS_CONVERSION_ONGOING_INJECTED(hadc) == RESET)
2964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
2965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             /* Disable ADC end of sequence conversion interrupt  */
2966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC | ADC_IT_JEOS);
2967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             
2968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             /* Set ADC state */
2969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
2970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
2972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             { 
2973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****               SET_BIT(hadc->State, HAL_ADC_STATE_READY);
2974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             }
2975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           }
2976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           else
2977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
2978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             /* Update ADC state machine to error */
2979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
2981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             /* Set ADC error code to ADC IP internal error */
2982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           }
2984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
2985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
2986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Conversion complete callback */
2989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: into callback, to determine if conversion has been triggered     */
2990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       from JEOC or JEOS, possibility to use:                           */
2991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*        " if( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_JEOS)) "               */
2992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     HAL_ADCEx_InjectedConvCpltCallback(hadc);
2993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear injected group conversion flag */
ARM GAS  /tmp/cc0XO8k8.s 			page 54


2995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC | ADC_FLAG_JEOS);
2996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
2997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* ========== Check analog watchdog 1 flag ========== */
2999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_AWD1) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_AWD1))
3000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
3002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
3003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Level out of window 1 callback */
3005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     HAL_ADC_LevelOutOfWindowCallback(hadc);
3006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear ADC analog watchdog flag */ 
3007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
3008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* ========== Check analog watchdog 2 flag ========== */
3011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_AWD2) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_AWD2))
3012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
3014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
3015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Level out of window 2 callback */
3017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     HAL_ADCEx_LevelOutOfWindow2Callback(hadc);
3018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear ADC analog watchdog flag */ 
3019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
3020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   } 
3021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* ========== Check analog watchdog 3 flag ========== */
3023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_AWD3) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_AWD3)) 
3024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
3026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
3027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Level out of window 3 callback */
3029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     HAL_ADCEx_LevelOutOfWindow3Callback(hadc);
3030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear ADC analog watchdog flag */ 
3031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
3032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* ========== Check Overrun flag ========== */
3035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_OVR) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_OVR))
3036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If overrun is set to overwrite previous data (default setting),        */
3038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* overrun event is not considered as an error.                           */
3039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (cf ref manual "Managing conversions without using the DMA and         */
3040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* without overrun ")                                                     */
3041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Exception for usage with DMA overrun event always considered as an     */
3042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* error.                                                                 */
3043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
3044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       overrun_error = 1U;
3046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
3048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Pointer to the common control register to which is belonging hadc    */
3050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* (Depending on STM32F3 product, there may be up to 4 ADC and 2 common */
3051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* control registers)                                                   */
ARM GAS  /tmp/cc0XO8k8.s 			page 55


3052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmpADC_Common = ADC_COMMON_REGISTER(hadc);
3053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Check DMA configuration, depending on MultiMode set or not */
3055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (READ_BIT(tmpADC_Common->CCR, ADC_CCR_MULTI) == ADC_MODE_INDEPENDENT)
3056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (HAL_IS_BIT_SET(hadc->Instance->CFGR, ADC_CFGR_DMAEN))
3058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
3059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           overrun_error = 1U;  
3060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
3061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
3063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* MultiMode is enabled, Common Control Register MDMA bits must be checked */
3065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (READ_BIT(tmpADC_Common->CCR, ADC_CCR_MDMA) != RESET)
3066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
3067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           overrun_error = 1U;  
3068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
3069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (overrun_error == 1U)
3073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
3075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
3076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC error code to ADC IP internal error */
3078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
3079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Error callback */ 
3081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       HAL_ADC_ErrorCallback(hadc);
3082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear the Overrun flag */
3085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
3086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* ========== Check Injected context queue overflow flag ========== */
3091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JQOVF) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_JQOVF))
3092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
3094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
3095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC error code to ADC IP internal error */
3097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
3098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear the Injected context queue overflow flag */
3100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JQOVF);
3101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Error callback */ 
3103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     HAL_ADCEx_InjectedQueueOverflowCallback(hadc);
3104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
3107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
3108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
ARM GAS  /tmp/cc0XO8k8.s 			page 56


3109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
3110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
3111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
3113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
3114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Handles ADC interrupt request  
3115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
3116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
3117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
3118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef* hadc)
3119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
3120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
3121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
3123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
3124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* ========== Check End of Conversion flag for regular group ========== */
3127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(__HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_EOC))
3128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC) )
3130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update state machine on conversion status if not in error state */
3132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
3133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC state */
3135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC); 
3136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Determine whether any further conversion upcoming on group regular   */
3139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* by external trigger, continuous mode or scan sequence on going.      */
3140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Note: On STM32F37x devices, in case of sequencer enabled             */
3141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       (several ranks selected), end of conversion flag is raised     */
3142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       at the end of the sequence.                                    */
3143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if(ADC_IS_SOFTWARE_START_REGULAR(hadc)       && 
3144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          (hadc->Init.ContinuousConvMode == DISABLE)  )
3145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Disable ADC end of single conversion interrupt  */
3147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
3148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
3149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC state */
3150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
3151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
3152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
3153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
3154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
3155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
3156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Conversion complete callback */
3159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       HAL_ADC_ConvCpltCallback(hadc);
3160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear regular group conversion flag */
3162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
3163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
ARM GAS  /tmp/cc0XO8k8.s 			page 57


3166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* ========== Check End of Conversion flag for injected group ========== */
3167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(__HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_JEOC))
3168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOC))
3170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update state machine on conversion status if not in error state */
3172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
3173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC state */
3175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
3176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Determine whether any further conversion upcoming on group injected  */
3179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* by external trigger, scan sequence on going or by automatic injected */
3180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* conversion from group regular (same conditions as group regular      */
3181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* interruption disabling above).                                       */
3182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Note: On STM32F37x devices, in case of sequencer enabled             */
3183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       (several ranks selected), end of conversion flag is raised     */
3184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       at the end of the sequence.                                    */
3185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if(ADC_IS_SOFTWARE_START_INJECTED(hadc)                     || 
3186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&     
3187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          (ADC_IS_SOFTWARE_START_REGULAR(hadc)       &&
3188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (hadc->Init.ContinuousConvMode == DISABLE)  )         )   )
3189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Disable ADC end of single conversion interrupt  */
3191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
3192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
3193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC state */
3194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);   
3195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
3197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         { 
3198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
3199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
3200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Conversion complete callback */ 
3203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       HAL_ADCEx_InjectedConvCpltCallback(hadc);
3204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear injected group conversion flag */
3206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JSTRT | ADC_FLAG_JEOC));
3207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****    
3210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* ========== Check Analog watchdog flags ========== */
3211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(__HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_AWD))
3212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_AWD))
3214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state */
3216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
3217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Level out of window callback */ 
3219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       HAL_ADC_LevelOutOfWindowCallback(hadc);
3220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear the ADC analog watchdog flag */
3222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
ARM GAS  /tmp/cc0XO8k8.s 			page 58


3223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
3227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
3228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
3231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
3232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
3233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
3234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
3235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Perform an ADC automatic self-calibration
3236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Calibration prerequisite: ADC must be disabled (execute this
3237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function before HAL_ADC_Start() or after HAL_ADC_Stop() ).
3238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
3239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  SingleDiff Selection of single-ended or differential input
3240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
3241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_SINGLE_ENDED: Channel in mode input single ended
3242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_DIFFERENTIAL_ENDED: Channel in mode input differential ended
3243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
3244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
3245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_Calibration_Start(ADC_HandleTypeDef* hadc, uint32_t SingleDiff)
3246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
3247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
3248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart;
3249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
3251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(SingleDiff));
3253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
3255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
3256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****    
3257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Calibration prerequisite: ADC must be disabled. */
3258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****    
3259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable the ADC (if not already disabled) */
3260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_Disable(hadc);
3261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check if ADC is effectively disabled */
3263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
3264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Change ADC state */
3266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     hadc->State = HAL_ADC_STATE_READY;
3267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Select calibration mode single ended or differential ended */
3269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     hadc->Instance->CR &= (~ADC_CR_ADCALDIF);
3270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (SingleDiff == ADC_DIFFERENTIAL_ENDED)
3271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       hadc->Instance->CR |= ADC_CR_ADCALDIF;
3273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Start ADC calibration */
3276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     hadc->Instance->CR |= ADC_CR_ADCAL;
3277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();  
3279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
ARM GAS  /tmp/cc0XO8k8.s 			page 59


3280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Wait for calibration completion */
3281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     while(HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_ADCAL))
3282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((HAL_GetTick() - tickstart) > ADC_CALIBRATION_TIMEOUT)
3284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
3286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
3287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_BUSY_INTERNAL,
3288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_ERROR_INTERNAL);
3289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
3290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Process unlocked */
3291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
3292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
3293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_ERROR;
3294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
3298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
3299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
3300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
3301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
3304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
3305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
3307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
3308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
3309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
3310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
3311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
3312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
3313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
3315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
3316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Perform an ADC automatic self-calibration
3317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Calibration prerequisite: ADC must be disabled (execute this
3318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function before HAL_ADC_Start() or after HAL_ADC_Stop() ).
3319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         During calibration process, ADC is enabled. ADC is let enabled at
3320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         the completion of this function.
3321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
3322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
3323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
3324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_Calibration_Start(ADC_HandleTypeDef* hadc)
3325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
3326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
3327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart;
3328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0U;
3329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
3331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
3334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
3335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* 1. Calibration prerequisite:                                             */
ARM GAS  /tmp/cc0XO8k8.s 			page 60


3337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    - ADC must be disabled for at least two ADC clock cycles in disable   */
3338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*      mode before ADC enable                                              */
3339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential conversion on going, on regular and injected groups       */
3340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral */
3341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
3342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check if ADC is effectively disabled */
3344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
3345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
3347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
3348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
3349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
3350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Wait two ADC clock cycles */
3352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     while(wait_loop_index < ADC_CYCLE_WORST_CASE_CPU_CYCLES *2U)
3353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       wait_loop_index++;
3355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 2. Enable the ADC peripheral */
3358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_Enable(hadc);
3359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 3. Resets ADC calibration registers */  
3362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->Instance->CR2, ADC_CR2_RSTCAL);
3363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();  
3365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Wait for calibration reset completion */
3367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     while(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_RSTCAL))
3368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((HAL_GetTick() - tickstart) > ADC_CALIBRATION_TIMEOUT)
3370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
3372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
3373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_BUSY_INTERNAL,
3374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_ERROR_INTERNAL);
3375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
3376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Process unlocked */
3377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
3378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
3379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_ERROR;
3380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 4. Start ADC calibration */
3385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->Instance->CR2, ADC_CR2_CAL);
3386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();  
3388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Wait for calibration completion */
3390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     while(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_CAL))
3391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((HAL_GetTick() - tickstart) > ADC_CALIBRATION_TIMEOUT)
3393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
ARM GAS  /tmp/cc0XO8k8.s 			page 61


3394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
3395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
3396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_BUSY_INTERNAL,
3397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_ERROR_INTERNAL);
3398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
3399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Process unlocked */
3400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
3401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
3402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_ERROR;
3403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
3407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
3408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
3409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
3410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
3413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
3414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
3416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
3417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
3418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
3420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
3422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
3423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
3424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
3425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
3426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Get the calibration factor from automatic conversion result
3427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
3428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  SingleDiff Selection of single-ended or differential input
3429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
3430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_SINGLE_ENDED: Channel in mode input single ended
3431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_DIFFERENTIAL_ENDED: Channel in mode input differential ended
3432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval Converted value
3433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
3434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_Calibration_GetValue(ADC_HandleTypeDef* hadc, uint32_t SingleDiff)
3435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
3436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
3437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(SingleDiff)); 
3439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return the selected ADC calibration value */ 
3441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (SingleDiff == ADC_DIFFERENTIAL_ENDED)
3442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     return ADC_CALFACT_DIFF_GET(hadc->Instance->CALFACT);
3444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
3446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     return ((hadc->Instance->CALFACT) & ADC_CALFACT_CALFACT_S);
3448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
3450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
ARM GAS  /tmp/cc0XO8k8.s 			page 62


3451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
3452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
3453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
3454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
3456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
3457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
3458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
3459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
3460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Set the calibration factor to overwrite automatic conversion result. ADC must be enable
3461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
3462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  SingleDiff Selection of single-ended or differential input
3463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
3464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_SINGLE_ENDED: Channel in mode input single ended
3465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_DIFFERENTIAL_ENDED: Channel in mode input differential ended
3466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  CalibrationFactor Calibration factor (coded on 7 bits maximum)
3467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL state
3468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
3469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_Calibration_SetValue(ADC_HandleTypeDef* hadc, uint32_t SingleDiff, uint
3470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
3471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
3472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
3474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(SingleDiff)); 
3476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_CALFACT(CalibrationFactor)); 
3477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
3479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
3480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Verification of hardware constraints before modifying the calibration    */
3482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* factors register: ADC must be enabled, no conversion on going.           */
3483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if ( (ADC_IS_ENABLE(hadc) != RESET)                              &&
3484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET)   )
3485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set the selected ADC calibration value */ 
3487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (SingleDiff == ADC_DIFFERENTIAL_ENDED)
3488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CALFACT                ,
3490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CALFACT_CALFACT_D                  ,
3491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CALFACT_DIFF_SET(CalibrationFactor) );
3492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
3494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CALFACT,
3496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CALFACT_CALFACT_S  ,
3497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  CalibrationFactor       );
3498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
3501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
3503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
3504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC error code to ADC IP internal error */
3506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
ARM GAS  /tmp/cc0XO8k8.s 			page 63


3508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
3510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
3511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
3513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
3514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
3515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
3516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
3517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
3518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
3519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
3521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
3522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
3523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
3524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
3525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of injected group.
3526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions enabled in this function: None.
3527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (for devices with several ADCs): This 
3528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function must be called for ADC slave first, then ADC master. 
3529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For ADC slave, ADC is enabled only (conversion is not started).  
3530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For ADC master, ADC is enabled and multimode conversion is started.
3531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
3532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
3533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
3534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart(ADC_HandleTypeDef* hadc)
3535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
3536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
3537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
3539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
3542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_INJECTED(hadc) == RESET)
3543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Process locked */
3545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
3546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable the ADC peripheral */
3548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
3549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start conversion if ADC is effectively enabled */
3551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
3552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state                                                        */
3554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* - Clear state bitfield related to injected group conversion results  */
3555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* - Set state bitfield related to injected operation                   */
3556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
3557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
3558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_INJ_BUSY);
3559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Case of independent mode or multimode(for devices with several ADCs):*/
3561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set multimode state.                                                 */
3562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
3563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
ARM GAS  /tmp/cc0XO8k8.s 			page 64


3565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
3567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
3569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Check if a regular conversion is ongoing */
3572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Note: On this device, there is no ADC error code fields related to   */
3573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       conversions on group injected only. In case of conversion on   */
3574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       going on group regular, no error code is reset.                */
3575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
3576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Reset ADC all error code fields */
3578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ADC_CLEAR_ERRORCODE(hadc);
3579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
3582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Unlock before starting ADC conversions: in case of potential         */
3583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
3584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
3585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear injected group conversion flag */
3587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC           */
3588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* operations)                                                          */
3589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JEOC | ADC_FLAG_JEOS));
3590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable conversion of injected group, if automatic injected           */
3592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* conversion is disabled.                                              */
3593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.  */
3594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next */
3595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* trigger event.                                                       */
3596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Case of multimode enabled (for devices with several ADCs):           */
3597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - if ADC is slave, ADC is enabled only (conversion is not started). */
3598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - if ADC is master, ADC is enabled and conversion is started.       */
3599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (HAL_IS_BIT_CLR(hadc->Instance->CFGR, ADC_CFGR_JAUTO) && 
3600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_NONMULTIMODE_INJ_OR_MULTIMODEMASTER(hadc)          )
3601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR, ADC_CR_JADSTART);
3603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
3606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
3608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
3609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
3612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_BUSY;
3614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
3617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
3618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
3619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
3620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
3621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
ARM GAS  /tmp/cc0XO8k8.s 			page 65


3622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
3623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
3625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
3626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of injected group.
3627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions enabled in this function: None.
3628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
3629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
3630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
3631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart(ADC_HandleTypeDef* hadc)
3632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
3633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
3634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
3636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
3639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
3640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Enable the ADC peripheral */
3642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_Enable(hadc);
3643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Start conversion if ADC is effectively enabled */
3645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
3646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state                                                          */
3648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Clear state bitfield related to injected group conversion results    */
3649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Set state bitfield related to injected operation                     */
3650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
3651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
3652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_INJ_BUSY);
3653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if a regular conversion is ongoing */
3655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: On this device, there is no ADC error code fields related to     */
3656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       conversions on group injected only. In case of conversion on     */
3657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       going on group regular, no error code is reset.                  */
3658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
3659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Reset ADC all error code fields */
3661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
3662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Process unlocked */
3665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Unlock before starting ADC conversions: in case of potential           */
3666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
3667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
3668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear injected group conversion flag */
3670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
3671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC);
3672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable conversion of injected group.                                   */
3674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If software start has been selected, conversion starts immediately.    */
3675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If external trigger has been selected, conversion will start at next   */
3676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* trigger event.                                                         */
3677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If external trigger has been selected, conversion will start at next   */
3678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* trigger event.                                                         */
ARM GAS  /tmp/cc0XO8k8.s 			page 66


3679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If automatic injected conversion is enabled, conversion will start     */
3680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* after next regular group conversion.                                   */
3681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (ADC_IS_SOFTWARE_START_INJECTED(hadc)               && 
3682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO)   )
3683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start ADC conversion on injected group with SW start */
3685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, (ADC_CR2_JSWSTART | ADC_CR2_JEXTTRIG));
3686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
3688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start ADC conversion on injected group with external trigger */
3690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, ADC_CR2_JEXTTRIG);
3691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
3695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
3696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
3697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
3698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
3700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
3701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
3702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
3703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
3704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop ADC group injected conversion (potential conversion on going
3705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         on ADC group regular is not impacted), disable ADC peripheral
3706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         if no conversion is on going on group regular.
3707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   To stop ADC conversion of both groups regular and injected and to
3708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         to disable ADC peripheral, instead of using 2 functions
3709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         @ref HAL_ADCEx_RegularStop() and @ref HAL_ADCEx_InjectedStop(),
3710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         use function @ref HAL_ADC_Stop().
3711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   If injected group mode auto-injection is enabled,
3712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function HAL_ADC_Stop must be used.
3713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (for devices with several ADCs): This 
3714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function must be called for ADC master first, then ADC slave.
3715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For ADC master, conversion is stopped and ADC is disabled. 
3716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For ADC slave, ADC is disabled only (conversion stop of ADC master
3717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         has already stopped conversion of ADC slave).
3718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   In case of auto-injection mode, HAL_ADC_Stop must be used.
3719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
3720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
3721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
3722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop(ADC_HandleTypeDef* hadc)
3723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
3724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
3725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
3727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
3730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
3731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential ADC conversion on going and disable ADC peripheral        */
3733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conditioned to:                                                          */
3734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - In case of auto-injection mode, HAL_ADC_Stop must be used.             */
3735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - For ADC injected group conversion stop:                                */
ARM GAS  /tmp/cc0XO8k8.s 			page 67


3736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   On this STM32 family, conversion on the other group                    */
3737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   (group regular) can continue (groups regular and injected              */
3738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   conversion stop commands are independent)                              */
3739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - For ADC disable:                                                       */
3740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   No conversion on the other group (group regular) must be intended to   */
3741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   continue (groups regular and injected are both impacted by             */
3742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   ADC disable)                                                           */
3743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CFGR, ADC_CFGR_JAUTO))
3744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 1. Stop potential conversion on going on injected group only. */
3746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_ConversionStop(hadc, ADC_INJECTED_GROUP);
3747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC peripheral if conversion on ADC group injected is          */
3749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* effectively stopped and if no conversion on the other group            */
3750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (ADC group regular) is intended to continue.                           */
3751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
3752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {      
3753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET) &&
3754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          ((hadc->State & HAL_ADC_STATE_REG_BUSY) == RESET)    )
3755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* 2. Disable the ADC peripheral */
3757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_hal_status = ADC_Disable(hadc);
3758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
3759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Check if ADC is effectively disabled */
3760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (tmp_hal_status == HAL_OK)
3761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
3762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Set ADC state */
3763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_STATE_CLR_SET(hadc->State,
3764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                             HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
3765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                             HAL_ADC_STATE_READY);
3766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
3767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Conversion on ADC group injected group is stopped, but ADC is not    */
3769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* disabled since conversion on ADC group regular is still on going.    */
3770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
3771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC state */
3773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
3774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
3778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
3780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
3781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
3783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
3786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
3787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
3789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
3790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
3791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
3792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
ARM GAS  /tmp/cc0XO8k8.s 			page 68


3793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
3794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
3795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
3797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
3798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop conversion of injected channels. Disable ADC peripheral if
3799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         no regular conversion is on going.
3800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   If ADC must be disabled and if conversion is on going on 
3801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         regular group, function HAL_ADC_Stop must be used to stop both
3802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         injected and regular groups, and disable the ADC.
3803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   In case of auto-injection mode, HAL_ADC_Stop must be used.
3804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
3805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
3806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
3807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop(ADC_HandleTypeDef* hadc)
3808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
3809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
3810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
3812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
3815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
3816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential conversion and disable ADC peripheral                     */
3818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Conditioned to:                                                          */
3819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - No conversion on the other group (regular group) is intended to        */
3820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   continue (injected and regular groups stop conversion and ADC disable  */
3821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   are common)                                                            */
3822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - In case of auto-injection mode, HAL_ADC_Stop must be used.             */
3823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(((hadc->State & HAL_ADC_STATE_REG_BUSY) == RESET)  &&
3824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO)   )
3825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Stop potential conversion on going, on regular and injected groups */
3827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC peripheral */
3828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_ConversionStop_Disable(hadc);
3829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
3831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
3832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state */
3834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
3835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
3836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
3837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
3840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
3842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
3843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
3845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
3848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
3849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
ARM GAS  /tmp/cc0XO8k8.s 			page 69


3850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
3851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
3852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
3853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
3854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
3856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
3857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
3858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
3859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
3860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Wait for injected group conversion to be completed.
3861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
3862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  Timeout Timeout value in millisecond.
3863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
3864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
3865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedPollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
3866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
3867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart;
3868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_Flag_EOC;
3869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_cfgr = 0x00000000U;
3870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
3872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* If end of conversion selected to end of sequence */
3875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
3876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_Flag_EOC = ADC_FLAG_JEOS;
3878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* If end of conversion selected to end of each conversion */
3880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else /* ADC_EOC_SINGLE_CONV */
3881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_Flag_EOC = (ADC_FLAG_JEOC | ADC_FLAG_JEOS);
3883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Get relevant register CFGR in ADC instance of ADC master or slave      */
3886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* in function of multimode state (for devices with multimode             */
3887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* available).                                                            */
3888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
3889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR); 
3891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
3893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_cfgr = READ_REG(ADC_MASTER_INSTANCE(hadc)->CFGR);
3895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Get tick count */
3898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tickstart = HAL_GetTick();  
3899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      
3900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Wait until End of Conversion flag is raised */
3901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   while(HAL_IS_BIT_CLR(hadc->Instance->ISR, tmp_Flag_EOC))
3902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if timeout is disabled (set to infinite wait) */
3904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
3905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
ARM GAS  /tmp/cc0XO8k8.s 			page 70


3907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to timeout */
3909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
3910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
3911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Process unlocked */
3912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
3913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
3914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_TIMEOUT;
3915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Update ADC state machine */
3920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
3921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Determine whether any further conversion upcoming on group injected      */
3923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* by external trigger or by automatic injected conversion                  */
3924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* from group regular.                                                      */
3925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(ADC_IS_SOFTWARE_START_INJECTED(hadc)                   ||
3926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((READ_BIT (tmp_cfgr, ADC_CFGR_JAUTO) == RESET)    &&
3927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (ADC_IS_SOFTWARE_START_REGULAR(hadc)          &&
3928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (READ_BIT (tmp_cfgr, ADC_CFGR_CONT) == RESET)   )   )   )
3929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
3931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);   
3932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
3934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_READY);
3936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Clear end of conversion flag of injected group if low power feature      */
3940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* "Auto Wait" is disabled, to not interfere with this feature until data   */
3941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* register is read using function HAL_ADC_GetValue().                      */
3942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (READ_BIT (tmp_cfgr, ADC_CFGR_AUTDLY) == RESET)
3943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear injected group conversion flag */
3945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (JEOC or JEOS depending on HAL ADC initialization parameter) */
3946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, tmp_Flag_EOC);
3947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return ADC state */
3950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return HAL_OK;
3951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
3952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
3953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
3954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
3955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
3956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
3958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
3959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Wait for injected group conversion to be completed.
3960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
3961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  Timeout Timeout value in millisecond.
3962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
3963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
ARM GAS  /tmp/cc0XO8k8.s 			page 71


3964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedPollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
3965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
3966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart = 0U;
3967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Variables for polling in case of scan mode enabled */
3969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t Conversion_Timeout_CPU_cycles_max =0U;
3970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t Conversion_Timeout_CPU_cycles =0U;
3971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****  
3972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
3973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Get tick count */
3976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tickstart = HAL_GetTick();  
3977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      
3978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Polling for end of conversion: differentiation if single/sequence        */
3979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conversion.                                                              */
3980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* For injected group, flag JEOC is set only at the end of the sequence,    */
3981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* not for each conversion within the sequence.                             */
3982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - If single conversion for injected group (scan mode disabled or        */
3983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    InjectedNbrOfConversion ==1U), flag JEOC is used to determine the      */
3984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    conversion completion.                                                */
3985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - If sequence conversion for injected group (scan mode enabled and      */
3986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    InjectedNbrOfConversion >=2U), flag JEOC is set only at the end of the */
3987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    sequence.                                                             */
3988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    To poll for each conversion, the maximum conversion time is computed  */
3989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    from ADC conversion time (selected sampling time + conversion time of */
3990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    12.5 ADC clock cycles) and APB2/ADC clock prescalers (depending on    */
3991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    settings, conversion time range can be from 28 to 32256 CPU cycles).  */
3992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    As flag JEOC is not set after each conversion, no timeout status can  */
3993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    be set.                                                               */
3994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if ((hadc->Instance->JSQR & ADC_JSQR_JL) == RESET)
3995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Wait until End of Conversion flag is raised */
3997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     while(HAL_IS_BIT_CLR(hadc->Instance->SR, ADC_FLAG_JEOC))
3998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Check if timeout is disabled (set to infinite wait) */
4000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if(Timeout != HAL_MAX_DELAY)
4001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
4002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
4003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
4004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Update ADC state machine to timeout */
4005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
4006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
4007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Process unlocked */
4008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
4009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
4010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           return HAL_TIMEOUT;
4011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
4012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
4013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
4016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Replace polling by wait for maximum conversion time */
4018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Calculation of CPU cycles corresponding to ADC conversion cycles.      */
4019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Retrieve ADC clock prescaler and ADC maximum conversion cycles on all  */
4020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* channels.                                                              */
ARM GAS  /tmp/cc0XO8k8.s 			page 72


4021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     Conversion_Timeout_CPU_cycles_max = ADC_CLOCK_PRESCALER_RANGE();
4022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     Conversion_Timeout_CPU_cycles_max *= ADC_CONVCYCLES_MAX_RANGE(hadc);
4023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Poll with maximum conversion time */
4025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     while(Conversion_Timeout_CPU_cycles < Conversion_Timeout_CPU_cycles_max)
4026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Check if timeout is disabled (set to infinite wait) */
4028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if(Timeout != HAL_MAX_DELAY)
4029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
4030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
4031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
4032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Update ADC state machine to timeout */
4033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
4034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
4035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Process unlocked */
4036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
4037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
4038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           return HAL_TIMEOUT;
4039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
4040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
4041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       Conversion_Timeout_CPU_cycles ++;
4042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Clear injected group conversion flag (and regular conversion flag raised simultaneously) */
4047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JSTRT | ADC_FLAG_JEOC | ADC_FLAG_EOC);
4048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Update ADC state machine */
4050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
4051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Determine whether any further conversion upcoming on group injected      */
4053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* by external trigger or by automatic injected conversion                  */
4054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* from group regular.                                                      */
4055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(ADC_IS_SOFTWARE_START_INJECTED(hadc)                     || 
4056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&     
4057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      (ADC_IS_SOFTWARE_START_REGULAR(hadc)        &&
4058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (hadc->Init.ContinuousConvMode == DISABLE)   )        )   )
4059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
4061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);   
4062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
4064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_READY);
4066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return ADC state */
4070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return HAL_OK;
4071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
4072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
4073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
4075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
4076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
4077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
ARM GAS  /tmp/cc0XO8k8.s 			page 73


4078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
4079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of injected group with interruption.
4080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions enabled in this function:
4081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - JEOC (end of conversion of injected group) or JEOS (end of 
4082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            sequence of injected group) depending on ADC initialization 
4083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            parameter "EOCSelection"
4084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Each of these interruptions has its dedicated callback function.
4085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (for devices with several ADCs): This 
4086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function must be called for ADC slave first, then ADC master. 
4087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For ADC slave, ADC is enabled only (conversion is not started).  
4088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For ADC master, ADC is enabled and multimode conversion is started.
4089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
4090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status.
4091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
4092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart_IT(ADC_HandleTypeDef* hadc)
4093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
4094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
4095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
4097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
4098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
4100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_INJECTED(hadc) == RESET)
4101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Process locked */
4103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
4104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable the ADC peripheral */
4106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
4107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Start conversion if ADC is effectively enabled */
4109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start conversion if ADC is effectively enabled */
4110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
4111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state                                                        */
4113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* - Clear state bitfield related to injected group conversion results  */
4114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* - Set state bitfield related to injected operation                   */
4115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
4116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
4117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_INJ_BUSY);
4118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Case of independent mode or multimode(for devices with several ADCs):*/
4120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set multimode state.                                                 */
4121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
4122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
4123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
4124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
4125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
4126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
4127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
4128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
4129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Check if a regular conversion is ongoing */
4131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Note: On this device, there is no ADC error code fields related to   */
4132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       conversions on group injected only. In case of conversion on   */
4133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       going on group regular, no error code is reset.                */
4134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
ARM GAS  /tmp/cc0XO8k8.s 			page 74


4135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
4136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Reset ADC all error code fields */
4137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ADC_CLEAR_ERRORCODE(hadc);
4138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
4139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
4141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Unlock before starting ADC conversions: in case of potential         */
4142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
4143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
4144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear injected group conversion flag */
4146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC           */
4147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* operations)                                                          */
4148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JEOC | ADC_FLAG_JEOS));
4149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable ADC Injected context queue overflow interrupt if this feature */
4151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* is enabled.                                                          */
4152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if ((hadc->Instance->CFGR & ADC_CFGR_JQM) != RESET)
4153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
4154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_FLAG_JQOVF);
4155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
4156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable ADC end of conversion interrupt */
4158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       switch(hadc->Init.EOCSelection)
4159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
4160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         case ADC_EOC_SEQ_CONV: 
4161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
4162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
4163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           break;
4164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* case ADC_EOC_SINGLE_CONV */
4165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         default:
4166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC | ADC_IT_JEOS);
4167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           break;
4168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
4169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable conversion of injected group, if automatic injected           */
4171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* conversion is disabled.                                              */
4172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.  */
4173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next */
4174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* trigger event.                                                       */
4175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Case of multimode enabled (for devices with several ADCs):           */
4176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - if ADC is slave, ADC is enabled only (conversion is not started). */
4177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - if ADC is master, ADC is enabled and conversion is started.       */
4178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (HAL_IS_BIT_CLR(hadc->Instance->CFGR, ADC_CFGR_JAUTO) && 
4179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_NONMULTIMODE_INJ_OR_MULTIMODEMASTER(hadc)          )
4180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
4181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR, ADC_CR_JADSTART);
4182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
4183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
4185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
4187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
4188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
4191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
ARM GAS  /tmp/cc0XO8k8.s 			page 75


4192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_BUSY;
4193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
4196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
4197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
4198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
4199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
4200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
4201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
4202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
4204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
4205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of injected group with interruption.
4206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions enabled in this function:
4207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - JEOC (end of conversion of injected group)
4208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Each of these interruptions has its dedicated callback function.
4209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
4210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status.
4211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
4212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart_IT(ADC_HandleTypeDef* hadc)
4213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
4214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
4215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
4217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
4218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
4220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
4221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Enable the ADC peripheral */
4223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_Enable(hadc);
4224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Start conversion if ADC is effectively enabled */
4226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
4227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state                                                          */
4229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Clear state bitfield related to injected group conversion results    */
4230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Set state bitfield related to injected operation                     */
4231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
4232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
4233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_INJ_BUSY);
4234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if a regular conversion is ongoing */
4236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: On this device, there is no ADC error code fields related to     */
4237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       conversions on group injected only. In case of conversion on     */
4238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       going on group regular, no error code is reset.                  */
4239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
4240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Reset ADC all error code fields */
4242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
4243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Process unlocked */
4246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Unlock before starting ADC conversions: in case of potential           */
4247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
4248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
ARM GAS  /tmp/cc0XO8k8.s 			page 76


4249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC error code to none */
4251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_CLEAR_ERRORCODE(hadc);
4252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear injected group conversion flag */
4254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
4255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC);
4256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable end of conversion interrupt for injected channels */
4258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
4259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable conversion of injected group.                                   */
4261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If software start has been selected, conversion starts immediately.    */
4262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If external trigger has been selected, conversion will start at next   */
4263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* trigger event.                                                         */
4264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If external trigger has been selected, conversion will start at next   */
4265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* trigger event.                                                         */
4266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If automatic injected conversion is enabled, conversion will start     */
4267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* after next regular group conversion.                                   */
4268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (ADC_IS_SOFTWARE_START_INJECTED(hadc)              && 
4269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO)  )
4270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start ADC conversion on injected group with SW start */
4272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, (ADC_CR2_JSWSTART | ADC_CR2_JEXTTRIG));
4273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
4275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start ADC conversion on injected group with external trigger */
4277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, ADC_CR2_JEXTTRIG);
4278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
4282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
4283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
4284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
4285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
4287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
4288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
4289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
4290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
4291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop ADC group injected conversion (potential conversion on going
4292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         on ADC group regular is not impacted), disable ADC peripheral
4293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         if no conversion is on going on group regular.
4294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions disabled in this function:
4295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - JEOC (end of conversion of injected group) and JEOS (end of 
4296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            sequence of injected group)
4297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   To stop ADC conversion of both groups regular and injected and to
4298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         to disable ADC peripheral, instead of using 2 functions
4299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         @ref HAL_ADCEx_RegularStop() and @ref HAL_ADCEx_InjectedStop(),
4300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         use function @ref HAL_ADC_Stop().
4301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   If injected group mode auto-injection is enabled,
4302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function HAL_ADC_Stop must be used.
4303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (for devices with several ADCs): This 
4304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function must be called for ADC master first, then ADC slave.
4305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For ADC master, conversion is stopped and ADC is disabled. 
ARM GAS  /tmp/cc0XO8k8.s 			page 77


4306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For ADC slave, ADC is disabled only (conversion stop of ADC master
4307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         has already stopped conversion of ADC slave).
4308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   In case of auto-injection mode, HAL_ADC_Stop must be used.
4309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
4310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
4311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
4312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop_IT(ADC_HandleTypeDef* hadc)
4313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** { 
4314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
4315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
4317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
4318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
4320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
4321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential ADC conversion on going and disable ADC peripheral        */
4323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conditioned to:                                                          */
4324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - In case of auto-injection mode, HAL_ADC_Stop must be used.             */
4325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - For ADC injected group conversion stop:                                */
4326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   On this STM32 family, conversion on the other group                    */
4327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   (group regular) can continue (groups regular and injected              */
4328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   conversion stop commands are independent)                              */
4329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - For ADC disable:                                                       */
4330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   No conversion on the other group (group regular) must be intended to   */
4331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   continue (groups regular and injected are both impacted by             */
4332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   ADC disable)                                                           */
4333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CFGR, ADC_CFGR_JAUTO))
4334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 1. Stop potential conversion on going on injected group only. */
4336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_ConversionStop(hadc, ADC_INJECTED_GROUP);
4337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC peripheral if conversion on ADC group injected is          */
4339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* effectively stopped and if no conversion on the other group            */
4340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (ADC group regular) is intended to continue.                           */
4341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
4342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Disable ADC end of conversion interrupt for injected channels */
4344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_JEOC | ADC_IT_JEOS | ADC_IT_JQOVF));
4345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET) &&
4347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          ((hadc->State & HAL_ADC_STATE_REG_BUSY) == RESET)    )
4348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
4349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* 2. Disable the ADC peripheral */
4350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_hal_status = ADC_Disable(hadc);
4351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
4352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Check if ADC is effectively disabled */
4353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (tmp_hal_status == HAL_OK)
4354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
4355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Set ADC state */
4356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_STATE_CLR_SET(hadc->State,
4357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                             HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
4358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                             HAL_ADC_STATE_READY);
4359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
4360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
4361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Conversion on ADC group injected group is stopped, but ADC is not    */
4362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* disabled since conversion on ADC group regular is still on going.    */
ARM GAS  /tmp/cc0XO8k8.s 			page 78


4363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
4364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
4365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC state */
4366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
4367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
4368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
4371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
4373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
4374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
4376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
4379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
4380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
4382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
4383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
4384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
4385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
4386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
4387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
4388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
4390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
4391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop conversion of injected channels, disable interruption of 
4392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         end-of-conversion. Disable ADC peripheral if no regular conversion
4393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         is on going.
4394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   If ADC must be disabled and if conversion is on going on 
4395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         regular group, function HAL_ADC_Stop must be used to stop both
4396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         injected and regular groups, and disable the ADC.
4397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
4398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
4399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
4400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop_IT(ADC_HandleTypeDef* hadc)
4401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
4402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
4403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
4405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
4406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
4408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
4409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential conversion and disable ADC peripheral                     */
4411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Conditioned to:                                                          */
4412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - No conversion on the other group (regular group) is intended to        */
4413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   continue (injected and regular groups stop conversion and ADC disable  */
4414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   are common)                                                            */
4415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - In case of auto-injection mode, HAL_ADC_Stop must be used.             */ 
4416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(((hadc->State & HAL_ADC_STATE_REG_BUSY) == RESET)  &&
4417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO)   )
4418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Stop potential conversion on going, on regular and injected groups */
ARM GAS  /tmp/cc0XO8k8.s 			page 79


4420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC peripheral */
4421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_ConversionStop_Disable(hadc);
4422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
4424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
4425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Disable ADC end of conversion interrupt for injected channels */
4427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
4428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state */
4430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
4431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
4432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
4433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
4436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
4438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
4439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
4441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
4444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
4445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
4447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
4448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
4449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
4450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
4452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
4453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx)
4454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
4455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  With ADC configured in multimode, for ADC master:
4456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Enables ADC, starts conversion of regular group and transfers result
4457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         through DMA.
4458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Multimode must have been previously configured using 
4459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         HAL_ADCEx_MultiModeConfigChannel() function.
4460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions enabled in this function:
4461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA transfer complete
4462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA half transfer
4463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - overrun
4464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Each of these interruptions has its dedicated callback function.
4465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   ADC slave must be preliminarily enabled using single-mode  
4466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         HAL_ADC_Start() function.
4467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle of ADC master (handle of ADC slave must not be used)
4468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  pData The destination Buffer address.
4469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  Length The length of data to be transferred from ADC peripheral to memory.
4470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
4471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
4472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeStart_DMA(ADC_HandleTypeDef* hadc, uint32_t* pData, uint32_t L
4473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
4474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
4475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave;
4476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
ARM GAS  /tmp/cc0XO8k8.s 			page 80


4477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
4479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
4480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
4481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
4482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
4483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
4485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
4486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
4488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* (check on ADC master only) */
4489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
4490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set a temporary handle of the ADC slave associated to the ADC master   */
4492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (Depending on STM32F3 product, there may be up to 2 ADC slaves)        */
4493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
4494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmphadcSlave.Instance == NULL)
4496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
4498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
4499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
4501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
4502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       return HAL_ERROR;
4504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable the ADC peripherals: master and slave (in case if not already   */
4508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* enabled previously)                                                    */
4509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
4510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
4511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Enable(&tmphadcSlave);
4513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Start conversion all ADCs of multimode are effectively enabled */
4516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
4517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state (ADC master)                                           */
4519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* - Clear state bitfield related to regular group conversion results   */
4520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* - Set state bitfield related to regular operation                    */
4521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
4522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
4523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY);
4524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
4525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If conversions on group regular are also triggering group injected,  */
4526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* update ADC state.                                                    */
4527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != RESET)
4528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
4529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
4530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
4531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
4533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Unlock before starting ADC conversions: in case of potential         */
ARM GAS  /tmp/cc0XO8k8.s 			page 81


4534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
4535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
4536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC error code to none */
4538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
4539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set the DMA transfer complete callback */
4542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
4543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          
4544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set the DMA half transfer complete callback */
4545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
4546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set the DMA error callback */
4548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       hadc->DMA_Handle->XferErrorCallback = ADC_DMAError ;
4549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Pointer to the common control register to which is belonging hadc    */
4551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* (Depending on STM32F3 product, there may be up to 4 ADC and 2 common */
4552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* control registers)                                                   */
4553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmpADC_Common = ADC_COMMON_REGISTER(hadc);
4554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC   */
4557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* start (in case of SW start):                                         */
4558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear regular group conversion flag and overrun flag */
4560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
4561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
4562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable ADC overrun interrupt */
4564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
4565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start the DMA channel */
4567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&tmpADC_Common->CDR, (uint32_t)pData, Length);
4568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
4569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable conversion of regular group.                                  */
4570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.  */
4571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next */
4572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* trigger event.                                                       */
4573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR, ADC_CR_ADSTART);
4574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
4577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
4579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
4580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
4583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_BUSY;
4585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
4588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
4589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
4590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
ARM GAS  /tmp/cc0XO8k8.s 			page 82


4591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
4592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  With ADC configured in multimode, for ADC master:
4593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Stop ADC group regular conversion (potential conversion on going
4594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         on ADC group injected is not impacted),
4595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         disable ADC DMA transfer, disable ADC peripheral
4596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         if no conversion is on going on group injected.
4597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions disabled in this function:
4598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA transfer complete
4599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA half transfer
4600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - overrun
4601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   In case of auto-injection mode, this function also stop conversion
4602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         on ADC group injected.
4603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Multimode is kept enabled after this function. To disable multimode
4604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (set with HAL_ADCEx_MultiModeConfigChannel() ), ADC must be 
4605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         reinitialized using HAL_ADC_Init() or HAL_ADC_ReInit().
4606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   In case of DMA configured in circular mode, function 
4607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         HAL_ADC_Stop_DMA must be called after this function with handle of
4608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         ADC slave, to properly disable the DMA channel of ADC slave.
4609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle of ADC master (handle of ADC slave must not be used)
4610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
4611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
4612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeStop_DMA(ADC_HandleTypeDef* hadc)
4613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
4614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
4615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart;
4616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave;
4617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
4619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
4620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
4622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
4623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* 1. Stop potential multimode conversion on going, on regular and          */
4625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    injected groups.                                                      */
4626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
4627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
4629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
4630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set a temporary handle of the ADC slave associated to the ADC master   */
4632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (Depending on STM32F3 product, there may be up to 2 ADC slaves)        */
4633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
4634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmphadcSlave.Instance == NULL)
4636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine (ADC master) to error */
4638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
4639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
4641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
4642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       return HAL_ERROR;
4644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Procedure to disable the ADC peripheral: wait for conversions          */
4647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* effectively stopped (ADC master and ADC slave), then disable ADC       */
ARM GAS  /tmp/cc0XO8k8.s 			page 83


4648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 1. Wait until ADSTP=0 for ADC master and ADC slave */
4650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();  
4651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     while(ADC_IS_CONVERSION_ONGOING_REGULAR(hadc)          || 
4653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_IS_CONVERSION_ONGOING_REGULAR(&tmphadcSlave)   )
4654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
4656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
4657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine (ADC master) to error */
4658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
4659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
4660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Process unlocked */
4661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
4662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
4663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_ERROR;
4664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
4665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
4668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
4669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: In case of ADC slave using its own DMA channel (multimode        */
4670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       parameter "DMAAccessMode" set to disabled):                      */
4671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       DMA channel of ADC slave should stopped after this function with */
4672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       function HAL_ADC_Stop_DMA.                                       */
4673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
4674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
4676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status != HAL_OK)
4677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
4679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
4680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
4683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
4684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripherals: master and slave */
4688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed,          */
4689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* to retain a potential failing status.                                  */
4690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
4691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Check if ADC are effectively disabled */
4693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if ((ADC_Disable(hadc) != HAL_ERROR)          &&
4694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_Disable(&tmphadcSlave) != HAL_ERROR)   )
4695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
4696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_hal_status = HAL_OK;
4697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
4698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Change ADC state (ADC master) */
4699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
4700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
4701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
4702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
4703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
ARM GAS  /tmp/cc0XO8k8.s 			page 84


4705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* In case of error, attempt to disable ADC instances anyway */
4707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_Disable(hadc);
4708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_Disable(&tmphadcSlave);
4709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine (ADC master) to error */
4711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
4712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
4717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
4718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
4720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
4721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
4722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
4724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Returns the last ADC Master&Slave regular conversions results data
4725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         in the selected multi mode.
4726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Reading register CDR does not clear flag ADC flag EOC
4727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (ADC group regular end of unitary conversion),
4728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         as it is the case for independent mode data register.
4729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle of ADC master (handle of ADC slave must not be used)
4730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval The converted data value.
4731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
4732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_MultiModeGetValue(ADC_HandleTypeDef* hadc)
4733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
4734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
4735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
4737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
4738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Pointer to the common control register to which is belonging hadc        */
4740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* (Depending on STM32F3 product, there may be up to 4 ADC and 2 common     */
4741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* control registers)                                                       */
4742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmpADC_Common = ADC_COMMON_REGISTER(hadc);
4743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return the multi mode conversion value */
4745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmpADC_Common->CDR;
4746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
4747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
4748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
4749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx    */
4750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
4752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
4753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
4754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
4755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
4756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Get ADC injected group conversion result.
4757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Reading register JDRx automatically clears ADC flag JEOC
4758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (ADC group injected end of unitary conversion).
4759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   This function does not clear ADC flag JEOS 
4760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (ADC group injected end of sequence conversion)
4761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Occurrence of flag JEOS rising:
ARM GAS  /tmp/cc0XO8k8.s 			page 85


4762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - If sequencer is composed of 1 rank, flag JEOS is equivalent
4763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            to flag JEOC.
4764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - If sequencer is composed of several ranks, during the scan
4765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            sequence flag JEOC only is raised, at the end of the scan sequence
4766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            both flags JEOC and EOS are raised.
4767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Flag JEOS must not be cleared by this function because
4768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         it would not be compliant with low power features
4769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (feature low power auto-wait, not available on all STM32 families).
4770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         To clear this flag, either use function: 
4771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
4772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         model polling: @ref HAL_ADCEx_InjectedPollForConversion() 
4773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_JEOS).
4774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
4775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  InjectedRank the converted ADC injected rank.
4776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
4777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_1: Injected Channel1 selected
4778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_2: Injected Channel2 selected
4779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_3: Injected Channel3 selected
4780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_4: Injected Channel4 selected
4781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval ADC group injected conversion data
4782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
4783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_InjectedGetValue(ADC_HandleTypeDef* hadc, uint32_t InjectedRank)
4784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
4785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_jdr = 0U;
4786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
4788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
4789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_INJECTED_RANK(InjectedRank));
4790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Note: ADC flag JEOC is not cleared here by software because              */
4792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*       automatically cleared by hardware when reading register JDRx.      */
4793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Get ADC converted value */ 
4795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   switch(InjectedRank)
4796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {  
4797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_4: 
4798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR4;
4799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
4800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_3: 
4801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR3;
4802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
4803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_2: 
4804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR2;
4805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
4806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_1:
4807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     default:
4808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR1;
4809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
4810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return ADC converted value */ 
4813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_jdr;
4814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
4815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
4816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
4817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
4818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
ARM GAS  /tmp/cc0XO8k8.s 			page 86


4819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
4821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
4822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Get ADC injected group conversion result.
4823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Reading register JDRx automatically clears ADC flag JEOC
4824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (ADC group injected end of unitary conversion).
4825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   This function does not clear ADC flag JEOS 
4826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (ADC group injected end of sequence conversion)
4827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Occurrence of flag JEOS rising:
4828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - If sequencer is composed of 1 rank, flag JEOS is equivalent
4829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            to flag JEOC.
4830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - If sequencer is composed of several ranks, during the scan
4831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            sequence flag JEOC only is raised, at the end of the scan sequence
4832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            both flags JEOC and EOS are raised.
4833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Flag JEOS must not be cleared by this function because
4834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         it would not be compliant with low power features
4835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (feature low power auto-wait, not available on all STM32 families).
4836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         To clear this flag, either use function: 
4837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
4838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         model polling: @ref HAL_ADCEx_InjectedPollForConversion() 
4839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_JEOS).
4840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
4841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  InjectedRank the converted ADC injected rank.
4842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
4843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_1: Injected Channel1 selected
4844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_2: Injected Channel2 selected
4845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_3: Injected Channel3 selected
4846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_4: Injected Channel4 selected
4847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval ADC group injected conversion data
4848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
4849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_InjectedGetValue(ADC_HandleTypeDef* hadc, uint32_t InjectedRank)
4850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
4851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_jdr = 0U;
4852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
4854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
4855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_INJECTED_RANK(InjectedRank));
4856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Get ADC converted value */ 
4858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   switch(InjectedRank)
4859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {  
4860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_4: 
4861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR4;
4862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
4863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_3: 
4864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR3;
4865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
4866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_2: 
4867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR2;
4868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
4869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_1:
4870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     default:
4871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR1;
4872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
4873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return ADC converted value */ 
ARM GAS  /tmp/cc0XO8k8.s 			page 87


4876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_jdr;
4877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
4878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
4879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
4881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
4882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
4883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
4884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
4885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop ADC group regular conversion (potential conversion on going
4886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         on ADC group injected is not impacted), disable ADC peripheral
4887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         if no conversion is on going on group injected.
4888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   To stop ADC conversion of both groups regular and injected and to
4889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         to disable ADC peripheral, instead of using 2 functions
4890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         @ref HAL_ADCEx_RegularStop() and @ref HAL_ADCEx_InjectedStop(),
4891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         use function @ref HAL_ADC_Stop().
4892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   In case of auto-injection mode, this function also stop conversion
4893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         on ADC group injected.
4894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
4895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status.
4896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
4897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularStop(ADC_HandleTypeDef* hadc)
4898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
4899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
4900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
4902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
4903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
4905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
4906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential ADC conversion on going and disable ADC peripheral        */
4908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conditioned to:                                                          */
4909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - For ADC regular group conversion stop:                                 */
4910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   On this STM32 family, conversion on the other group                    */
4911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   (group injected) can continue (groups regular and injected             */
4912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   conversion stop commands are independent)                              */
4913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - For ADC disable:                                                       */
4914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   No conversion on the other group (group injected) must be intended to  */
4915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   continue (groups regular and injected are both impacted by             */
4916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   ADC disable)                                                           */
4917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* 1. Stop potential conversion on going, on regular group only */
4919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
4920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversion on ADC group regular is             */
4922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* effectively stopped and if no conversion on the other group              */
4923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* (ADC group injected) is intended to continue.                            */
4924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if((ADC_IS_CONVERSION_ONGOING_INJECTED(hadc) == RESET) &&
4925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == RESET)     )
4926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripheral */
4928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Disable(hadc);
4929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
4931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
4932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
ARM GAS  /tmp/cc0XO8k8.s 			page 88


4933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state */
4934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
4935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
4936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
4937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Conversion on ADC group regular group is stopped, but ADC is not         */
4940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* disabled since conversion on ADC group injected is still on going.       */
4941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
4942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
4944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
4945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
4948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
4949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
4951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
4952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
4953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
4955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop ADC group regular conversion (potential conversion on going
4956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         on ADC group injected is not impacted), disable ADC peripheral
4957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         if no conversion is on going on group injected.
4958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions disabled in this function:
4959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - EOC (end of conversion of regular group) and EOS (end of 
4960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            sequence of regular group)
4961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - overrun
4962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   To stop ADC conversion of both groups regular and injected and to
4963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         to disable ADC peripheral, instead of using 2 functions
4964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         @ref HAL_ADCEx_RegularStop() and @ref HAL_ADCEx_InjectedStop(),
4965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         use function @ref HAL_ADC_Stop().
4966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   In case of auto-injection mode, this function also stop conversion
4967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         on ADC group injected.
4968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
4969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status.
4970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
4971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularStop_IT(ADC_HandleTypeDef* hadc)
4972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
4973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
4974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
4976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
4977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
4979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
4980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential ADC conversion on going and disable ADC peripheral        */
4982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conditioned to:                                                          */
4983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - For ADC regular group conversion stop:                                 */
4984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   On this STM32 family, conversion on the other group                    */
4985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   (group injected) can continue (groups regular and injected             */
4986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   conversion stop commands are independent)                              */
4987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - For ADC disable:                                                       */
4988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   No conversion on the other group (group injected) must be intended to  */
4989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   continue (groups regular and injected are both impacted by             */
ARM GAS  /tmp/cc0XO8k8.s 			page 89


4990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   ADC disable)                                                           */
4991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* 1. Stop potential conversion on going, on regular group only */
4993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
4994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversion on ADC group regular is             */
4996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* effectively stopped and if no conversion on the other group              */
4997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* (ADC group injected) is intended to continue.                            */
4998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if((ADC_IS_CONVERSION_ONGOING_INJECTED(hadc) == RESET) &&
4999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == RESET)     )
5000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC end of conversion interrupt for regular group */
5002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
5003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
5004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripheral */
5006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Disable(hadc);
5007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
5009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
5010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state */
5012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
5013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
5014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
5015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Conversion on ADC group regular group is stopped, but ADC is not         */
5018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* disabled since conversion on ADC group injected is still on going.       */
5019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
5020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
5022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
5023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
5026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
5027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
5029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
5030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
5031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
5033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop ADC group regular conversion (potential conversion on going
5034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         on ADC group injected is not impacted), 
5035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         disable ADC DMA transfer, disable ADC peripheral
5036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         if no conversion is on going on group injected.
5037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions disabled in this function:
5038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA transfer complete
5039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA half transfer
5040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - overrun
5041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   To stop ADC conversion of both groups regular and injected and to
5042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         to disable ADC peripheral, instead of using 2 functions
5043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         @ref HAL_ADCEx_RegularStop() and @ref HAL_ADCEx_InjectedStop(),
5044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         use function @ref HAL_ADC_Stop().
5045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (for devices with several ADCs): This 
5046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function is for single-ADC mode only. For multimode, use the 
ARM GAS  /tmp/cc0XO8k8.s 			page 90


5047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         dedicated MultimodeStop function.
5048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
5049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status.
5050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularStop_DMA(ADC_HandleTypeDef* hadc)
5052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
5053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
5054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
5056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
5057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
5059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
5060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential ADC conversion on going and disable ADC peripheral        */
5062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conditioned to:                                                          */
5063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - For ADC regular group conversion stop:                                 */
5064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   On this STM32 family, conversion on the other group                    */
5065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   (group injected) can continue (groups regular and injected             */
5066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   conversion stop commands are independent)                              */
5067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - For ADC disable:                                                       */
5068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   No conversion on the other group (group injected) must be intended to  */
5069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   continue (groups regular and injected are both impacted by             */
5070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   ADC disable)                                                           */
5071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* 1. Stop potential conversion on going, on regular group only */
5073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
5074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversion on ADC group regular is             */
5076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* effectively stopped and if no conversion on the other group              */
5077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* (ADC group injected) is intended to continue.                            */
5078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if((ADC_IS_CONVERSION_ONGOING_INJECTED(hadc) == RESET) &&
5079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == RESET)     )
5080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC DMA (ADC DMA configuration ADC_CFGR_DMACFG is kept) */
5082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
5083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
5085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
5086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);   
5087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
5089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status != HAL_OK)
5090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
5092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);     
5093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
5096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
5097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripheral */
5099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed,          */
5100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* to retain a potential failing status.                                  */
5101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
5102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Disable(hadc);
ARM GAS  /tmp/cc0XO8k8.s 			page 91


5104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
5106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_Disable(hadc);
5108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
5111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
5112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state */
5114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
5115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
5116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
5117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Conversion on ADC group regular group is stopped, but ADC is not         */
5120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* disabled since conversion on ADC group injected is still on going.       */
5121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
5122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
5124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
5125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
5128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
5129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
5131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
5132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
5133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
5135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
5136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx)
5137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
5138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  With ADC configured in multimode, for ADC master:
5139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Stop ADC group regular conversion (potential conversion on going
5140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         on ADC group injected is not impacted),
5141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         disable ADC DMA transfer, disable ADC peripheral
5142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         if no conversion is on going on group injected.
5143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions disabled in this function:
5144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA transfer complete
5145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA half transfer
5146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - overrun
5147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   To stop ADC conversion of both groups regular and injected and to
5148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         to disable ADC peripheral, instead of using 2 functions
5149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         @ref HAL_ADCEx_RegularMultiModeStop_DMA() and
5150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         @ref HAL_ADCEx_InjectedStop(), use function
5151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         @ref HAL_ADCEx_MultiModeStop_DMA.
5152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   In case of auto-injection mode, this function also stop conversion
5153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         on ADC group injected.
5154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Multimode is kept enabled after this function. To disable multimode
5155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (set with HAL_ADCEx_MultiModeConfigChannel() ), ADC must be 
5156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         reinitialized using HAL_ADC_Init() or HAL_ADC_ReInit().
5157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   In case of DMA configured in circular mode, function 
5158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         HAL_ADC_Stop_DMA must be called after this function with handle of
5159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         ADC slave, to properly disable the DMA channel of ADC slave.
5160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle of ADC master (handle of ADC slave must not be used)
ARM GAS  /tmp/cc0XO8k8.s 			page 92


5161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
5162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularMultiModeStop_DMA(ADC_HandleTypeDef* hadc)
5164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
5165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
5166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart;
5167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave;
5168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
5170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
5171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
5173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
5174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential ADC conversion on going and disable ADC peripheral        */
5176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conditioned to:                                                          */
5177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - For ADC regular group conversion stop:                                 */
5178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   On this STM32 family, conversion on the other group                    */
5179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   (group injected) can continue (groups regular and injected             */
5180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   conversion stop commands are independent)                              */
5181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - For ADC disable:                                                       */
5182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   No conversion on the other group (group injected) must be intended to  */
5183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   continue (groups regular and injected are both impacted by             */
5184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   ADC disable)                                                           */
5185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* 1. Stop potential conversion on going, on regular group only */
5187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
5188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversion on ADC group regular is             */
5190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* effectively stopped and if no conversion on the other group              */
5191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* (ADC group injected) is intended to continue.                            */
5192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if((ADC_IS_CONVERSION_ONGOING_INJECTED(hadc) == RESET) &&
5193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == RESET)     )
5194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set a temporary handle of the ADC slave associated to the ADC master   */
5196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (Depending on STM32F3 product, there may be up to 2 ADC slaves)        */
5197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
5198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmphadcSlave.Instance == NULL)
5200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine (ADC master) to error */
5202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
5203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
5204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
5205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
5206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
5207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       return HAL_ERROR;
5208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Procedure to disable the ADC peripheral: wait for conversions          */
5211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* effectively stopped (ADC master and ADC slave), then disable ADC       */
5212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 1. Wait until ADSTP=0 for ADC master and ADC slave*/
5214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();  
5215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     while(ADC_IS_CONVERSION_ONGOING_REGULAR(hadc)          || 
5217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_IS_CONVERSION_ONGOING_REGULAR(&tmphadcSlave)   )
ARM GAS  /tmp/cc0XO8k8.s 			page 93


5218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
5220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
5221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine (ADC master) to error */
5222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
5223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
5224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Process unlocked */
5225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
5226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
5227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_ERROR;
5228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
5229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
5232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
5233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: In case of ADC slave using its own DMA channel (multimode        */
5234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       parameter "DMAAccessMode" set to disabled):                      */
5235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       DMA channel of ADC slave should stopped after this function with */
5236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       function HAL_ADC_Stop_DMA.                                       */
5237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
5238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
5240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status != HAL_OK)
5241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
5243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
5244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
5247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
5248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripherals: master and slave */
5252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed,          */
5253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* to retain a potential failing status.                                  */
5254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
5255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Check if ADC are effectively disabled */
5257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if ((ADC_Disable(hadc) != HAL_ERROR)          &&
5258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_Disable(&tmphadcSlave) != HAL_ERROR)   )
5259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
5260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_hal_status = HAL_OK;
5261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
5262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Change ADC state (ADC master) */
5263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
5264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
5265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
5266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
5267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
5269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* In case of error, attempt to disable ADC instances anyway */
5271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_Disable(hadc);
5272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_Disable(&tmphadcSlave);
5273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
5274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine (ADC master) to error */
ARM GAS  /tmp/cc0XO8k8.s 			page 94


5275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
5276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Conversion on ADC group regular group is stopped, but ADC is not         */
5280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* disabled since conversion on ADC group injected is still on going.       */
5281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
5282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
5284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
5285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
5288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
5289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
5291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
5292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
5293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
5294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
5295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx    */
5296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
5299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
5300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
5301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
5302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
5304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Injected conversion complete callback in non blocking mode 
5305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
5306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
5307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** __weak void HAL_ADCEx_InjectedConvCpltCallback(ADC_HandleTypeDef* hadc)
5309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
5310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
5311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   UNUSED(hadc);
5312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
5314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             the HAL_ADCEx_InjectedConvCpltCallback could be implemented in the user file
5315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
5317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
5319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
5320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
5321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
5322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
5323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Injected context queue overflow flag callback. 
5324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   This callback is called if injected context queue is enabled
5325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             (parameter "QueueInjectedContext" in injected channel configuration)
5326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             and if a new injected context is set when queue is full (maximum 2
5327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             contexts).
5328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
5329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
5330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** __weak void HAL_ADCEx_InjectedQueueOverflowCallback(ADC_HandleTypeDef* hadc)
ARM GAS  /tmp/cc0XO8k8.s 			page 95


5332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
5333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
5334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   UNUSED(hadc);
5335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
5337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             function HAL_ADCEx_InjectedQueueOverflowCallback must be implemented 
5338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             in the user file.
5339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
5341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         
5342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
5343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Analog watchdog 2 callback in non blocking mode. 
5344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
5345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
5346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** __weak void HAL_ADCEx_LevelOutOfWindow2Callback(ADC_HandleTypeDef* hadc)
5348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
5349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
5350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   UNUSED(hadc);
5351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
5353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             function HAL_ADC_LevelOoutOfWindow2Callback must be implemented in the user file.
5354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
5356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
5358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Analog watchdog 3 callback in non blocking mode. 
5359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
5360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
5361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** __weak void HAL_ADCEx_LevelOutOfWindow3Callback(ADC_HandleTypeDef* hadc)
5363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
5364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
5365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   UNUSED(hadc);
5366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
5368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             function HAL_ADC_LevelOoutOfWindow3Callback must be implemented in the user file.
5369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
5371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
5372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
5373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
5374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
5375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
5377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @}
5378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions_Group3 ADCEx Peripheral Control functions
5381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief    ADC Extended Peripheral Control functions
5382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *
5383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** @verbatim   
5384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****  ===============================================================================
5385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****              ##### Peripheral Control functions #####
5386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****  ===============================================================================  
5387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     [..]  This section provides functions allowing to:
5388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Configure channels on regular group
ARM GAS  /tmp/cc0XO8k8.s 			page 96


5389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Configure channels on injected group
5390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Configure multimode
5391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Configure the analog watchdog
5392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
5393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** @endverbatim
5394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @{
5395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
5399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
5400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
5401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
5402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
5403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Configures the the selected channel to be linked to the regular
5404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         group.
5405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   In case of usage of internal measurement channels:
5406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Vbat/VrefInt/TempSensor.
5407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         The recommended sampling time is at least:
5408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - For devices STM32F37x: 17.1us for temperature sensor
5409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - For the other STM32F3 devices: 2.2us for each of channels 
5410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            Vbat/VrefInt/TempSensor.
5411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         These internal paths can be be disabled using function 
5412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         HAL_ADC_DeInit().
5413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
5414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         This function initializes channel into regular group, following  
5415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         calls to this function can be used to reconfigure some parameters 
5416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         of structure "ADC_ChannelConfTypeDef" on the fly, without reseting 
5417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         the ADC.
5418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state.
5419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For parameters constraints, see comments of structure 
5420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         "ADC_ChannelConfTypeDef".
5421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
5422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  sConfig Structure ADC channel for regular group.
5423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
5424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
5426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
5427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
5428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
5429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSharingSameCommonRegister;
5430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
5431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0U;
5432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
5434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
5435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
5436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
5437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfig->SingleDiff));
5438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_OFFSET_NUMBER(sConfig->OffsetNumber));
5439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfig->Offset));
5440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Verification of channel number: Channels 1 to 14 are available in        */  
5443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* differential mode. Channels 15U, 16U, 17U, 18 can be used only in           */
5444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* single-ended mode.                                                       */
5445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (sConfig->SingleDiff != ADC_DIFFERENTIAL_ENDED)
ARM GAS  /tmp/cc0XO8k8.s 			page 97


5446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_CHANNEL(sConfig->Channel));
5448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
5450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_DIFF_CHANNEL(sConfig->Channel));
5452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
5455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
5456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
5459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
5460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conversion on going on regular group:                                    */
5461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Channel number                                                        */
5462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Channel rank                                                          */
5463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
5464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Regular sequence configuration */
5466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* For Rank 1 to 4U */
5467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (sConfig->Rank < 5U)
5468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->SQR1,
5470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SQR1_RK(ADC_SQR2_SQ5, sConfig->Rank)    ,
5471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SQR1_RK(sConfig->Channel, sConfig->Rank) );
5472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* For Rank 5 to 9U */
5474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else if (sConfig->Rank < 10U)
5475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->SQR2,
5477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SQR2_RK(ADC_SQR2_SQ5, sConfig->Rank)    ,
5478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SQR2_RK(sConfig->Channel, sConfig->Rank) );
5479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* For Rank 10 to 14U */
5481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else if (sConfig->Rank < 15U)
5482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->SQR3                        ,
5484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SQR3_RK(ADC_SQR3_SQ10, sConfig->Rank)   ,
5485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SQR3_RK(sConfig->Channel, sConfig->Rank) );
5486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* For Rank 15 to 16U */
5488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
5489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {   
5490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->SQR4                        ,
5491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SQR4_RK(ADC_SQR4_SQ15, sConfig->Rank)   ,
5492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SQR4_RK(sConfig->Channel, sConfig->Rank) );
5493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
5497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
5498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conversion on going on regular group:                                    */
5499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Channel sampling time                                                 */
5500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Channel offset                                                        */
5501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET)
5502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
ARM GAS  /tmp/cc0XO8k8.s 			page 98


5503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Channel sampling time configuration */
5504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* For channels 10 to 18U */
5505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (sConfig->Channel >= ADC_CHANNEL_10)
5506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->SMPR2                             ,
5508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SMPR2(ADC_SMPR2_SMP10, sConfig->Channel)      ,
5509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel) );
5510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else /* For channels 1 to 9U */
5512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->SMPR1                             ,
5514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SMPR1(ADC_SMPR1_SMP0, sConfig->Channel)       ,
5515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel) );
5516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configure the offset: offset enable/disable, channel, offset value */
5520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Shift the offset in function of the selected ADC resolution. */
5522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Offset has to be left-aligned on bit 11U, the LSB (right bits) are set  */
5523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* to 0.                                                                  */
5524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmpOffsetShifted = ADC_OFFSET_SHIFT_RESOLUTION(hadc, sConfig->Offset);
5525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configure the selected offset register:                                */
5527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Enable offset                                                        */
5528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Set channel number                                                   */
5529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Set offset value                                                     */
5530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     switch (sConfig->OffsetNumber)
5531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_OFFSET_1:
5533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configure offset register 1U */
5534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->OFR1               ,
5535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR1_OFFSET1_CH |
5536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR1_OFFSET1                   ,
5537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR1_OFFSET1_EN               |
5538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR_CHANNEL(sConfig->Channel) |
5539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  tmpOffsetShifted                    );
5540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
5541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_OFFSET_2:
5543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configure offset register 2U */
5544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->OFR2               ,
5545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR2_OFFSET2_CH |
5546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR2_OFFSET2                   ,
5547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR2_OFFSET2_EN               |
5548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR_CHANNEL(sConfig->Channel) |
5549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  tmpOffsetShifted                    );
5550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
5551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
5552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_OFFSET_3:
5553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configure offset register 3U */
5554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->OFR3               ,
5555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR3_OFFSET3_CH |
5556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR3_OFFSET3                   ,
5557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR3_OFFSET3_EN               |
5558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR_CHANNEL(sConfig->Channel) |
5559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  tmpOffsetShifted                    );
ARM GAS  /tmp/cc0XO8k8.s 			page 99


5560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
5561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_OFFSET_4:
5563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configure offset register 4U */
5564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->OFR4               ,
5565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR4_OFFSET4_CH |
5566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR4_OFFSET4                   ,
5567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR4_OFFSET4_EN               |
5568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR_CHANNEL(sConfig->Channel) |
5569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  tmpOffsetShifted                    );
5570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
5571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Case ADC_OFFSET_NONE */
5573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     default :
5574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Scan OFR1, OFR2, OFR3, OFR4 to check if the selected channel is        */
5575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* enabled. If this is the case, offset OFRx is disabled.                 */
5576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (((hadc->Instance->OFR1) & ADC_OFR1_OFFSET1_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
5577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
5578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Disable offset OFR1*/
5579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->OFR1, ADC_OFR1_OFFSET1_EN);
5580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
5581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (((hadc->Instance->OFR2) & ADC_OFR2_OFFSET2_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
5582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
5583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Disable offset OFR2*/
5584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->OFR2, ADC_OFR2_OFFSET2_EN); 
5585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
5586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (((hadc->Instance->OFR3) & ADC_OFR3_OFFSET3_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
5587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
5588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Disable offset OFR3*/
5589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->OFR3, ADC_OFR3_OFFSET3_EN);
5590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
5591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (((hadc->Instance->OFR4) & ADC_OFR4_OFFSET4_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
5592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
5593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Disable offset OFR4*/
5594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->OFR4, ADC_OFR4_OFFSET4_EN);
5595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
5596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
5597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****  
5601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
5603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters that can be updated only when ADC is disabled:                */
5604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Single or differential mode                                           */
5605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Internal measurement channels: Vbat/VrefInt/TempSensor                */
5606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_ENABLE(hadc) == RESET)
5607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configuration of differential mode */
5609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (sConfig->SingleDiff != ADC_DIFFERENTIAL_ENDED)
5610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Disable differential mode (default mode: single-ended) */
5612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->Instance->DIFSEL, ADC_DIFSEL_CHANNEL(sConfig->Channel));
5613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
5615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable differential mode */
ARM GAS  /tmp/cc0XO8k8.s 			page 100


5617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->DIFSEL, ADC_DIFSEL_CHANNEL(sConfig->Channel));
5618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
5619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Channel sampling time configuration (channel ADC_INx +1              */
5620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* corresponding to differential negative input).                       */
5621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* For channels 10 to 18U */
5622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (sConfig->Channel >= ADC_CHANNEL_10)
5623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
5624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         MODIFY_REG(hadc->Instance->SMPR2,
5625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_SMPR2(ADC_SMPR2_SMP10, sConfig->Channel +1U)      ,
5626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel +1U) );
5627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
5628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else /* For channels 1 to 9U */
5629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
5630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         MODIFY_REG(hadc->Instance->SMPR1,
5631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_SMPR1(ADC_SMPR1_SMP0, sConfig->Channel +1U)       ,
5632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel +1U) );
5633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
5634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Management of internal measurement channels: VrefInt/TempSensor/Vbat   */
5638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* internal measurement paths enable: If internal channel selected,       */
5639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* enable dedicated internal buffers and path.                            */
5640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: these internal measurement paths can be disabled using           */
5641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* HAL_ADC_DeInit().                                                      */
5642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        
5643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configuration of common ADC parameters                                 */
5644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Pointer to the common control register to which is belonging hadc      */
5645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (Depending on STM32F3 product, there may be up to 4 ADC and 2 common   */
5646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* control registers)                                                     */
5647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
5648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If the requested internal measurement path has already been enabled,   */
5650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* bypass the configuration processing.                                   */
5651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (( (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) &&
5652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_TSEN))            ) ||
5653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (sConfig->Channel == ADC_CHANNEL_VBAT)       &&
5654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_VBATEN))          ) ||
5655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (sConfig->Channel == ADC_CHANNEL_VREFINT)    &&
5656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_VREFEN)))
5657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        )
5658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configuration of common ADC parameters (continuation)                */
5660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set handle of the other ADC sharing the same common register         */
5661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_COMMON_ADC_OTHER(hadc, &tmphadcSharingSameCommonRegister);
5662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
5663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Software is allowed to change common parameters only when all ADCs   */
5664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* of the common group are disabled.                                    */
5665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if ((ADC_IS_ENABLE(hadc) == RESET)                                    &&
5666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ( (tmphadcSharingSameCommonRegister.Instance == NULL)         ||
5667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )   )
5668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
5669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* If Channel_16 is selected, enable Temp. sensor measurement path    */
5670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Note: Temp. sensor internal channels available on ADC1 only        */
5671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) && (hadc->Instance == ADC1))
5672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
5673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(tmpADC_Common->CCR, ADC_CCR_TSEN);
ARM GAS  /tmp/cc0XO8k8.s 			page 101


5674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
5675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Delay for temperature sensor stabilization time */
5676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Compute number of CPU cycles to wait for */
5677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           wait_loop_index = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
5678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           while(wait_loop_index != 0U)
5679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
5680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             wait_loop_index--;
5681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           }
5682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
5683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* If Channel_17 is selected, enable VBAT measurement path            */
5684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Note: VBAT internal channels available on ADC1 only                */
5685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         else if ((sConfig->Channel == ADC_CHANNEL_VBAT) && (hadc->Instance == ADC1))
5686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
5687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(tmpADC_Common->CCR, ADC_CCR_VBATEN);
5688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
5689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* If Channel_18 is selected, enable VREFINT measurement path         */
5690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Note: VrefInt internal channels available on all ADCs, but only    */
5691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /*       one ADC is allowed to be connected to VrefInt at the same    */
5692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /*       time.                                                        */
5693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         else if (sConfig->Channel == ADC_CHANNEL_VREFINT)
5694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
5695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(tmpADC_Common->CCR, ADC_CCR_VREFEN);
5696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
5697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
5698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If the requested internal measurement path has already been          */
5699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* enabled and other ADC of the common group are enabled, internal      */
5700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* measurement paths cannot be enabled.                                 */
5701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else  
5702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
5703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
5704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
5705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
5706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_hal_status = HAL_ERROR;
5707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
5708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* If a conversion is on going on regular group, no update on regular       */
5714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* channel could be done on neither of the channel configuration structure  */
5715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* parameters.                                                              */
5716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
5717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
5719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
5720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
5722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
5725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
5726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
5728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
5729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
5730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
ARM GAS  /tmp/cc0XO8k8.s 			page 102


5731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
5732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
5733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
5734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
5736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
5737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Configures the the selected channel to be linked to the regular
5738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         group.
5739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   In case of usage of internal measurement channels:
5740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Vbat/VrefInt/TempSensor.
5741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         The recommended sampling time is at least:
5742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - For devices STM32F37x: 17.1us for temperature sensor
5743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - For the other STM32F3 devices: 2.2us for each of channels 
5744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            Vbat/VrefInt/TempSensor.
5745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         These internal paths can be be disabled using function 
5746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         HAL_ADC_DeInit().
5747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
5748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         This function initializes channel into regular group, following  
5749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         calls to this function can be used to reconfigure some parameters 
5750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         of structure "ADC_ChannelConfTypeDef" on the fly, without reseting 
5751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         the ADC.
5752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state.
5753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For parameters constraints, see comments of structure 
5754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         "ADC_ChannelConfTypeDef".
5755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
5756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  sConfig Structure of ADC channel for regular group.
5757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
5758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
5760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** { 
5761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
5762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0U;
5763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
5765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
5766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_CHANNEL(sConfig->Channel));
5767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
5768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
5769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
5771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
5772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Regular sequence configuration */
5775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* For Rank 1 to 6U */
5776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (sConfig->Rank < 7U)
5777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->SQR3                        ,
5779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank)    ,
5780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SQR3_RK(sConfig->Channel, sConfig->Rank) );
5781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* For Rank 7 to 12U */
5783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else if (sConfig->Rank < 13U)
5784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->SQR2                        ,
5786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank)    ,
5787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SQR2_RK(sConfig->Channel, sConfig->Rank) );
ARM GAS  /tmp/cc0XO8k8.s 			page 103


5788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* For Rank 13 to 16U */
5790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
5791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->SQR1                        ,
5793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank)   ,
5794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SQR1_RK(sConfig->Channel, sConfig->Rank) );
5795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Channel sampling time configuration */
5799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* For channels 10 to 18U */
5800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (sConfig->Channel > ADC_CHANNEL_10)
5801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->SMPR1                             ,
5803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel)      ,
5804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel) );
5805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else   /* For channels 0 to 9U */
5807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->SMPR2                             ,
5809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel)       ,
5810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel) );
5811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* If ADC1 Channel_16 or Channel_17 is selected, enable Temperature sensor  */
5814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* and VREFINT measurement path.                                            */
5815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) ||
5816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (sConfig->Channel == ADC_CHANNEL_VREFINT)      )
5817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->Instance->CR2, ADC_CR2_TSVREFE);
5819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
5821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Delay for temperature sensor stabilization time */
5823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Compute number of CPU cycles to wait for */
5824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       wait_loop_index = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
5825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       while(wait_loop_index != 0U)
5826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
5827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         wait_loop_index--;
5828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
5829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* if ADC1 Channel_18 is selected, enable VBAT measurement path */
5832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else if (sConfig->Channel == ADC_CHANNEL_VBAT)
5833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_VBAT);
5835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****    
5838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
5839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
5840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
5842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
5843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
5844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
ARM GAS  /tmp/cc0XO8k8.s 			page 104


5845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
5847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
5848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
5849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
5850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
5851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Configures the ADC injected group and the selected channel to be
5852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         linked to the injected group.
5853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
5854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         This function initializes injected group, following calls to this 
5855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function can be used to reconfigure some parameters of structure
5856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         "ADC_InjectionConfTypeDef" on the fly, without reseting the ADC.
5857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state.
5858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For parameters constraints, see comments of structure 
5859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         "ADC_InjectionConfTypeDef".
5860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   In case of usage of internal measurement channels:
5861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Vbat/VrefInt/TempSensor.
5862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         The recommended sampling time is at least:
5863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - For devices STM32F37x: 17.1us for temperature sensor
5864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - For the other STM32F3 devices: 2.2us for each of channels 
5865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            Vbat/VrefInt/TempSensor.
5866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         These internal paths can be be disabled using function 
5867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         HAL_ADC_DeInit().
5868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   To reset injected sequencer, function HAL_ADCEx_InjectedStop() can
5869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         be used.
5870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Caution: For Injected Context Queue use: a context must be fully 
5871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * defined before start of injected conversion: all channels configured 
5872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * consecutively for the same ADC instance. Therefore, Number of calls of 
5873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * HAL_ADCEx_InjectedConfigChannel() must correspond to value of parameter 
5874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * InjectedNbrOfConversion for each context.
5875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *  - Example 1: If 1 context intended to be used (or not use of this feature: 
5876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *    QueueInjectedContext=DISABLE) and usage of the 3 first injected ranks 
5877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *    (InjectedNbrOfConversion=3), HAL_ADCEx_InjectedConfigChannel() must be  
5878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *    called once for each channel (3 times) before launching a conversion.   
5879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *    This function must not be called to configure the 4th injected channel:   
5880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *    it would start a new context into context queue.
5881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *  - Example 2: If 2 contexts intended to be used and usage of the 3 first 
5882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *    injected ranks (InjectedNbrOfConversion=3),  
5883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *    HAL_ADCEx_InjectedConfigChannel() must be called once for each channel and  
5884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *    for each context (3 channels x 2 contexts = 6 calls). Conversion can  
5885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *    start once the 1st context is set. The 2nd context can be set on the fly.
5886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
5887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  sConfigInjected Structure of ADC injected group and ADC channel for
5888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         injected group.
5889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
5890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedConfigChannel(ADC_HandleTypeDef* hadc, ADC_InjectionConfTypeDef
5892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
5893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
5894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
5895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSharingSameCommonRegister;
5896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
5897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0U;
5898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Injected context queue feature: temporary JSQR variables defined in      */
5900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* static to be passed over calls of this function                          */
5901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_JSQR_ContextQueueBeingBuilt = 0U;
ARM GAS  /tmp/cc0XO8k8.s 			page 105


5902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
5904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
5905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfigInjected->InjectedSamplingTime));
5906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfigInjected->InjectedSingleDiff));
5907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->AutoInjectedConv));
5908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->QueueInjectedContext));
5909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIGINJEC_EDGE(sConfigInjected->ExternalTrigInjecConvEdge));
5910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIGINJEC(sConfigInjected->ExternalTrigInjecConv));
5911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_OFFSET_NUMBER(sConfigInjected->InjectedOffsetNumber));
5912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfigInjected->InjectedOffset));
5913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
5915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_INJECTED_RANK(sConfigInjected->InjectedRank));
5917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_INJECTED_NB_CONV(sConfigInjected->InjectedNbrOfConversion));
5918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->InjectedDiscontinuousConvMode));
5919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Verification of channel number: Channels 1 to 14 are available in        */  
5922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* differential mode. Channels 15U, 16U, 17U, 18 can be used only in           */
5923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* single-ended mode.                                                       */
5924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (sConfigInjected->InjectedSingleDiff != ADC_DIFFERENTIAL_ENDED)
5925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_CHANNEL(sConfigInjected->InjectedChannel));
5927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
5929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_DIFF_CHANNEL(sConfigInjected->InjectedChannel));
5931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
5934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
5935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Configuration of Injected group sequencer.                               */
5937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Hardware constraint: Must fully define injected context register JSQR    */
5938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* before make it entering into injected sequencer queue.                   */
5939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*                                                                          */
5940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - if scan mode is disabled:                                              */
5941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    * Injected channels sequence length is set to 0x00: 1 channel         */
5942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*      converted (channel on injected rank 1U)                              */
5943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*      Parameter "InjectedNbrOfConversion" is discarded.                   */
5944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    * Injected context register JSQR setting is simple: register is fully */
5945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*      defined on one call of this function (for injected rank 1U) and can  */
5946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*      be entered into queue directly.                                     */
5947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - if scan mode is enabled:                                               */
5948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    * Injected channels sequence length is set to parameter               */
5949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*      "InjectedNbrOfConversion".                                          */
5950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    * Injected context register JSQR setting more complex: register is    */
5951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*      fully defined over successive calls of this function, for each      */
5952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*      injected channel rank. It is entered into queue only when all       */
5953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*      injected ranks have been set.                                       */
5954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   Note: Scan mode is not present by hardware on this device, but used    */
5955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   by software for alignment over all STM32 devices.                      */
5956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if ((hadc->Init.ScanConvMode == ADC_SCAN_DISABLE)  ||
5958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (sConfigInjected->InjectedNbrOfConversion == 1U)  )
ARM GAS  /tmp/cc0XO8k8.s 			page 106


5959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configuration of context register JSQR:                                */
5961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - number of ranks in injected group sequencer: fixed to 1st rank      */
5962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*    (scan mode disabled, only rank 1 used)                              */
5963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - external trigger to start conversion                                */
5964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - external trigger polarity                                           */
5965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - channel set to rank 1 (scan mode disabled, only rank 1 used)        */
5966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedRank == ADC_INJECTED_RANK_1)
5968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable external trigger if trigger selection is different of         */
5970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* software start.                                                      */
5971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Note: This configuration keeps the hardware feature of parameter     */
5972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       ExternalTrigInjecConvEdge "trigger edge none" equivalent to    */
5973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       software start.                                                */
5974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (sConfigInjected->ExternalTrigInjecConv != ADC_INJECTED_SOFTWARE_START)
5975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
5976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(tmp_JSQR_ContextQueueBeingBuilt, ADC_JSQR_RK(sConfigInjected->InjectedChannel, ADC_
5977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                                  ADC_JSQR_JEXTSEL_SET(hadc, sConfigInjected->Extern
5978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                                  sConfigInjected->ExternalTrigInjecConvEdge        
5979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
5980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
5981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
5982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(tmp_JSQR_ContextQueueBeingBuilt, ADC_JSQR_RK(sConfigInjected->InjectedChannel, ADC_
5983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
5984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
5985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC register JSQR */
5986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR           ,
5987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JSQ4    |
5988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JSQ3    |
5989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JSQ2    |
5990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JSQ1    |
5991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JEXTEN  |
5992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JEXTSEL |
5993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JL                    ,
5994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  tmp_JSQR_ContextQueueBeingBuilt );
5995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
5996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* For debug and informative reasons, hadc handle saves JSQR setting */
5997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       hadc->InjectionConfig.ContextQueue = tmp_JSQR_ContextQueueBeingBuilt;
5998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If another injected rank than rank1 was intended to be set, and could  */
6000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* not due to ScanConvMode disabled, error is reported.                   */
6001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
6002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
6004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
6005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_hal_status = HAL_ERROR;
6007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
6011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Case of scan mode enabled, several channels to set into injected group */
6013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* sequencer.                                                             */
6014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Procedure to define injected context register JSQR over successive     */
6015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* calls of this function, for each injected channel rank:                */
ARM GAS  /tmp/cc0XO8k8.s 			page 107


6016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
6017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 1. Start new context and set parameters related to all injected        */
6018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*    channels: injected sequence length and trigger                      */
6019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (hadc->InjectionConfig.ChannelCount == 0U)
6020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Initialize number of channels that will be configured on the context */
6022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  being built                                                         */
6023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       hadc->InjectionConfig.ChannelCount = sConfigInjected->InjectedNbrOfConversion;
6024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Initialize value that will be set into register JSQR */
6025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       hadc->InjectionConfig.ContextQueue = 0x00000000U;
6026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configuration of context register JSQR:                              */
6028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - number of ranks in injected group sequencer                       */
6029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - external trigger to start conversion                              */
6030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - external trigger polarity                                         */
6031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
6032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable external trigger if trigger selection is different of         */
6033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* software start.                                                      */
6034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Note: This configuration keeps the hardware feature of parameter     */
6035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       ExternalTrigInjecConvEdge "trigger edge none" equivalent to    */
6036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       software start.                                                */
6037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (sConfigInjected->ExternalTrigInjecConv != ADC_INJECTED_SOFTWARE_START)
6038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->InjectionConfig.ContextQueue, (sConfigInjected->InjectedNbrOfConversion - 1U)
6040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                                     ADC_JSQR_JEXTSEL_SET(hadc, sConfigInjected->Ext
6041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                                     sConfigInjected->ExternalTrigInjecConvEdge     
6042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
6044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->InjectionConfig.ContextQueue, (sConfigInjected->InjectedNbrOfConversion - 1U)
6046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* 2. Continue setting of context under definition with parameter       */
6051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*    related to each channel: channel rank sequence                    */
6052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set the JSQx bits for the selected rank */
6054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->InjectionConfig.ContextQueue                                          ,
6055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_RK(ADC_SQR3_SQ10, sConfigInjected->InjectedRank)                   ,
6056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_RK(sConfigInjected->InjectedChannel, sConfigInjected->InjectedRank) );
6057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Decrease channel count after setting into temporary JSQR variable */
6059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       hadc->InjectionConfig.ChannelCount --;
6060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* 3. End of context setting: If last channel set, then write context   */
6062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*    into register JSQR and make it enter into queue                   */
6063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (hadc->InjectionConfig.ChannelCount == 0U)
6064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC register JSQR */
6066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         MODIFY_REG(hadc->Instance->JSQR              ,
6067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_JSQR_JSQ4    |
6068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_JSQR_JSQ3    |
6069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_JSQR_JSQ2    |
6070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_JSQR_JSQ1    |
6071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_JSQR_JEXTEN  |
6072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_JSQR_JEXTSEL |
ARM GAS  /tmp/cc0XO8k8.s 			page 108


6073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_JSQR_JL                       ,
6074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    hadc->InjectionConfig.ContextQueue );
6075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
6081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
6082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conversion on going on injected group:                                   */
6083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Injected context queue: Queue disable (active context is kept) or     */
6084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    enable (context decremented, up to 2 contexts queued)                 */
6085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Injected discontinuous mode: can be enabled only if auto-injected     */
6086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    mode is disabled.                                                     */
6087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_INJECTED(hadc) == RESET)
6088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {     
6089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If auto-injected mode is disabled: no constraint                       */
6090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (sConfigInjected->AutoInjectedConv == DISABLE)
6091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CFGR                                                            ,
6093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_JQM    |
6094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_JDISCEN                                                                ,
6095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_INJECT_CONTEXT_QUEUE(sConfigInjected->QueueInjectedContext)           | 
6096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_INJECT_DISCCONTINUOUS(sConfigInjected->InjectedDiscontinuousConvMode)   )
6097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If auto-injected mode is enabled: Injected discontinuous setting is    */
6099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* discarded.                                                             */
6100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
6101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CFGR                                                ,
6103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_JQM    |
6104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_JDISCEN                                                    ,
6105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_INJECT_CONTEXT_QUEUE(sConfigInjected->QueueInjectedContext) );
6106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If injected discontinuous mode was intended to be set and could not  */
6108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* due to auto-injected enabled, error is reported.                     */
6109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (sConfigInjected->InjectedDiscontinuousConvMode == ENABLE)
6110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
6112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
6113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
6114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_hal_status = HAL_ERROR;
6115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
6122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
6123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conversion on going on regular and injected groups:                      */
6124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Automatic injected conversion: can be enabled if injected group       */
6125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    external triggers are disabled.                                       */
6126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Channel sampling time                                                 */
6127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Channel offset                                                        */
6128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET)
6129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {    
ARM GAS  /tmp/cc0XO8k8.s 			page 109


6130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If injected group external triggers are disabled (set to injected      */
6131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* software start): no constraint                                         */
6132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (sConfigInjected->ExternalTrigInjecConv == ADC_INJECTED_SOFTWARE_START)
6133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CFGR                                              ,
6135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_JAUTO                                                    ,
6136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_INJECT_AUTO_CONVERSION(sConfigInjected->AutoInjectedConv) );
6137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If Automatic injected conversion was intended to be set and could not  */
6139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* due to injected group external triggers enabled, error is reported.    */
6140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
6141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Disable Automatic injected conversion */
6143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO);
6144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (sConfigInjected->AutoInjectedConv == ENABLE)
6146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
6148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
6149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
6150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_hal_status = HAL_ERROR;
6151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Channel sampling time configuration */
6156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* For channels 10 to 18U */
6157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedChannel >= ADC_CHANNEL_10)
6158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->SMPR2                                                             
6160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SMPR2(ADC_SMPR2_SMP10, sConfigInjected->InjectedChannel)                      
6161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SMPR2(sConfigInjected->InjectedSamplingTime, sConfigInjected->InjectedChannel)
6162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else /* For channels 1 to 9U */
6164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->SMPR1                                                             
6166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SMPR1(ADC_SMPR1_SMP0, sConfigInjected->InjectedChannel)                       
6167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SMPR1(sConfigInjected->InjectedSamplingTime, sConfigInjected->InjectedChannel)
6168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
6170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configure the offset: offset enable/disable, channel, offset value */
6171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
6172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Shift the offset in function of the selected ADC resolution. */
6173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Offset has to be left-aligned on bit 11U, the LSB (right bits) are set  */
6174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* to 0.                                                                  */
6175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmpOffsetShifted = ADC_OFFSET_SHIFT_RESOLUTION(hadc, sConfigInjected->InjectedOffset);
6176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
6177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configure the selected offset register:                                */
6178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Enable offset                                                        */
6179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Set channel number                                                   */
6180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Set offset value                                                     */
6181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     switch (sConfigInjected->InjectedOffsetNumber)
6182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_OFFSET_1:
6184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configure offset register 1U */
6185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->OFR1                               ,
6186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR1_OFFSET1_CH |
ARM GAS  /tmp/cc0XO8k8.s 			page 110


6187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR1_OFFSET1                                   ,
6188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR1_OFFSET1_EN                               |
6189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR_CHANNEL(sConfigInjected->InjectedChannel) |
6190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  tmpOffsetShifted                                    );
6191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
6192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
6193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_OFFSET_2:
6194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configure offset register 2U */
6195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->OFR2                               ,
6196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR2_OFFSET2_CH |
6197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR2_OFFSET2                                   ,
6198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR2_OFFSET2_EN                               |
6199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR_CHANNEL(sConfigInjected->InjectedChannel) |
6200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  tmpOffsetShifted                                    );
6201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
6202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
6203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_OFFSET_3:
6204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configure offset register 3U */
6205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->OFR3                               ,
6206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR3_OFFSET3_CH |
6207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR3_OFFSET3                                   ,
6208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR3_OFFSET3_EN                               |
6209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR_CHANNEL(sConfigInjected->InjectedChannel) |
6210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  tmpOffsetShifted                                    );
6211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
6212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
6213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_OFFSET_4:
6214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configure offset register 4U */
6215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->OFR4                               ,
6216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR4_OFFSET4_CH |
6217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR4_OFFSET4                                   ,
6218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR4_OFFSET4_EN                               |
6219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR_CHANNEL(sConfigInjected->InjectedChannel) |
6220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  tmpOffsetShifted                                    );
6221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
6222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
6223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Case ADC_OFFSET_NONE */
6224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     default :
6225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Scan OFR1, OFR2, OFR3, OFR4 to check if the selected channel is        */
6226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* enabled. If this is the case, offset OFRx is disabled.                 */
6227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (((hadc->Instance->OFR1) & ADC_OFR1_OFFSET1_CH) == ADC_OFR_CHANNEL(sConfigInjected->Inject
6228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Disable offset OFR1*/
6230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->OFR1, ADC_OFR1_OFFSET1_EN);
6231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (((hadc->Instance->OFR2) & ADC_OFR2_OFFSET2_CH) == ADC_OFR_CHANNEL(sConfigInjected->Inject
6233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Disable offset OFR2*/
6235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->OFR2, ADC_OFR2_OFFSET2_EN); 
6236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (((hadc->Instance->OFR3) & ADC_OFR3_OFFSET3_CH) == ADC_OFR_CHANNEL(sConfigInjected->Inject
6238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Disable offset OFR3*/
6240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->OFR3, ADC_OFR3_OFFSET3_EN);
6241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (((hadc->Instance->OFR4) & ADC_OFR4_OFFSET4_CH) == ADC_OFR_CHANNEL(sConfigInjected->Inject
6243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
ARM GAS  /tmp/cc0XO8k8.s 			page 111


6244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Disable offset OFR4*/
6245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->OFR4, ADC_OFR4_OFFSET4_EN);
6246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
6248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
6250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
6254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters that can be updated only when ADC is disabled:                */
6255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Single or differential mode                                           */
6256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Internal measurement channels: Vbat/VrefInt/TempSensor                */
6257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_ENABLE(hadc) == RESET)
6258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configuration of differential mode */
6260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedSingleDiff != ADC_DIFFERENTIAL_ENDED)
6261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Disable differential mode (default mode: single-ended) */
6263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->Instance->DIFSEL, ADC_DIFSEL_CHANNEL(sConfigInjected->InjectedChannel));
6264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
6266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable differential mode */
6268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->DIFSEL, ADC_DIFSEL_CHANNEL(sConfigInjected->InjectedChannel));
6269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Channel sampling time configuration (channel ADC_INx +1              */
6271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* corresponding to differential negative input).                       */
6272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* For channels 10 to 18U */
6273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (sConfigInjected->InjectedChannel >= ADC_CHANNEL_10)
6274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         MODIFY_REG(hadc->Instance->SMPR2,
6276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_SMPR2(ADC_SMPR2_SMP10, sConfigInjected->InjectedChannel +1U),
6277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_SMPR2(sConfigInjected->InjectedSamplingTime, sConfigInjected->InjectedChanne
6278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else /* For channels 1 to 9U */
6280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         MODIFY_REG(hadc->Instance->SMPR1,
6282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_SMPR1(ADC_SMPR1_SMP0, sConfigInjected->InjectedChannel +1U),
6283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_SMPR1(sConfigInjected->InjectedSamplingTime, sConfigInjected->InjectedChanne
6284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
6287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Management of internal measurement channels: VrefInt/TempSensor/Vbat   */
6289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* internal measurement paths enable: If internal channel selected,       */
6290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* enable dedicated internal buffers and path.                            */
6291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: these internal measurement paths can be disabled using           */
6292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* HAL_ADC_deInit().                                                      */
6293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        
6294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configuration of common ADC parameters                                 */
6295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Pointer to the common control register to which is belonging hadc      */
6296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (Depending on STM32F3 product, there may be up to 4 ADC and 2 common   */
6297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* control registers)                                                     */
6298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
6299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If the requested internal measurement path has already been enabled,   */
ARM GAS  /tmp/cc0XO8k8.s 			page 112


6301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* bypass the configuration processing.                                   */
6302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (( (sConfigInjected->InjectedChannel == ADC_CHANNEL_TEMPSENSOR) &&
6303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_TSEN))            ) ||
6304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (sConfigInjected->InjectedChannel == ADC_CHANNEL_VBAT)       &&
6305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_VBATEN))          ) ||
6306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (sConfigInjected->InjectedChannel == ADC_CHANNEL_VREFINT)    &&
6307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_VREFEN)))
6308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        )
6309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configuration of common ADC parameters (continuation)                */
6311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set handle of the other ADC sharing the same common register         */
6312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_COMMON_ADC_OTHER(hadc, &tmphadcSharingSameCommonRegister);
6313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Software is allowed to change common parameters only when all ADCs   */
6315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* of the common group are disabled.                                    */
6316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if ((ADC_IS_ENABLE(hadc) == RESET)                                    &&
6317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ( (tmphadcSharingSameCommonRegister.Instance == NULL)         ||
6318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )   )
6319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* If Channel_16 is selected, enable Temp. sensor measurement path    */
6321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Note: Temp. sensor internal channels available on ADC1 only        */
6322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_TEMPSENSOR) && (hadc->Instance == ADC1
6323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
6324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(tmpADC_Common->CCR, ADC_CCR_TSEN);
6325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
6326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Delay for temperature sensor stabilization time */
6327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Compute number of CPU cycles to wait for */
6328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           wait_loop_index = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
6329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           while(wait_loop_index != 0U)
6330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
6331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             wait_loop_index--;
6332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           }
6333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
6334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* If Channel_17 is selected, enable VBAT measurement path            */
6335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Note: VBAT internal channels available on ADC1 only                */
6336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         else if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_VBAT) && (hadc->Instance == ADC1)
6337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
6338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(tmpADC_Common->CCR, ADC_CCR_VBATEN);
6339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
6340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* If Channel_18 is selected, enable VREFINT measurement path         */
6341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Note: VrefInt internal channels available on all ADCs, but only    */
6342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /*       one ADC is allowed to be connected to VrefInt at the same    */
6343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /*       time.                                                        */
6344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         else if (sConfigInjected->InjectedChannel == ADC_CHANNEL_VREFINT)
6345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
6346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(tmpADC_Common->CCR, ADC_CCR_VREFEN);
6347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
6348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If the requested internal measurement path has already been enabled  */
6350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* and other ADC of the common group are enabled, internal              */
6351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* measurement paths cannot be enabled.                                 */
6352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else  
6353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
6355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
6356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
6357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_hal_status = HAL_ERROR;
ARM GAS  /tmp/cc0XO8k8.s 			page 113


6358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
6361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
6364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
6365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
6367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
6368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
6369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
6370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
6371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
6372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
6373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
6375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
6376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Configures the ADC injected group and the selected channel to be
6377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         linked to the injected group.
6378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
6379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         This function initializes injected group, following calls to this 
6380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function can be used to reconfigure some parameters of structure
6381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         "ADC_InjectionConfTypeDef" on the fly, without reseting the ADC.
6382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state: 
6383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         this function must be called when ADC is not under conversion.
6384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   In case of usage of internal measurement channels:
6385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Vbat/VrefInt/TempSensor.
6386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         The recommended sampling time is at least:
6387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - For devices STM32F37x: 17.1us for temperature sensor
6388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - For the other STM32F3 devices: 2.2us for each of channels 
6389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            Vbat/VrefInt/TempSensor.
6390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         These internal paths can be be disabled using function 
6391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         HAL_ADC_DeInit().
6392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
6393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  sConfigInjected Structure of ADC injected group and ADC channel for
6394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         injected group.
6395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
6396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
6397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedConfigChannel(ADC_HandleTypeDef* hadc, ADC_InjectionConfTypeDef
6398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
6399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
6400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0U;
6401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
6403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
6404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_CHANNEL(sConfigInjected->InjectedChannel));
6405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfigInjected->InjectedSamplingTime));
6406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->AutoInjectedConv));
6407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIGINJEC(sConfigInjected->ExternalTrigInjecConv));
6408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_RANGE(sConfigInjected->InjectedOffset));
6409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
6411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_INJECTED_RANK(sConfigInjected->InjectedRank));
6413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_INJECTED_NB_CONV(sConfigInjected->InjectedNbrOfConversion));
6414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->InjectedDiscontinuousConvMode));
ARM GAS  /tmp/cc0XO8k8.s 			page 114


6415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
6418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
6419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Configuration of injected group sequencer:                               */
6421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - if scan mode is disabled, injected channels sequence length is set to  */
6422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   0x00: 1 channel converted (channel on regular rank 1U)                  */
6423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   Parameter "InjectedNbrOfConversion" is discarded.                      */
6424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   Note: Scan mode is present by hardware on this device and, if          */
6425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   disabled, discards automatically nb of conversions. Anyway, nb of      */
6426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   conversions is forced to 0x00 for alignment over all STM32 devices.    */
6427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - if scan mode is enabled, injected channels sequence length is set to   */
6428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   parameter "InjectedNbrOfConversion".                                   */
6429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (hadc->Init.ScanConvMode == ADC_SCAN_DISABLE)
6430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedRank == ADC_INJECTED_RANK_1)
6432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear the old SQx bits for all injected ranks */
6434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR                           ,
6435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JL   |
6436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JSQ4 |
6437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JSQ3 |
6438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JSQ2 |
6439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JSQ1                                  ,
6440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_RK_JL(sConfigInjected->InjectedChannel,
6441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                       ADC_INJECTED_RANK_1,
6442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                       0x01U)                      );
6443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If another injected rank than rank1 was intended to be set, and could  */
6445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* not due to ScanConvMode disabled, error is reported.                   */
6446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
6447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
6449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
6450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_hal_status = HAL_ERROR;
6452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
6455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Since injected channels rank conv. order depends on total number of   */
6457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* injected conversions, selected rank must be below or equal to total   */
6458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* number of injected conversions to be updated.                         */
6459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedRank <= sConfigInjected->InjectedNbrOfConversion)
6460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear the old SQx bits for the selected rank */
6462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set the SQx bits for the selected rank */
6463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR                                         ,
6464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  
6465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JL                                                 |
6466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_RK_JL(ADC_JSQR_JSQ1,                         
6467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 sConfigInjected->InjectedRank,         
6468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 sConfigInjected->InjectedNbrOfConversion)     ,
6469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  
6470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JL_SHIFT(sConfigInjected->InjectedNbrOfConversion) |
6471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_RK_JL(sConfigInjected->InjectedChannel,      
ARM GAS  /tmp/cc0XO8k8.s 			page 115


6472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 sConfigInjected->InjectedRank,         
6473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 sConfigInjected->InjectedNbrOfConversion)      );
6474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
6476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear the old SQx bits for the selected rank */
6478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR                                     ,
6479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  
6480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JL                                             |
6481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_RK_JL(ADC_JSQR_JSQ1,                         
6482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 sConfigInjected->InjectedRank,         
6483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 sConfigInjected->InjectedNbrOfConversion) ,
6484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  
6485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  0x00000000                                                );
6486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Configuration of injected group                                          */
6490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
6491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters that can be updated only when ADC is disabled:                */
6492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - external trigger to start conversion                                  */
6493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters update not conditioned to ADC state:                          */
6494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Automatic injected conversion                                         */
6495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Injected discontinuous mode                                           */
6496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Note: In case of ADC already enabled, caution to not launch an unwanted  */
6497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*       conversion while modifying register CR2 by writing 1 to bit ADON.  */
6498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_ENABLE(hadc) == RESET)
6499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {    
6500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->CR2                   ,
6501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_CR2_JEXTSEL |
6502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_CR2_ADON                          ,
6503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                sConfigInjected->ExternalTrigInjecConv );
6504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Configuration of injected group                                          */
6507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Automatic injected conversion                                         */
6508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Injected discontinuous mode                                           */
6509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Automatic injected conversion can be enabled if injected group         */
6511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* external triggers are disabled.                                        */
6512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (sConfigInjected->AutoInjectedConv == ENABLE)
6513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (sConfigInjected->ExternalTrigInjecConv == ADC_INJECTED_SOFTWARE_START)
6515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO);
6517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
6519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
6521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
6522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
6523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_hal_status = HAL_ERROR;
6524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
6527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Injected discontinuous can be enabled only if auto-injected mode is    */
6528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* disabled.                                                              */  
ARM GAS  /tmp/cc0XO8k8.s 			page 116


6529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedDiscontinuousConvMode == ENABLE)
6530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (sConfigInjected->AutoInjectedConv == DISABLE)
6532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR1, ADC_CR1_JDISCEN);
6534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       } 
6535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
6536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
6538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
6539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
6540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_hal_status = HAL_ERROR;
6541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* InjectedChannel sampling time configuration */
6546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* For channels 10 to 18 */
6547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (sConfigInjected->InjectedChannel > ADC_CHANNEL_10)
6548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->SMPR1,
6550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SMPR1(ADC_SMPR1_SMP10, sConfigInjected->InjectedChannel),
6551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SMPR1(sConfigInjected->InjectedSamplingTime, sConfigInjected->InjectedChannel) )
6552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else /* For channels 1 to 9 */
6554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->SMPR2,
6556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SMPR2(ADC_SMPR2_SMP0, sConfigInjected->InjectedChannel),
6557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SMPR2(sConfigInjected->InjectedSamplingTime, sConfigInjected->InjectedChannel) )
6558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Configure the offset: offset enable/disable, InjectedChannel, offset value */
6562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   switch(sConfigInjected->InjectedRank)
6563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case 1:
6565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set injected channel 1 offset */
6566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JOFR1,
6567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JOFR1_JOFFSET1,
6568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  sConfigInjected->InjectedOffset);
6569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
6570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case 2:
6571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set injected channel 2 offset */
6572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JOFR2,
6573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JOFR2_JOFFSET2,
6574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  sConfigInjected->InjectedOffset);
6575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
6576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case 3:
6577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set injected channel 3 offset */
6578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JOFR3,
6579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JOFR3_JOFFSET3,
6580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  sConfigInjected->InjectedOffset);
6581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
6582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case 4:
6583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     default:
6584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JOFR4,
6585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JOFR4_JOFFSET4,
ARM GAS  /tmp/cc0XO8k8.s 			page 117


6586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  sConfigInjected->InjectedOffset);
6587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
6588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* If ADC1 Channel_16 or Channel_17 is selected, enable Temperature sensor  */
6591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* and VREFINT measurement path.                                            */
6592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_TEMPSENSOR) ||
6593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (sConfigInjected->InjectedChannel == ADC_CHANNEL_VREFINT)      )
6594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (READ_BIT(hadc->Instance->CR2, ADC_CR2_TSVREFE) == RESET)
6596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, ADC_CR2_TSVREFE);
6598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_TEMPSENSOR))
6600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Delay for temperature sensor stabilization time */
6602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Compute number of CPU cycles to wait for */
6603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         wait_loop_index = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
6604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         while(wait_loop_index != 0U)
6605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
6606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           wait_loop_index--;
6607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
6608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* if ADC1 Channel_18 is selected, enable VBAT measurement path */
6612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else if (sConfigInjected->InjectedChannel == ADC_CHANNEL_VBAT)
6613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_VBAT);
6615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
6618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
6619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
6621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
6622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
6623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
6624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
6626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
6627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
6628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
6629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
6630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Configures the analog watchdog.
6631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
6632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         This function initializes the selected analog watchdog, following  
6633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         calls to this function can be used to reconfigure some parameters 
6634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         of structure "ADC_AnalogWDGConfTypeDef" on the fly, without reseting 
6635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         the ADC.
6636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state.
6637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For parameters constraints, see comments of structure 
6638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         "ADC_AnalogWDGConfTypeDef".
6639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
6640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  AnalogWDGConfig Structure of ADC analog watchdog configuration
6641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
6642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
ARM GAS  /tmp/cc0XO8k8.s 			page 118


6643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef* hadc, ADC_AnalogWDGConfTypeDef* Analog
6644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
6645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
6646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmpAWDHighThresholdShifted;
6648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmpAWDLowThresholdShifted;
6649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmpADCFlagAWD2orAWD3;
6651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmpADCITAWD2orAWD3;
6652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
6654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
6655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(AnalogWDGConfig->WatchdogNumber));
6656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
6657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
6658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Verify if threshold is within the selected ADC resolution */
6660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->HighThreshold));
6661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold));
6662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if((AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REG)     ||
6664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
6665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REGINJEC)  )
6666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_CHANNEL(AnalogWDGConfig->Channel));
6668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
6671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
6672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
6674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
6675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conversion on going on regular and injected groups:                      */
6676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Analog watchdog channels                                              */
6677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Analog watchdog thresholds                                            */
6678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET)
6679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Analog watchdogs configuration */
6682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_1)
6683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configuration of analog watchdog:                                    */
6685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - Set the analog watchdog enable mode: regular and/or injected      */
6686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*    groups, one or overall group of channels.                         */
6687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - Set the Analog watchdog channel (is not used if watchdog          */
6688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*    mode "all channels": ADC_CFGR_AWD1SGL=0U).                         */
6689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CFGR                             ,
6690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_AWD1SGL |
6691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_JAWD1EN |
6692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_AWD1EN  |
6693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_AWD1CH                                  ,
6694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  AnalogWDGConfig->WatchdogMode                   |
6695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_AWD1CH_SHIFT(AnalogWDGConfig->Channel)   );
6696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Shift the offset in function of the selected ADC resolution:         */
6698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Thresholds have to be left-aligned on bit 11U, the LSB (right bits)   */
6699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* are set to 0                                                         */ 
ARM GAS  /tmp/cc0XO8k8.s 			page 119


6700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmpAWDHighThresholdShifted = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->HighTh
6701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
6702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set the high and low thresholds */
6704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->TR1                                ,
6705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_TR1_HT1 |
6706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_TR1_LT1                                        ,
6707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_TRX_HIGHTHRESHOLD(tmpAWDHighThresholdShifted) |
6708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  tmpAWDLowThresholdShifted                           );
6709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear the ADC Analog watchdog flag (in case of left enabled by       */
6711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* previous ADC operations) to be ready to use for HAL_ADC_IRQHandler() */
6712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* or HAL_ADC_PollForEvent().                                           */
6713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_IT_AWD1);
6714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configure ADC Analog watchdog interrupt */
6716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if(AnalogWDGConfig->ITMode == ENABLE)
6717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Enable the ADC Analog watchdog interrupt */
6719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_AWD1);
6720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
6722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Disable the ADC Analog watchdog interrupt */
6724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_ADC_DISABLE_IT(hadc, ADC_IT_AWD1);
6725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Case of ADC_ANALOGWATCHDOG_2 and ADC_ANALOGWATCHDOG_3 */
6729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
6730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Shift the threshold in function of the selected ADC resolution */
6732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* have to be left-aligned on bit 7U, the LSB (right bits) are set to 0    */
6733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmpAWDHighThresholdShifted = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->HighT
6734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
6735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
6737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set the Analog watchdog channel or group of channels. This also    */
6739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* enables the watchdog.                                              */
6740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Note: Conditional register reset, because several channels can be  */
6741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /*       set by successive calls of this function.                    */
6742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (AnalogWDGConfig->WatchdogMode != ADC_ANALOGWATCHDOG_NONE) 
6743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
6744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Set the high and low thresholds */
6745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           MODIFY_REG(hadc->Instance->TR2                                ,
6746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      ADC_TR2_HT2 |
6747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      ADC_TR2_LT2                                        ,
6748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      ADC_TRX_HIGHTHRESHOLD(tmpAWDHighThresholdShifted) |
6749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      tmpAWDLowThresholdShifted                           );
6750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
6751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->Instance->AWD2CR, ADC_CFGR_AWD23CR(AnalogWDGConfig->Channel));
6752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
6753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         else
6754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
6755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           CLEAR_BIT(hadc->Instance->TR2, ADC_TR2_HT2 | ADC_TR2_LT2);
6756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           CLEAR_BIT(hadc->Instance->AWD2CR, ADC_AWD2CR_AWD2CH);
ARM GAS  /tmp/cc0XO8k8.s 			page 120


6757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
6758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                 
6759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set temporary variable to flag and IT of AWD2 or AWD3 for further  */
6760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* settings.                                                          */
6761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmpADCFlagAWD2orAWD3 = ADC_FLAG_AWD2;
6762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmpADCITAWD2orAWD3 = ADC_IT_AWD2;
6763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_3) */
6765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
6766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set the Analog watchdog channel or group of channels. This also    */
6768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* enables the watchdog.                                              */
6769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Note: Conditionnal register reset, because several channels can be */
6770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /*       set by successive calls of this function.                    */
6771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (AnalogWDGConfig->WatchdogMode != ADC_ANALOGWATCHDOG_NONE) 
6772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
6773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Set the high and low thresholds */
6774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           MODIFY_REG(hadc->Instance->TR3                                ,
6775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      ADC_TR3_HT3 |
6776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      ADC_TR3_LT3                                        ,
6777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      ADC_TRX_HIGHTHRESHOLD(tmpAWDHighThresholdShifted) |
6778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      tmpAWDLowThresholdShifted                           );
6779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
6780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->Instance->AWD3CR, ADC_CFGR_AWD23CR(AnalogWDGConfig->Channel));
6781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
6782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         else
6783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
6784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           CLEAR_BIT(hadc->Instance->TR3, ADC_TR3_HT3 | ADC_TR3_LT3);
6785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           CLEAR_BIT(hadc->Instance->AWD3CR, ADC_AWD3CR_AWD3CH);
6786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
6787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
6788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set temporary variable to flag and IT of AWD2 or AWD3 for further  */
6789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* settings.                                                          */
6790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmpADCFlagAWD2orAWD3 = ADC_FLAG_AWD3;
6791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmpADCITAWD2orAWD3 = ADC_IT_AWD3;
6792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear the ADC Analog watchdog flag (in case of left enabled by       */
6795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* previous ADC operations) to be ready to use for HAL_ADC_IRQHandler() */
6796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* or HAL_ADC_PollForEvent().                                           */
6797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, tmpADCFlagAWD2orAWD3);
6798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configure ADC Analog watchdog interrupt */
6800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if(AnalogWDGConfig->ITMode == ENABLE)
6801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_ADC_ENABLE_IT(hadc, tmpADCITAWD2orAWD3);
6803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
6805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_ADC_DISABLE_IT(hadc, tmpADCITAWD2orAWD3);
6807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* If a conversion is on going on regular or injected groups, no update     */
6812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* could be done on neither of the AWD configuration structure parameters.  */
6813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
ARM GAS  /tmp/cc0XO8k8.s 			page 121


6814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
6816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
6817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
6818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
6819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
6823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
6824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
6826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
6827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
6828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
6829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
6830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
6831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
6832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
6834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
6835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Configures the analog watchdog.
6836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Analog watchdog thresholds can be modified while ADC conversion
6837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         is on going.
6838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         In this case, some constraints must be taken into account:
6839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         the programmed threshold values are effective from the next
6840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         ADC EOC (end of unitary conversion).
6841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Considering that registers write delay may happen due to
6842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         bus activity, this might cause an uncertainty on the
6843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         effective timing of the new programmed threshold values.
6844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
6845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  AnalogWDGConfig Structure of ADC analog watchdog configuration
6846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
6847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
6848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef* hadc, ADC_AnalogWDGConfTypeDef* Analog
6849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
6850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
6851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
6852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
6853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
6854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_RANGE(AnalogWDGConfig->HighThreshold));
6855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_RANGE(AnalogWDGConfig->LowThreshold));
6856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if((AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REG)     ||
6858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
6859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REGINJEC)  )
6860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_CHANNEL(AnalogWDGConfig->Channel));
6862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
6865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
6866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Analog watchdog configuration */
6868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Configure ADC Analog watchdog interrupt */
6870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(AnalogWDGConfig->ITMode == ENABLE)
ARM GAS  /tmp/cc0XO8k8.s 			page 122


6871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable the ADC Analog watchdog interrupt */
6873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_AWD);
6874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
6876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable the ADC Analog watchdog interrupt */
6878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_AWD);
6879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Configuration of analog watchdog:                                        */
6882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Set the analog watchdog enable mode: regular and/or injected groups,  */
6883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    one or all channels.                                                  */
6884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Set the Analog watchdog channel (is not used if watchdog              */
6885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    mode "all channels": ADC_CFGR_AWD1SGL=0U).                             */
6886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   MODIFY_REG(hadc->Instance->CR1            ,
6887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****              ADC_CR1_AWDSGL |
6888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****              ADC_CR1_JAWDEN |
6889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****              ADC_CR1_AWDEN  |
6890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****              ADC_CR1_AWDCH                  ,
6891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****              AnalogWDGConfig->WatchdogMode |
6892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****              AnalogWDGConfig->Channel       );
6893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Set the high threshold */
6895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   WRITE_REG(hadc->Instance->HTR, AnalogWDGConfig->HighThreshold);
6896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Set the low threshold */
6898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   WRITE_REG(hadc->Instance->LTR, AnalogWDGConfig->LowThreshold);
6899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
6901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
6902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
6904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return HAL_OK;
6905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
6906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
6907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
6910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
6911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx)
6912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
6913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Enable ADC multimode and configure multimode parameters
6914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
6915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         This function initializes multimode parameters, following  
6916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         calls to this function can be used to reconfigure some parameters 
6917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         of structure "ADC_MultiModeTypeDef" on the fly, without reseting 
6918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         the ADCs (both ADCs of the common group).
6919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state.
6920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For parameters constraints, see comments of structure 
6921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         "ADC_MultiModeTypeDef".
6922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   To change back configuration from multimode to single mode, ADC must
6923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         be reset (using function HAL_ADC_Init() ).
6924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
6925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  multimode Structure of ADC multimode configuration
6926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
6927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
ARM GAS  /tmp/cc0XO8k8.s 			page 123


6928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeConfigChannel(ADC_HandleTypeDef* hadc, ADC_MultiModeTypeDef* m
6929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
6930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
6931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
6932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSharingSameCommonRegister;
6933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
6935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
6936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_MODE(multimode->Mode));
6937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(multimode->Mode != ADC_MODE_INDEPENDENT)
6938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_DMA_ACCESS_MODE(multimode->DMAAccessMode));
6940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_SAMPLING_DELAY(multimode->TwoSamplingDelay));
6941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Set handle of the other ADC sharing the same common register             */
6944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_COMMON_ADC_OTHER(hadc, &tmphadcSharingSameCommonRegister);
6945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmphadcSharingSameCommonRegister.Instance == NULL)
6946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Return function status */
6948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     return HAL_ERROR;
6949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
6952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
6953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
6955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
6956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conversion on going on regular group:                                    */
6957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Multimode DMA configuration                                           */
6958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Multimode DMA mode                                                    */
6959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if ( (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET) 
6960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     && (ADC_IS_CONVERSION_ONGOING_REGULAR(&tmphadcSharingSameCommonRegister) == RESET) )
6961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Pointer to the common control register to which is belonging hadc      */
6963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (Depending on STM32F3 product, there may have up to 4 ADC and 2 common */
6964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* control registers)                                                     */
6965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
6966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
6967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If multimode is selected, configure all multimode paramaters.          */
6968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Otherwise, reset multimode parameters (can be used in case of          */
6969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* transition from multimode to independent mode).                        */
6970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(multimode->Mode != ADC_MODE_INDEPENDENT)
6971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configuration of ADC common group ADC1&ADC2, ADC3&ADC4 if available    */
6973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* (ADC2, ADC3, ADC4 availability depends on STM32 product)               */
6974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - DMA access mode                                                     */
6975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(tmpADC_Common->CCR                                          ,
6976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CCR_MDMA  |
6977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CCR_DMACFG                                              ,
6978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  multimode->DMAAccessMode                                   |
6979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CCR_MULTI_DMACONTREQ(hadc->Init.DMAContinuousRequests)   );
6980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Parameters that can be updated only when ADC is disabled:              */
6982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - Multimode mode selection                                            */
6983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - Set delay between two sampling phases                               */
6984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*    Note: Delay range depends on selected resolution:                   */
ARM GAS  /tmp/cc0XO8k8.s 			page 124


6985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*      from 1 to 12 clock cycles for 12 bits                             */
6986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*      from 1 to 10 clock cycles for 10 bits,                            */
6987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*      from 1 to 8 clock cycles for 8 bits                               */
6988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*      from 1 to 6 clock cycles for 6 bits                               */
6989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*    If a higher delay is selected, it will be clamped to maximum delay  */
6990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*    range                                                               */
6991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Note: If ADC is not in the appropriate state to modify these           */
6992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       parameters, their setting is bypassed without error reporting    */
6993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       (as it can be the expected behaviour in case of intended action  */
6994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       to update parameter above (which fulfills the ADC state          */
6995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       condition: no conversion on going on group regular)              */
6996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       on the fly).                                                     */
6997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if ((ADC_IS_ENABLE(hadc) == RESET)                              &&
6998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )
6999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
7000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         MODIFY_REG(tmpADC_Common->CCR                                          ,
7001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_CCR_MULTI |
7002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_CCR_DELAY                                               ,
7003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    multimode->Mode                                            |
7004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    multimode->TwoSamplingDelay                                  );
7005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
7006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
7007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else /* ADC_MODE_INDEPENDENT */
7008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
7009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       CLEAR_BIT(tmpADC_Common->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG);
7010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
7011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Parameters that can be updated only when ADC is disabled:                */
7012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - Multimode mode selection                                              */
7013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - Multimode delay                                                       */
7014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if ((ADC_IS_ENABLE(hadc) == RESET)                              &&
7015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )
7016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
7017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(tmpADC_Common->CCR, ADC_CCR_MULTI | ADC_CCR_DELAY);
7018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
7019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
7020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
7021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* If one of the ADC sharing the same common group is enabled, no update    */
7022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* could be done on neither of the multimode structure parameters.          */
7023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
7024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
7025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
7026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
7027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
7028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
7029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
7030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
7031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
7032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
7033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
7034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
7035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
7036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
7037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** } 
7038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
7039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
7040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F328xx || STM32F334x8    */
7041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
ARM GAS  /tmp/cc0XO8k8.s 			page 125


7042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
7043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @}
7044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
7045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
7046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
7047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @}
7048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
7049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
7050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /** @defgroup ADCEx_Private_Functions ADCEx Private Functions
7051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @{
7052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
7053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
7054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  DMA transfer complete callback. 
7055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hdma pointer to DMA handle.
7056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
7057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
7058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)
7059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
7060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
7061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
7062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****  
7063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Update state machine on conversion status if not in error state */
7064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA))
7065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
7066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC state machine */
7067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
7068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
7069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Determine whether any further conversion upcoming on group regular     */
7070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* by external trigger, continuous mode or scan sequence on going.        */
7071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: On STM32F3 devices, in case of sequencer enabled                 */
7072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       (several ranks selected), end of conversion flag is raised       */
7073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       at the end of the sequence.                                      */
7074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(ADC_IS_SOFTWARE_START_REGULAR(hadc)        && 
7075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        (hadc->Init.ContinuousConvMode == DISABLE)   )
7076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
7077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state */
7078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
7079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
7080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
7081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
7082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
7083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
7084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
7085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
7086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Conversion complete callback */
7087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     HAL_ADC_ConvCpltCallback(hadc); 
7088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
7089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
7090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
7091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Call DMA error callback */
7092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     hadc->DMA_Handle->XferErrorCallback(hdma);
7093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
7094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
7095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
7096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
7097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  DMA half transfer complete callback. 
7098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hdma pointer to DMA handle.
ARM GAS  /tmp/cc0XO8k8.s 			page 126


7099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
7100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
7101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)   
7102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
7103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
7104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
7105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
7106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Half conversion callback */
7107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_ADC_ConvHalfCpltCallback(hadc); 
7108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
7109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
7110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
7111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  DMA error callback 
7112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hdma pointer to DMA handle.
7113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
7114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
7115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma)   
7116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
7117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
7118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
7119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
7120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Set ADC state */
7121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
7122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
7123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Set ADC error code to DMA error */
7124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_DMA);
7125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
7126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Error callback */
7127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_ADC_ErrorCallback(hadc); 
7128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
7129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
7130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
7131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
7132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
7133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
7134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
7135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Enable the selected ADC.
7136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Prerequisite condition to use this function: ADC must be disabled
7137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         and voltage regulator must be enabled (done into HAL_ADC_Init()).
7138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
7139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status.
7140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
7141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef* hadc)
7142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
7143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart = 0U;
7144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
7145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* ADC enable and wait for ADC ready (in case of ADC is disabled or         */
7146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* enabling phase not yet completed: flag ADC ready not yet set).           */
7147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Timeout implemented to not be stuck if ADC cannot be enabled (possible   */
7148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* causes: ADC clock not running, ...).                                     */
7149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_ENABLE(hadc) == RESET)
7150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
7151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if conditions to enable the ADC are fulfilled */
7152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (ADC_ENABLING_CONDITIONS(hadc) == RESET)
7153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
7154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
7155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
ARM GAS  /tmp/cc0XO8k8.s 			page 127


7156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
7157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC error code to ADC IP internal error */
7158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
7159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
7160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       return HAL_ERROR;
7161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
7162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
7163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable the ADC peripheral */
7164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_ENABLE(hadc);
7165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
7166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Wait for ADC effectively enabled */
7167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();  
7168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
7169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     while(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == RESET)
7170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
7171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((HAL_GetTick() - tickstart) > ADC_ENABLE_TIMEOUT)
7172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
7173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
7174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
7175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
7176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC error code to ADC IP internal error */
7177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
7178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
7179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_ERROR;
7180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
7181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
7182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
7183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
7184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return HAL status */
7185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return HAL_OK;
7186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
7187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
7188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
7189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Disable the selected ADC.
7190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Prerequisite condition to use this function: ADC conversions must be
7191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         stopped.
7192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
7193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status.
7194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
7195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static HAL_StatusTypeDef ADC_Disable(ADC_HandleTypeDef* hadc)
7196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
  29              		.loc 1 7196 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              	.LVL0:
  34 0000 38B5     		push	{r3, r4, r5, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 16
  37              		.cfi_offset 3, -16
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 14, -4
  41              	.LVL1:
7197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart = 0U;
7198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
7199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Verification if ADC is not already disabled:                             */
ARM GAS  /tmp/cc0XO8k8.s 			page 128


7200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Note: forbidden to disable ADC (set bit ADC_CR_ADDIS) if ADC is already  */
7201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* disabled.                                                                */
7202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_ENABLE(hadc) != RESET )
  42              		.loc 1 7202 0
  43 0002 0268     		ldr	r2, [r0]
  44 0004 9368     		ldr	r3, [r2, #8]
  45 0006 03F00303 		and	r3, r3, #3
  46 000a 012B     		cmp	r3, #1
  47 000c 05D1     		bne	.L7
  48              		.loc 1 7202 0 is_stmt 0 discriminator 1
  49 000e 1368     		ldr	r3, [r2]
  50 0010 13F0010F 		tst	r3, #1
  51 0014 03D1     		bne	.L8
  52              		.loc 1 7202 0
  53 0016 0023     		movs	r3, #0
  54 0018 02E0     		b	.L2
  55              	.L7:
  56 001a 0023     		movs	r3, #0
  57 001c 00E0     		b	.L2
  58              	.L8:
  59 001e 0123     		movs	r3, #1
  60              	.L2:
  61              		.loc 1 7202 0 discriminator 6
  62 0020 002B     		cmp	r3, #0
  63 0022 30D0     		beq	.L9
7203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
7204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if conditions to disable the ADC are fulfilled */
7205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (ADC_DISABLING_CONDITIONS(hadc) != RESET)
  64              		.loc 1 7205 0 is_stmt 1
  65 0024 9368     		ldr	r3, [r2, #8]
  66 0026 03F00D03 		and	r3, r3, #13
  67 002a 012B     		cmp	r3, #1
  68 002c 0BD1     		bne	.L4
  69 002e 0446     		mov	r4, r0
7206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
7207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Disable the ADC peripheral */
7208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_DISABLE(hadc);
  70              		.loc 1 7208 0
  71 0030 9368     		ldr	r3, [r2, #8]
  72 0032 43F00203 		orr	r3, r3, #2
  73 0036 9360     		str	r3, [r2, #8]
  74 0038 0368     		ldr	r3, [r0]
  75 003a 0322     		movs	r2, #3
  76 003c 1A60     		str	r2, [r3]
7209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
7210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
7211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
7212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
7213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
7214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
7215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC error code to ADC IP internal error */
7216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
7217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
7218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       return HAL_ERROR;
7219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
7220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      
7221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Wait for ADC effectively disabled */
ARM GAS  /tmp/cc0XO8k8.s 			page 129


7222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();
  77              		.loc 1 7222 0
  78 003e FFF7FEFF 		bl	HAL_GetTick
  79              	.LVL2:
  80 0042 0546     		mov	r5, r0
  81              	.LVL3:
7223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
7224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     while(HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_ADEN))
  82              		.loc 1 7224 0
  83 0044 18E0     		b	.L5
  84              	.LVL4:
  85              	.L4:
7213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
  86              		.loc 1 7213 0
  87 0046 436C     		ldr	r3, [r0, #68]
  88 0048 43F01003 		orr	r3, r3, #16
  89 004c 4364     		str	r3, [r0, #68]
7216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
  90              		.loc 1 7216 0
  91 004e 836C     		ldr	r3, [r0, #72]
  92 0050 43F00103 		orr	r3, r3, #1
  93 0054 8364     		str	r3, [r0, #72]
7218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
  94              		.loc 1 7218 0
  95 0056 0120     		movs	r0, #1
  96              	.LVL5:
  97 0058 38BD     		pop	{r3, r4, r5, pc}
  98              	.LVL6:
  99              	.L6:
7225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
7226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((HAL_GetTick() - tickstart) > ADC_DISABLE_TIMEOUT)
 100              		.loc 1 7226 0
 101 005a FFF7FEFF 		bl	HAL_GetTick
 102              	.LVL7:
 103 005e 401B     		subs	r0, r0, r5
 104 0060 0228     		cmp	r0, #2
 105 0062 09D9     		bls	.L5
7227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
7228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
7229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 106              		.loc 1 7229 0
 107 0064 636C     		ldr	r3, [r4, #68]
 108 0066 43F01003 		orr	r3, r3, #16
 109 006a 6364     		str	r3, [r4, #68]
7230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
7231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC error code to ADC IP internal error */
7232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 110              		.loc 1 7232 0
 111 006c A36C     		ldr	r3, [r4, #72]
 112 006e 43F00103 		orr	r3, r3, #1
 113 0072 A364     		str	r3, [r4, #72]
7233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
7234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_ERROR;
 114              		.loc 1 7234 0
 115 0074 0120     		movs	r0, #1
 116 0076 38BD     		pop	{r3, r4, r5, pc}
 117              	.LVL8:
ARM GAS  /tmp/cc0XO8k8.s 			page 130


 118              	.L5:
7224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 119              		.loc 1 7224 0
 120 0078 2368     		ldr	r3, [r4]
 121 007a 9B68     		ldr	r3, [r3, #8]
 122 007c 13F0010F 		tst	r3, #1
 123 0080 EBD1     		bne	.L6
7235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
7236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
7237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
7238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
7239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return HAL status */
7240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return HAL_OK;
 124              		.loc 1 7240 0
 125 0082 0020     		movs	r0, #0
 126 0084 38BD     		pop	{r3, r4, r5, pc}
 127              	.LVL9:
 128              	.L9:
 129 0086 0020     		movs	r0, #0
 130              	.LVL10:
7241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 131              		.loc 1 7241 0
 132 0088 38BD     		pop	{r3, r4, r5, pc}
 133              		.cfi_endproc
 134              	.LFE164:
 136 008a 00BF     		.section	.text.ADC_ConversionStop,"ax",%progbits
 137              		.align	2
 138              		.thumb
 139              		.thumb_func
 141              	ADC_ConversionStop:
 142              	.LFB165:
7242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
7243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
7244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
7245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion.
7246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc ADC handle
7247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  ConversionGroup ADC group regular and/or injected.
7248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
7249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_REGULAR_GROUP: ADC regular conversion type.
7250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_GROUP: ADC injected conversion type.
7251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_REGULAR_INJECTED_GROUP: ADC regular and injected conversion type.
7252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status.
7253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
7254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static HAL_StatusTypeDef ADC_ConversionStop(ADC_HandleTypeDef* hadc, uint32_t ConversionGroup)
7255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 143              		.loc 1 7255 0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              	.LVL11:
7256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_ADC_CR_ADSTART_JADSTART = 0U;
7257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart = 0U;
7258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t Conversion_Timeout_CPU_cycles = 0U;
7259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
7260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
7261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
7262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_CONVERSION_GROUP(ConversionGroup));
ARM GAS  /tmp/cc0XO8k8.s 			page 131


7263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
7264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Verification if ADC is not already stopped (on regular and injected      */
7265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* groups) to bypass this function if not needed.                           */
7266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc))
 148              		.loc 1 7266 0
 149 0000 0368     		ldr	r3, [r0]
 150 0002 9A68     		ldr	r2, [r3, #8]
 151 0004 12F00C0F 		tst	r2, #12
 152 0008 63D0     		beq	.L24
7255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_ADC_CR_ADSTART_JADSTART = 0U;
 153              		.loc 1 7255 0
 154 000a 70B5     		push	{r4, r5, r6, lr}
 155              	.LCFI1:
 156              		.cfi_def_cfa_offset 16
 157              		.cfi_offset 4, -16
 158              		.cfi_offset 5, -12
 159              		.cfi_offset 6, -8
 160              		.cfi_offset 14, -4
 161 000c 0446     		mov	r4, r0
7267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
7268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Particular case of continuous auto-injection mode combined with        */
7269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* auto-delay mode.                                                       */
7270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* In auto-injection mode, regular group stop ADC_CR_ADSTP is used (not   */
7271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* injected group stop ADC_CR_JADSTP).                                    */
7272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Procedure to be followed: Wait until JEOS=1U, clear JEOS, set ADSTP=1   */
7273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (see reference manual).                                                */
7274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if ((HAL_IS_BIT_SET(hadc->Instance->CFGR, ADC_CFGR_JAUTO)) &&
 162              		.loc 1 7274 0
 163 000e DA68     		ldr	r2, [r3, #12]
 164 0010 12F0007F 		tst	r2, #33554432
 165 0014 1DD0     		beq	.L13
7275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          (hadc->Init.ContinuousConvMode==ENABLE)               &&
 166              		.loc 1 7275 0 discriminator 1
 167 0016 C269     		ldr	r2, [r0, #28]
7274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          (hadc->Init.ContinuousConvMode==ENABLE)               &&
 168              		.loc 1 7274 0 discriminator 1
 169 0018 012A     		cmp	r2, #1
 170 001a 1AD1     		bne	.L13
7276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          (hadc->Init.LowPowerAutoWait==ENABLE)                   )
 171              		.loc 1 7276 0
 172 001c 8269     		ldr	r2, [r0, #24]
7275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          (hadc->Init.ContinuousConvMode==ENABLE)               &&
 173              		.loc 1 7275 0
 174 001e 012A     		cmp	r2, #1
 175 0020 17D1     		bne	.L13
 176 0022 0EE0     		b	.L25
 177              	.LVL12:
 178              	.L16:
7277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
7278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Use stop of regular group */
7279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ConversionGroup = ADC_REGULAR_GROUP;
7280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
7281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Wait until JEOS=1 (maximum Timeout: 4 injected conversions) */
7282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       while(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS) == RESET)
7283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
7284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (Conversion_Timeout_CPU_cycles >= (ADC_CONVERSION_TIME_MAX_CPU_CYCLES *4U))
 179              		.loc 1 7284 0
ARM GAS  /tmp/cc0XO8k8.s 			page 132


 180 0024 2C49     		ldr	r1, .L30
 181 0026 8A42     		cmp	r2, r1
 182 0028 09D9     		bls	.L15
7285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
7286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Update ADC state machine to error */
7287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 183              		.loc 1 7287 0
 184 002a 636C     		ldr	r3, [r4, #68]
 185 002c 43F01003 		orr	r3, r3, #16
 186 0030 6364     		str	r3, [r4, #68]
7288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
7289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Set ADC error code to ADC IP internal error */
7290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 187              		.loc 1 7290 0
 188 0032 A36C     		ldr	r3, [r4, #72]
 189 0034 43F00103 		orr	r3, r3, #1
 190 0038 A364     		str	r3, [r4, #72]
7291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
7292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           return HAL_ERROR;
 191              		.loc 1 7292 0
 192 003a 0120     		movs	r0, #1
 193              	.LVL13:
 194 003c 70BD     		pop	{r4, r5, r6, pc}
 195              	.LVL14:
 196              	.L15:
7293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
7294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         Conversion_Timeout_CPU_cycles ++;
 197              		.loc 1 7294 0
 198 003e 0132     		adds	r2, r2, #1
 199              	.LVL15:
 200 0040 00E0     		b	.L14
 201              	.LVL16:
 202              	.L25:
 203 0042 0022     		movs	r2, #0
 204              	.LVL17:
 205              	.L14:
7282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 206              		.loc 1 7282 0
 207 0044 1968     		ldr	r1, [r3]
 208 0046 11F0400F 		tst	r1, #64
 209 004a EBD0     		beq	.L16
7295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
7296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
7297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear JEOS */
7298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOS);
 210              		.loc 1 7298 0
 211 004c 4022     		movs	r2, #64
 212              	.LVL18:
 213 004e 1A60     		str	r2, [r3]
7279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 214              		.loc 1 7279 0
 215 0050 0C21     		movs	r1, #12
 216              	.L13:
 217              	.LVL19:
7299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
7300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
7301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Stop potential conversion on going on regular group */
ARM GAS  /tmp/cc0XO8k8.s 			page 133


7302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (ConversionGroup != ADC_INJECTED_GROUP)
 218              		.loc 1 7302 0
 219 0052 6029     		cmp	r1, #96
 220 0054 0CD0     		beq	.L17
7303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
7304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Software is allowed to set ADSTP only when ADSTART=1 and ADDIS=0U */
7305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_ADSTART) && 
 221              		.loc 1 7305 0
 222 0056 2368     		ldr	r3, [r4]
 223 0058 9A68     		ldr	r2, [r3, #8]
 224 005a 12F0040F 		tst	r2, #4
 225 005e 07D0     		beq	.L17
7306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADDIS)     )
 226              		.loc 1 7306 0 discriminator 1
 227 0060 9A68     		ldr	r2, [r3, #8]
7305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADDIS)     )
 228              		.loc 1 7305 0 discriminator 1
 229 0062 12F0020F 		tst	r2, #2
 230 0066 03D1     		bne	.L17
7307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
7308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Stop conversions on regular group */
7309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         hadc->Instance->CR |= ADC_CR_ADSTP;
 231              		.loc 1 7309 0
 232 0068 9A68     		ldr	r2, [r3, #8]
 233 006a 42F01002 		orr	r2, r2, #16
 234 006e 9A60     		str	r2, [r3, #8]
 235              	.L17:
7310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
7311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
7312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
7313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Stop potential conversion on going on injected group */
7314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (ConversionGroup != ADC_REGULAR_GROUP)
 236              		.loc 1 7314 0
 237 0070 0C29     		cmp	r1, #12
 238 0072 0CD0     		beq	.L18
7315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
7316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Software is allowed to set JADSTP only when JADSTART=1 and ADDIS=0U */
7317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_JADSTART) && 
 239              		.loc 1 7317 0
 240 0074 2368     		ldr	r3, [r4]
 241 0076 9A68     		ldr	r2, [r3, #8]
 242 0078 12F0080F 		tst	r2, #8
 243 007c 07D0     		beq	.L18
7318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADDIS)      )
 244              		.loc 1 7318 0 discriminator 1
 245 007e 9A68     		ldr	r2, [r3, #8]
7317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADDIS)      )
 246              		.loc 1 7317 0 discriminator 1
 247 0080 12F0020F 		tst	r2, #2
 248 0084 03D1     		bne	.L18
7319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
7320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Stop conversions on injected group */
7321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         hadc->Instance->CR |= ADC_CR_JADSTP;
 249              		.loc 1 7321 0
 250 0086 9A68     		ldr	r2, [r3, #8]
 251 0088 42F02002 		orr	r2, r2, #32
 252 008c 9A60     		str	r2, [r3, #8]
ARM GAS  /tmp/cc0XO8k8.s 			page 134


 253              	.L18:
7322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
7323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
7324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
7325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Selection of start and stop bits in function of regular or injected group */
7326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     switch(ConversionGroup)
 254              		.loc 1 7326 0
 255 008e 6029     		cmp	r1, #96
 256 0090 05D0     		beq	.L26
 257 0092 6C29     		cmp	r1, #108
 258 0094 01D1     		bne	.L27
7327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
7328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_REGULAR_INJECTED_GROUP:
7329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_ADC_CR_ADSTART_JADSTART = (ADC_CR_ADSTART | ADC_CR_JADSTART);
 259              		.loc 1 7329 0
 260 0096 0C25     		movs	r5, #12
 261 0098 02E0     		b	.L20
 262              	.L27:
 263              	.LVL20:
7330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         break;
7331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_INJECTED_GROUP:
7332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_ADC_CR_ADSTART_JADSTART = ADC_CR_JADSTART;
7333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         break;
7334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Case ADC_REGULAR_GROUP */
7335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     default:
7336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_ADC_CR_ADSTART_JADSTART = ADC_CR_ADSTART;
 264              		.loc 1 7336 0
 265 009a 0425     		movs	r5, #4
7337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         break;
 266              		.loc 1 7337 0
 267 009c 00E0     		b	.L20
 268              	.LVL21:
 269              	.L26:
7332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         break;
 270              		.loc 1 7332 0
 271 009e 0825     		movs	r5, #8
 272              	.LVL22:
 273              	.L20:
7338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
7339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
7340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Wait for conversion effectively stopped */
7341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();
 274              		.loc 1 7341 0
 275 00a0 FFF7FEFF 		bl	HAL_GetTick
 276              	.LVL23:
 277 00a4 0646     		mov	r6, r0
 278              	.LVL24:
7342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
7343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     while((hadc->Instance->CR & tmp_ADC_CR_ADSTART_JADSTART) != RESET)
 279              		.loc 1 7343 0
 280 00a6 0EE0     		b	.L22
 281              	.LVL25:
 282              	.L23:
7344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
7345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
 283              		.loc 1 7345 0
 284 00a8 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/cc0XO8k8.s 			page 135


 285              	.LVL26:
 286 00ac 801B     		subs	r0, r0, r6
 287 00ae 0B28     		cmp	r0, #11
 288 00b0 09D9     		bls	.L22
7346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
7347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
7348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 289              		.loc 1 7348 0
 290 00b2 636C     		ldr	r3, [r4, #68]
 291 00b4 43F01003 		orr	r3, r3, #16
 292 00b8 6364     		str	r3, [r4, #68]
7349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
7350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC error code to ADC IP internal error */
7351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 293              		.loc 1 7351 0
 294 00ba A36C     		ldr	r3, [r4, #72]
 295 00bc 43F00103 		orr	r3, r3, #1
 296 00c0 A364     		str	r3, [r4, #72]
7352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
7353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_ERROR;
 297              		.loc 1 7353 0
 298 00c2 0120     		movs	r0, #1
 299 00c4 70BD     		pop	{r4, r5, r6, pc}
 300              	.LVL27:
 301              	.L22:
7343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 302              		.loc 1 7343 0
 303 00c6 2368     		ldr	r3, [r4]
 304 00c8 9B68     		ldr	r3, [r3, #8]
 305 00ca 1D42     		tst	r5, r3
 306 00cc ECD1     		bne	.L23
7354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
7355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
7356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
7357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
7358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****    
7359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return HAL status */
7360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return HAL_OK;
 307              		.loc 1 7360 0
 308 00ce 0020     		movs	r0, #0
 309 00d0 70BD     		pop	{r4, r5, r6, pc}
 310              	.LVL28:
 311              	.L24:
 312              	.LCFI2:
 313              		.cfi_def_cfa_offset 0
 314              		.cfi_restore 4
 315              		.cfi_restore 5
 316              		.cfi_restore 6
 317              		.cfi_restore 14
 318 00d2 0020     		movs	r0, #0
 319              	.LVL29:
 320 00d4 7047     		bx	lr
 321              	.L31:
 322 00d6 00BF     		.align	2
 323              	.L30:
 324 00d8 FF930900 		.word	627711
 325              		.cfi_endproc
ARM GAS  /tmp/cc0XO8k8.s 			page 136


 326              	.LFE165:
 328              		.section	.text.ADC_Enable,"ax",%progbits
 329              		.align	2
 330              		.thumb
 331              		.thumb_func
 333              	ADC_Enable:
 334              	.LFB163:
7142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart = 0U;
 335              		.loc 1 7142 0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
 339              	.LVL30:
 340 0000 38B5     		push	{r3, r4, r5, lr}
 341              	.LCFI3:
 342              		.cfi_def_cfa_offset 16
 343              		.cfi_offset 3, -16
 344              		.cfi_offset 4, -12
 345              		.cfi_offset 5, -8
 346              		.cfi_offset 14, -4
 347              	.LVL31:
7149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 348              		.loc 1 7149 0
 349 0002 0268     		ldr	r2, [r0]
 350 0004 9368     		ldr	r3, [r2, #8]
 351 0006 03F00303 		and	r3, r3, #3
 352 000a 012B     		cmp	r3, #1
 353 000c 05D1     		bne	.L38
7149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 354              		.loc 1 7149 0 is_stmt 0 discriminator 1
 355 000e 1368     		ldr	r3, [r2]
 356 0010 13F0010F 		tst	r3, #1
 357 0014 03D1     		bne	.L39
7149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 358              		.loc 1 7149 0
 359 0016 0023     		movs	r3, #0
 360 0018 02E0     		b	.L33
 361              	.L38:
 362 001a 0023     		movs	r3, #0
 363 001c 00E0     		b	.L33
 364              	.L39:
 365 001e 0123     		movs	r3, #1
 366              	.L33:
7149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 367              		.loc 1 7149 0 discriminator 6
 368 0020 63BB     		cbnz	r3, .L40
7152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 369              		.loc 1 7152 0 is_stmt 1
 370 0022 9168     		ldr	r1, [r2, #8]
 371 0024 164B     		ldr	r3, .L42
 372 0026 1942     		tst	r1, r3
 373 0028 09D0     		beq	.L35
7155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 374              		.loc 1 7155 0
 375 002a 436C     		ldr	r3, [r0, #68]
 376 002c 43F01003 		orr	r3, r3, #16
 377 0030 4364     		str	r3, [r0, #68]
ARM GAS  /tmp/cc0XO8k8.s 			page 137


7158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 378              		.loc 1 7158 0
 379 0032 836C     		ldr	r3, [r0, #72]
 380 0034 43F00103 		orr	r3, r3, #1
 381 0038 8364     		str	r3, [r0, #72]
7160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 382              		.loc 1 7160 0
 383 003a 0120     		movs	r0, #1
 384              	.LVL32:
 385 003c 38BD     		pop	{r3, r4, r5, pc}
 386              	.LVL33:
 387              	.L35:
 388 003e 0446     		mov	r4, r0
7164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 389              		.loc 1 7164 0
 390 0040 9368     		ldr	r3, [r2, #8]
 391 0042 43F00103 		orr	r3, r3, #1
 392 0046 9360     		str	r3, [r2, #8]
7167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 393              		.loc 1 7167 0
 394 0048 FFF7FEFF 		bl	HAL_GetTick
 395              	.LVL34:
 396 004c 0546     		mov	r5, r0
 397              	.LVL35:
7169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 398              		.loc 1 7169 0
 399 004e 0EE0     		b	.L36
 400              	.LVL36:
 401              	.L37:
7171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 402              		.loc 1 7171 0
 403 0050 FFF7FEFF 		bl	HAL_GetTick
 404              	.LVL37:
 405 0054 401B     		subs	r0, r0, r5
 406 0056 0228     		cmp	r0, #2
 407 0058 09D9     		bls	.L36
7174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 408              		.loc 1 7174 0
 409 005a 636C     		ldr	r3, [r4, #68]
 410 005c 43F01003 		orr	r3, r3, #16
 411 0060 6364     		str	r3, [r4, #68]
7177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 412              		.loc 1 7177 0
 413 0062 A36C     		ldr	r3, [r4, #72]
 414 0064 43F00103 		orr	r3, r3, #1
 415 0068 A364     		str	r3, [r4, #72]
7179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 416              		.loc 1 7179 0
 417 006a 0120     		movs	r0, #1
 418 006c 38BD     		pop	{r3, r4, r5, pc}
 419              	.LVL38:
 420              	.L36:
7169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 421              		.loc 1 7169 0
 422 006e 2368     		ldr	r3, [r4]
 423 0070 1B68     		ldr	r3, [r3]
 424 0072 13F0010F 		tst	r3, #1
ARM GAS  /tmp/cc0XO8k8.s 			page 138


 425 0076 EBD0     		beq	.L37
7185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 426              		.loc 1 7185 0
 427 0078 0020     		movs	r0, #0
 428 007a 38BD     		pop	{r3, r4, r5, pc}
 429              	.LVL39:
 430              	.L40:
 431 007c 0020     		movs	r0, #0
 432              	.LVL40:
7186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 433              		.loc 1 7186 0
 434 007e 38BD     		pop	{r3, r4, r5, pc}
 435              	.L43:
 436              		.align	2
 437              	.L42:
 438 0080 3F000080 		.word	-2147483585
 439              		.cfi_endproc
 440              	.LFE163:
 442              		.section	.text.ADC_DMAError,"ax",%progbits
 443              		.align	2
 444              		.thumb
 445              		.thumb_func
 447              	ADC_DMAError:
 448              	.LFB162:
7116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 449              		.loc 1 7116 0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 0
 452              		@ frame_needed = 0, uses_anonymous_args = 0
 453              	.LVL41:
 454 0000 08B5     		push	{r3, lr}
 455              	.LCFI4:
 456              		.cfi_def_cfa_offset 8
 457              		.cfi_offset 3, -8
 458              		.cfi_offset 14, -4
7118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 459              		.loc 1 7118 0
 460 0002 406A     		ldr	r0, [r0, #36]
 461              	.LVL42:
7121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 462              		.loc 1 7121 0
 463 0004 436C     		ldr	r3, [r0, #68]
 464 0006 43F04003 		orr	r3, r3, #64
 465 000a 4364     		str	r3, [r0, #68]
7124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 466              		.loc 1 7124 0
 467 000c 836C     		ldr	r3, [r0, #72]
 468 000e 43F00403 		orr	r3, r3, #4
 469 0012 8364     		str	r3, [r0, #72]
7127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 470              		.loc 1 7127 0
 471 0014 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 472              	.LVL43:
 473 0018 08BD     		pop	{r3, pc}
 474              		.cfi_endproc
 475              	.LFE162:
 477 001a 00BF     		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
ARM GAS  /tmp/cc0XO8k8.s 			page 139


 478              		.align	2
 479              		.thumb
 480              		.thumb_func
 482              	ADC_DMAHalfConvCplt:
 483              	.LFB161:
7102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 484              		.loc 1 7102 0
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 0
 487              		@ frame_needed = 0, uses_anonymous_args = 0
 488              	.LVL44:
 489 0000 08B5     		push	{r3, lr}
 490              	.LCFI5:
 491              		.cfi_def_cfa_offset 8
 492              		.cfi_offset 3, -8
 493              		.cfi_offset 14, -4
 494              	.LVL45:
7107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 495              		.loc 1 7107 0
 496 0002 406A     		ldr	r0, [r0, #36]
 497              	.LVL46:
 498 0004 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
 499              	.LVL47:
 500 0008 08BD     		pop	{r3, pc}
 501              		.cfi_endproc
 502              	.LFE161:
 504 000a 00BF     		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 505              		.align	2
 506              		.thumb
 507              		.thumb_func
 509              	ADC_DMAConvCplt:
 510              	.LFB160:
7059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 511              		.loc 1 7059 0
 512              		.cfi_startproc
 513              		@ args = 0, pretend = 0, frame = 0
 514              		@ frame_needed = 0, uses_anonymous_args = 0
 515              	.LVL48:
 516 0000 08B5     		push	{r3, lr}
 517              	.LCFI6:
 518              		.cfi_def_cfa_offset 8
 519              		.cfi_offset 3, -8
 520              		.cfi_offset 14, -4
7061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****  
 521              		.loc 1 7061 0
 522 0002 436A     		ldr	r3, [r0, #36]
 523              	.LVL49:
7064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 524              		.loc 1 7064 0
 525 0004 5A6C     		ldr	r2, [r3, #68]
 526 0006 12F0500F 		tst	r2, #80
 527 000a 1AD1     		bne	.L49
7067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 528              		.loc 1 7067 0
 529 000c 5A6C     		ldr	r2, [r3, #68]
 530 000e 42F40072 		orr	r2, r2, #512
 531 0012 5A64     		str	r2, [r3, #68]
ARM GAS  /tmp/cc0XO8k8.s 			page 140


7074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        (hadc->Init.ContinuousConvMode == DISABLE)   )
 532              		.loc 1 7074 0
 533 0014 1A68     		ldr	r2, [r3]
 534 0016 D268     		ldr	r2, [r2, #12]
 535 0018 12F4406F 		tst	r2, #3072
 536 001c 0DD1     		bne	.L50
7075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 537              		.loc 1 7075 0 discriminator 1
 538 001e DA69     		ldr	r2, [r3, #28]
7074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        (hadc->Init.ContinuousConvMode == DISABLE)   )
 539              		.loc 1 7074 0 discriminator 1
 540 0020 5AB9     		cbnz	r2, .L50
7078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 541              		.loc 1 7078 0
 542 0022 5A6C     		ldr	r2, [r3, #68]
 543 0024 22F48072 		bic	r2, r2, #256
 544 0028 5A64     		str	r2, [r3, #68]
7080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 545              		.loc 1 7080 0
 546 002a 5A6C     		ldr	r2, [r3, #68]
 547 002c 12F4805F 		tst	r2, #4096
 548 0030 03D1     		bne	.L50
7082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 549              		.loc 1 7082 0
 550 0032 5A6C     		ldr	r2, [r3, #68]
 551 0034 42F00102 		orr	r2, r2, #1
 552 0038 5A64     		str	r2, [r3, #68]
 553              	.L50:
7087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 554              		.loc 1 7087 0
 555 003a 1846     		mov	r0, r3
 556              	.LVL50:
 557 003c FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 558              	.LVL51:
 559 0040 08BD     		pop	{r3, pc}
 560              	.LVL52:
 561              	.L49:
7092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 562              		.loc 1 7092 0
 563 0042 DB6B     		ldr	r3, [r3, #60]
 564              	.LVL53:
 565 0044 1B6B     		ldr	r3, [r3, #48]
 566 0046 9847     		blx	r3
 567              	.LVL54:
 568 0048 08BD     		pop	{r3, pc}
 569              		.cfi_endproc
 570              	.LFE160:
 572 004a 00BF     		.section	.text.HAL_ADC_Init,"ax",%progbits
 573              		.align	2
 574              		.global	HAL_ADC_Init
 575              		.thumb
 576              		.thumb_func
 578              	HAL_ADC_Init:
 579              	.LFB124:
 251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 580              		.loc 1 251 0
 581              		.cfi_startproc
ARM GAS  /tmp/cc0XO8k8.s 			page 141


 582              		@ args = 0, pretend = 0, frame = 88
 583              		@ frame_needed = 0, uses_anonymous_args = 0
 584              	.LVL55:
 585 0000 70B5     		push	{r4, r5, r6, lr}
 586              	.LCFI7:
 587              		.cfi_def_cfa_offset 16
 588              		.cfi_offset 4, -16
 589              		.cfi_offset 5, -12
 590              		.cfi_offset 6, -8
 591              		.cfi_offset 14, -4
 592 0002 96B0     		sub	sp, sp, #88
 593              	.LCFI8:
 594              		.cfi_def_cfa_offset 104
 595              	.LVL56:
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 596              		.loc 1 256 0
 597 0004 0023     		movs	r3, #0
 598 0006 0093     		str	r3, [sp]
 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 599              		.loc 1 259 0
 600 0008 0028     		cmp	r0, #0
 601 000a 00F03181 		beq	.L81
 602 000e 0446     		mov	r4, r0
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 603              		.loc 1 289 0
 604 0010 436C     		ldr	r3, [r0, #68]
 605 0012 13F0100F 		tst	r3, #16
 606 0016 52D1     		bne	.L82
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 607              		.loc 1 299 0
 608 0018 436C     		ldr	r3, [r0, #68]
 609 001a 002B     		cmp	r3, #0
 610 001c 37D1     		bne	.L83
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 611              		.loc 1 302 0
 612 001e 8364     		str	r3, [r0, #72]
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       hadc->InjectionConfig.ContextQueue = 0U;
 613              		.loc 1 305 0
 614 0020 0365     		str	r3, [r0, #80]
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 615              		.loc 1 306 0
 616 0022 C364     		str	r3, [r0, #76]
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 617              		.loc 1 309 0
 618 0024 80F84030 		strb	r3, [r0, #64]
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 619              		.loc 1 312 0
 620 0028 FFF7FEFF 		bl	HAL_ADC_MspInit
 621              	.LVL57:
 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 622              		.loc 1 315 0
 623 002c 2368     		ldr	r3, [r4]
 624 002e 9B68     		ldr	r3, [r3, #8]
 625 0030 13F0805F 		tst	r3, #268435456
 626 0034 2DD1     		bne	.L84
 324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 627              		.loc 1 324 0
ARM GAS  /tmp/cc0XO8k8.s 			page 142


 628 0036 2046     		mov	r0, r4
 629 0038 FFF7FEFF 		bl	ADC_Disable
 630              	.LVL58:
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             (tmp_hal_status == HAL_OK)                                  )
 631              		.loc 1 329 0
 632 003c 636C     		ldr	r3, [r4, #68]
 633 003e 13F0100F 		tst	r3, #16
 634 0042 27D1     		bne	.L56
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             (tmp_hal_status == HAL_OK)                                  )
 635              		.loc 1 329 0 is_stmt 0 discriminator 1
 636 0044 30BB     		cbnz	r0, .L56
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                             HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 637              		.loc 1 333 0 is_stmt 1
 638 0046 636C     		ldr	r3, [r4, #68]
 639 0048 23F48853 		bic	r3, r3, #4352
 640 004c 23F00203 		bic	r3, r3, #2
 641 0050 43F00203 		orr	r3, r3, #2
 642 0054 6364     		str	r3, [r4, #68]
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Set ADVREGEN bits to 0x01U */
 643              		.loc 1 339 0
 644 0056 2268     		ldr	r2, [r4]
 645 0058 9368     		ldr	r3, [r2, #8]
 646 005a 23F04053 		bic	r3, r3, #805306368
 647 005e 9360     		str	r3, [r2, #8]
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
 648              		.loc 1 341 0
 649 0060 2268     		ldr	r2, [r4]
 650 0062 9368     		ldr	r3, [r2, #8]
 651 0064 43F08053 		orr	r3, r3, #268435456
 652 0068 9360     		str	r3, [r2, #8]
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           while(wait_loop_index != 0U)
 653              		.loc 1 345 0
 654 006a 834B     		ldr	r3, .L93
 655 006c 1B68     		ldr	r3, [r3]
 656 006e 834A     		ldr	r2, .L93+4
 657 0070 A2FB0323 		umull	r2, r3, r2, r3
 658 0074 9B0C     		lsrs	r3, r3, #18
 659 0076 03EB8303 		add	r3, r3, r3, lsl #2
 660 007a 5A00     		lsls	r2, r3, #1
 661 007c 0092     		str	r2, [sp]
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
 662              		.loc 1 346 0
 663 007e 02E0     		b	.L57
 664              	.L58:
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           }
 665              		.loc 1 348 0
 666 0080 009B     		ldr	r3, [sp]
 667 0082 013B     		subs	r3, r3, #1
 668 0084 0093     		str	r3, [sp]
 669              	.L57:
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
 670              		.loc 1 346 0
 671 0086 009B     		ldr	r3, [sp]
 672 0088 002B     		cmp	r3, #0
 673 008a F9D1     		bne	.L58
 674 008c 02E0     		b	.L56
 675              	.LVL59:
ARM GAS  /tmp/cc0XO8k8.s 			page 143


 676              	.L83:
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 677              		.loc 1 252 0
 678 008e 0020     		movs	r0, #0
 679              	.LVL60:
 680 0090 00E0     		b	.L56
 681              	.L84:
 682 0092 0020     		movs	r0, #0
 683              	.LVL61:
 684              	.L56:
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_ADVREGEN_1)   )
 685              		.loc 1 357 0
 686 0094 2368     		ldr	r3, [r4]
 687 0096 9A68     		ldr	r2, [r3, #8]
 688 0098 12F0805F 		tst	r2, #268435456
 689 009c 03D0     		beq	.L59
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 690              		.loc 1 358 0 discriminator 1
 691 009e 9B68     		ldr	r3, [r3, #8]
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_ADVREGEN_1)   )
 692              		.loc 1 357 0 discriminator 1
 693 00a0 13F0005F 		tst	r3, #536870912
 694 00a4 0CD0     		beq	.L55
 695              	.L59:
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 696              		.loc 1 361 0
 697 00a6 636C     		ldr	r3, [r4, #68]
 698 00a8 23F01203 		bic	r3, r3, #18
 699 00ac 43F01003 		orr	r3, r3, #16
 700 00b0 6364     		str	r3, [r4, #68]
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 701              		.loc 1 366 0
 702 00b2 A36C     		ldr	r3, [r4, #72]
 703 00b4 43F00103 		orr	r3, r3, #1
 704 00b8 A364     		str	r3, [r4, #72]
 705              	.LVL62:
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 706              		.loc 1 368 0
 707 00ba 0120     		movs	r0, #1
 708 00bc 00E0     		b	.L55
 709              	.LVL63:
 710              	.L82:
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 711              		.loc 1 252 0
 712 00be 0020     		movs	r0, #0
 713              	.LVL64:
 714              	.L55:
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (tmp_hal_status == HAL_OK)                                &&
 715              		.loc 1 377 0
 716 00c0 636C     		ldr	r3, [r4, #68]
 717 00c2 13F0100F 		tst	r3, #16
 718 00c6 40F0CB80 		bne	.L60
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (tmp_hal_status == HAL_OK)                                &&
 719              		.loc 1 377 0 is_stmt 0 discriminator 1
 720 00ca 0028     		cmp	r0, #0
 721 00cc 40F0C880 		bne	.L60
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
ARM GAS  /tmp/cc0XO8k8.s 			page 144


 722              		.loc 1 379 0 is_stmt 1
 723 00d0 2368     		ldr	r3, [r4]
 724 00d2 9A68     		ldr	r2, [r3, #8]
 378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)          )
 725              		.loc 1 378 0
 726 00d4 12F00401 		ands	r1, r2, #4
 727 00d8 40F0C280 		bne	.L60
 382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY,
 728              		.loc 1 382 0
 729 00dc 626C     		ldr	r2, [r4, #68]
 730 00de 22F48172 		bic	r2, r2, #258
 731 00e2 42F00202 		orr	r2, r2, #2
 732 00e6 6264     		str	r2, [r4, #68]
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 733              		.loc 1 391 0
 734 00e8 B3F1A04F 		cmp	r3, #1342177280
 735 00ec 04D0     		beq	.L85
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 736              		.loc 1 391 0 is_stmt 0 discriminator 2
 737 00ee 644A     		ldr	r2, .L93+8
 738 00f0 9342     		cmp	r3, r2
 739 00f2 03D1     		bne	.L86
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 740              		.loc 1 391 0
 741 00f4 634D     		ldr	r5, .L93+12
 742 00f6 02E0     		b	.L61
 743              	.L85:
 744 00f8 624D     		ldr	r5, .L93+12
 745 00fa 00E0     		b	.L61
 746              	.L86:
 747 00fc 624D     		ldr	r5, .L93+16
 748              	.L61:
 749              	.LVL65:
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 750              		.loc 1 394 0 is_stmt 1 discriminator 6
 751 00fe B3F1A04F 		cmp	r3, #1342177280
 752 0102 03D1     		bne	.L62
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 753              		.loc 1 394 0 is_stmt 0 discriminator 1
 754 0104 03F58073 		add	r3, r3, #256
 755 0108 0193     		str	r3, [sp, #4]
 756 010a 14E0     		b	.L63
 757              	.L62:
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 758              		.loc 1 394 0 discriminator 2
 759 010c 5C4A     		ldr	r2, .L93+8
 760 010e 9342     		cmp	r3, r2
 761 0110 03D1     		bne	.L64
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 762              		.loc 1 394 0 discriminator 3
 763 0112 4FF0A043 		mov	r3, #1342177280
 764 0116 0193     		str	r3, [sp, #4]
 765 0118 0DE0     		b	.L63
 766              	.L64:
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 767              		.loc 1 394 0 discriminator 4
 768 011a 5C4A     		ldr	r2, .L93+20
ARM GAS  /tmp/cc0XO8k8.s 			page 145


 769 011c 9342     		cmp	r3, r2
 770 011e 02D1     		bne	.L66
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 771              		.loc 1 394 0 discriminator 6
 772 0120 5B4B     		ldr	r3, .L93+24
 773 0122 0193     		str	r3, [sp, #4]
 774 0124 07E0     		b	.L63
 775              	.L66:
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 776              		.loc 1 394 0 discriminator 7
 777 0126 5A4A     		ldr	r2, .L93+24
 778 0128 9342     		cmp	r3, r2
 779 012a 02D1     		bne	.L67
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 780              		.loc 1 394 0 discriminator 9
 781 012c 574B     		ldr	r3, .L93+20
 782 012e 0193     		str	r3, [sp, #4]
 783 0130 01E0     		b	.L63
 784              	.L67:
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 785              		.loc 1 394 0 discriminator 10
 786 0132 0023     		movs	r3, #0
 787 0134 0193     		str	r3, [sp, #4]
 788              	.L63:
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ((tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 789              		.loc 1 400 0 is_stmt 1
 790 0136 2268     		ldr	r2, [r4]
 791 0138 9368     		ldr	r3, [r2, #8]
 792 013a 03F00303 		and	r3, r3, #3
 793 013e 012B     		cmp	r3, #1
 794 0140 05D1     		bne	.L87
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ((tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 795              		.loc 1 400 0 is_stmt 0 discriminator 1
 796 0142 1368     		ldr	r3, [r2]
 797 0144 13F0010F 		tst	r3, #1
 798 0148 03D1     		bne	.L88
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ((tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 799              		.loc 1 400 0
 800 014a 0023     		movs	r3, #0
 801 014c 02E0     		b	.L68
 802              	.L87:
 803 014e 0023     		movs	r3, #0
 804 0150 00E0     		b	.L68
 805              	.L88:
 806 0152 0123     		movs	r3, #1
 807              	.L68:
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ((tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 808              		.loc 1 400 0 discriminator 6
 809 0154 93B9     		cbnz	r3, .L69
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )   )
 810              		.loc 1 401 0 is_stmt 1 discriminator 7
 811 0156 019E     		ldr	r6, [sp, #4]
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ((tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 812              		.loc 1 400 0 discriminator 7
 813 0158 56B1     		cbz	r6, .L70
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 814              		.loc 1 402 0
ARM GAS  /tmp/cc0XO8k8.s 			page 146


 815 015a B268     		ldr	r2, [r6, #8]
 816 015c 02F00302 		and	r2, r2, #3
 817 0160 012A     		cmp	r2, #1
 818 0162 04D1     		bne	.L71
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 819              		.loc 1 402 0 is_stmt 0 discriminator 1
 820 0164 3268     		ldr	r2, [r6]
 821 0166 12F0010F 		tst	r2, #1
 822 016a 00D0     		beq	.L71
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 823              		.loc 1 402 0
 824 016c 0123     		movs	r3, #1
 825              	.L71:
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )   )
 826              		.loc 1 401 0 is_stmt 1
 827 016e 2BB9     		cbnz	r3, .L69
 828              	.L70:
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CCR_CKMODE           ,
 829              		.loc 1 417 0
 830 0170 AB68     		ldr	r3, [r5, #8]
 831 0172 23F44032 		bic	r2, r3, #196608
 832 0176 6368     		ldr	r3, [r4, #4]
 833 0178 1343     		orrs	r3, r3, r2
 834 017a AB60     		str	r3, [r5, #8]
 835              	.L69:
 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      ADC_CFGR_OVERRUN(hadc->Init.Overrun)               |
 836              		.loc 1 431 0
 837 017c E569     		ldr	r5, [r4, #28]
 838              	.LVL66:
 839 017e 6B03     		lsls	r3, r5, #13
 840 0180 A26B     		ldr	r2, [r4, #56]
 841 0182 012A     		cmp	r2, #1
 842 0184 01D0     		beq	.L72
 843 0186 4FF48051 		mov	r1, #4096
 844              	.L72:
 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      ADC_CFGR_OVERRUN(hadc->Init.Overrun)               |
 845              		.loc 1 431 0 is_stmt 0 discriminator 4
 846 018a 41EA0302 		orr	r2, r1, r3
 847 018e E368     		ldr	r3, [r4, #12]
 848 0190 1343     		orrs	r3, r3, r2
 849 0192 A268     		ldr	r2, [r4, #8]
 850 0194 1A43     		orrs	r2, r2, r3
 851              	.LVL67:
 437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 852              		.loc 1 437 0 is_stmt 1 discriminator 4
 853 0196 636A     		ldr	r3, [r4, #36]
 854 0198 012B     		cmp	r3, #1
 855 019a 11D1     		bne	.L73
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 856              		.loc 1 439 0
 857 019c 35B9     		cbnz	r5, .L74
 443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                          ADC_CFGR_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion)  );
 858              		.loc 1 443 0
 859 019e A36A     		ldr	r3, [r4, #40]
 860 01a0 013B     		subs	r3, r3, #1
 861 01a2 42EA4343 		orr	r3, r2, r3, lsl #17
 862 01a6 43F48032 		orr	r2, r3, #65536
ARM GAS  /tmp/cc0XO8k8.s 			page 147


 863              	.LVL68:
 864 01aa 09E0     		b	.L73
 865              	.L74:
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_BUSY_INTERNAL,
 866              		.loc 1 453 0
 867 01ac 636C     		ldr	r3, [r4, #68]
 868 01ae 23F02203 		bic	r3, r3, #34
 869 01b2 43F02003 		orr	r3, r3, #32
 870 01b6 6364     		str	r3, [r4, #68]
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 871              		.loc 1 458 0
 872 01b8 A36C     		ldr	r3, [r4, #72]
 873 01ba 43F00103 		orr	r3, r3, #1
 874 01be A364     		str	r3, [r4, #72]
 875              	.L73:
 467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 876              		.loc 1 467 0
 877 01c0 E36A     		ldr	r3, [r4, #44]
 878 01c2 012B     		cmp	r3, #1
 879 01c4 1BD0     		beq	.L75
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                        hadc->Init.ExternalTrigConvEdge                         );
 880              		.loc 1 469 0
 881 01c6 2168     		ldr	r1, [r4]
 882 01c8 304D     		ldr	r5, .L93+20
 883 01ca A942     		cmp	r1, r5
 884 01cc 03D0     		beq	.L76
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                        hadc->Init.ExternalTrigConvEdge                         );
 885              		.loc 1 469 0 is_stmt 0 discriminator 2
 886 01ce 05F58075 		add	r5, r5, #256
 887 01d2 A942     		cmp	r1, r5
 888 01d4 10D1     		bne	.L77
 889              	.L76:
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                        hadc->Init.ExternalTrigConvEdge                         );
 890              		.loc 1 469 0 discriminator 3
 891 01d6 B3F5307F 		cmp	r3, #704
 892 01da 08D0     		beq	.L90
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                        hadc->Init.ExternalTrigConvEdge                         );
 893              		.loc 1 469 0 discriminator 5
 894 01dc B3F5807F 		cmp	r3, #256
 895 01e0 08D0     		beq	.L91
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                        hadc->Init.ExternalTrigConvEdge                         );
 896              		.loc 1 469 0 discriminator 7
 897 01e2 B3F5E07F 		cmp	r3, #448
 898 01e6 07D1     		bne	.L77
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                        hadc->Init.ExternalTrigConvEdge                         );
 899              		.loc 1 469 0
 900 01e8 4FF48073 		mov	r3, #256
 901 01ec 04E0     		b	.L77
 902              	.L90:
 903 01ee 4FF4E073 		mov	r3, #448
 904 01f2 01E0     		b	.L77
 905              	.L91:
 906 01f4 4FF43073 		mov	r3, #704
 907              	.L77:
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                        hadc->Init.ExternalTrigConvEdge                         );
 908              		.loc 1 469 0 discriminator 18
 909 01f8 216B     		ldr	r1, [r4, #48]
ARM GAS  /tmp/cc0XO8k8.s 			page 148


 910 01fa 0B43     		orrs	r3, r3, r1
 911 01fc 1A43     		orrs	r2, r2, r3
 912              	.LVL69:
 913              	.L75:
 478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 914              		.loc 1 478 0 is_stmt 1
 915 01fe 2368     		ldr	r3, [r4]
 916 0200 9968     		ldr	r1, [r3, #8]
 917 0202 11F00C0F 		tst	r1, #12
 918 0206 0BD1     		bne	.L78
 480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                       ADC_CFGR_DMACFG  );
 919              		.loc 1 480 0
 920 0208 D968     		ldr	r1, [r3, #12]
 921 020a 21F48041 		bic	r1, r1, #16384
 922 020e 21F00201 		bic	r1, r1, #2
 923 0212 D960     		str	r1, [r3, #12]
 483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                        ADC_CFGR_DMACONTREQ(hadc->Init.DMAContinuousRequests) );
 924              		.loc 1 483 0
 925 0214 A169     		ldr	r1, [r4, #24]
 926 0216 636B     		ldr	r3, [r4, #52]
 927 0218 5B00     		lsls	r3, r3, #1
 928 021a 43EA8133 		orr	r3, r3, r1, lsl #14
 929 021e 1A43     		orrs	r2, r2, r3
 930              	.LVL70:
 931              	.L78:
 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_CFGR_DISCNUM |
 932              		.loc 1 488 0
 933 0220 2168     		ldr	r1, [r4]
 934 0222 CD68     		ldr	r5, [r1, #12]
 935 0224 1B4B     		ldr	r3, .L93+28
 936 0226 2B40     		ands	r3, r3, r5
 937 0228 1343     		orrs	r3, r3, r2
 938 022a CB60     		str	r3, [r1, #12]
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 939              		.loc 1 508 0
 940 022c 2369     		ldr	r3, [r4, #16]
 941 022e 012B     		cmp	r3, #1
 942 0230 08D1     		bne	.L79
 511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SQR1_L                               ,
 943              		.loc 1 511 0
 944 0232 2168     		ldr	r1, [r4]
 945 0234 0B6B     		ldr	r3, [r1, #48]
 946 0236 23F00F02 		bic	r2, r3, #15
 947              	.LVL71:
 948 023a 236A     		ldr	r3, [r4, #32]
 949 023c 013B     		subs	r3, r3, #1
 950 023e 1343     		orrs	r3, r3, r2
 951 0240 0B63     		str	r3, [r1, #48]
 952 0242 04E0     		b	.L80
 953              	.LVL72:
 954              	.L79:
 517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 955              		.loc 1 517 0
 956 0244 2268     		ldr	r2, [r4]
 957              	.LVL73:
 958 0246 136B     		ldr	r3, [r2, #48]
 959 0248 23F00F03 		bic	r3, r3, #15
ARM GAS  /tmp/cc0XO8k8.s 			page 149


 960 024c 1363     		str	r3, [r2, #48]
 961              	.L80:
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 962              		.loc 1 521 0
 963 024e 0023     		movs	r3, #0
 964 0250 A364     		str	r3, [r4, #72]
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 965              		.loc 1 524 0
 966 0252 636C     		ldr	r3, [r4, #68]
 967 0254 23F00303 		bic	r3, r3, #3
 968 0258 43F00103 		orr	r3, r3, #1
 969 025c 6364     		str	r3, [r4, #68]
 970 025e 08E0     		b	.L54
 971              	.LVL74:
 972              	.L60:
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 973              		.loc 1 531 0
 974 0260 636C     		ldr	r3, [r4, #68]
 975 0262 23F01203 		bic	r3, r3, #18
 976 0266 43F01003 		orr	r3, r3, #16
 977 026a 6364     		str	r3, [r4, #68]
 978              	.LVL75:
 535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 979              		.loc 1 535 0
 980 026c 0120     		movs	r0, #1
 981 026e 00E0     		b	.L54
 982              	.LVL76:
 983              	.L81:
 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 984              		.loc 1 261 0
 985 0270 0120     		movs	r0, #1
 986              	.LVL77:
 987              	.L54:
 541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 988              		.loc 1 541 0
 989 0272 16B0     		add	sp, sp, #88
 990              	.LCFI9:
 991              		.cfi_def_cfa_offset 16
 992              		@ sp needed
 993 0274 70BD     		pop	{r4, r5, r6, pc}
 994              	.L94:
 995 0276 00BF     		.align	2
 996              	.L93:
 997 0278 00000000 		.word	SystemCoreClock
 998 027c 83DE1B43 		.word	1125899907
 999 0280 00010050 		.word	1342177536
 1000 0284 00030050 		.word	1342178048
 1001 0288 00070050 		.word	1342179072
 1002 028c 00040050 		.word	1342178304
 1003 0290 00050050 		.word	1342178560
 1004 0294 07C0F0FF 		.word	-999417
 1005              		.cfi_endproc
 1006              	.LFE124:
 1008              		.section	.text.HAL_ADC_DeInit,"ax",%progbits
 1009              		.align	2
 1010              		.global	HAL_ADC_DeInit
 1011              		.thumb
ARM GAS  /tmp/cc0XO8k8.s 			page 150


 1012              		.thumb_func
 1014              	HAL_ADC_DeInit:
 1015              	.LFB125:
 790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1016              		.loc 1 790 0
 1017              		.cfi_startproc
 1018              		@ args = 0, pretend = 0, frame = 88
 1019              		@ frame_needed = 0, uses_anonymous_args = 0
 1020              	.LVL78:
 796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 1021              		.loc 1 796 0
 1022 0000 0028     		cmp	r0, #0
 1023 0002 00F0EC80 		beq	.L110
 790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1024              		.loc 1 790 0
 1025 0006 30B5     		push	{r4, r5, lr}
 1026              	.LCFI10:
 1027              		.cfi_def_cfa_offset 12
 1028              		.cfi_offset 4, -12
 1029              		.cfi_offset 5, -8
 1030              		.cfi_offset 14, -4
 1031 0008 97B0     		sub	sp, sp, #92
 1032              	.LCFI11:
 1033              		.cfi_def_cfa_offset 104
 1034 000a 0446     		mov	r4, r0
 805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 1035              		.loc 1 805 0
 1036 000c 436C     		ldr	r3, [r0, #68]
 1037 000e 43F00203 		orr	r3, r3, #2
 1038 0012 4364     		str	r3, [r0, #68]
 808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 1039              		.loc 1 808 0
 1040 0014 6C21     		movs	r1, #108
 1041 0016 FFF7FEFF 		bl	ADC_ConversionStop
 1042              	.LVL79:
 811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 1043              		.loc 1 811 0
 1044 001a 0546     		mov	r5, r0
 1045 001c 68B9     		cbnz	r0, .L97
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1046              		.loc 1 816 0
 1047 001e 2268     		ldr	r2, [r4]
 1048 0020 D368     		ldr	r3, [r2, #12]
 1049 0022 43F40013 		orr	r3, r3, #2097152
 1050 0026 D360     		str	r3, [r2, #12]
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1051              		.loc 1 819 0
 1052 0028 2046     		mov	r0, r4
 1053              	.LVL80:
 1054 002a FFF7FEFF 		bl	ADC_Disable
 1055              	.LVL81:
 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 1056              		.loc 1 822 0
 1057 002e 0546     		mov	r5, r0
 1058 0030 10B9     		cbnz	r0, .L111
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 1059              		.loc 1 825 0
ARM GAS  /tmp/cc0XO8k8.s 			page 151


 1060 0032 0123     		movs	r3, #1
 1061 0034 6364     		str	r3, [r4, #68]
 1062 0036 00E0     		b	.L97
 1063              	.L111:
 829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 1064              		.loc 1 829 0
 1065 0038 0125     		movs	r5, #1
 1066              	.L97:
 1067              	.LVL82:
 836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 1068              		.loc 1 836 0
 1069 003a 002D     		cmp	r5, #0
 1070 003c 40F0CA80 		bne	.L98
 840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 ADC_IT_JQOVF | ADC_IT_OVR  |
 1071              		.loc 1 840 0
 1072 0040 2268     		ldr	r2, [r4]
 1073 0042 5368     		ldr	r3, [r2, #4]
 1074 0044 23F4FF63 		bic	r3, r3, #2040
 1075 0048 23F00703 		bic	r3, r3, #7
 1076 004c 5360     		str	r3, [r2, #4]
 847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 ADC_FLAG_JQOVF | ADC_FLAG_OVR  |
 1077              		.loc 1 847 0
 1078 004e 2368     		ldr	r3, [r4]
 1079 0050 40F2FF72 		movw	r2, #2047
 1080 0054 1A60     		str	r2, [r3]
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 2. Set ADVREGEN bits to 0x10U */
 1081              		.loc 1 864 0
 1082 0056 2268     		ldr	r2, [r4]
 1083 0058 9368     		ldr	r3, [r2, #8]
 1084 005a 23F0E043 		bic	r3, r3, #1879048192
 1085 005e 9360     		str	r3, [r2, #8]
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 1086              		.loc 1 866 0
 1087 0060 2268     		ldr	r2, [r4]
 1088 0062 9368     		ldr	r3, [r2, #8]
 1089 0064 43F00053 		orr	r3, r3, #536870912
 1090 0068 9360     		str	r3, [r2, #8]
 869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CFGR_AWD1EN  | ADC_CFGR_AWD1SGL | ADC_CFGR_JQM     |     
 1091              		.loc 1 869 0
 1092 006a 2268     		ldr	r2, [r4]
 1093 006c D168     		ldr	r1, [r2, #12]
 1094 006e 5E4B     		ldr	r3, .L119
 1095 0070 0B40     		ands	r3, r3, r1
 1096 0072 D360     		str	r3, [r2, #12]
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                      ADC_SMPR1_SMP6 | ADC_SMPR1_SMP5 | ADC_SMPR1_SMP4 | 
 1097              		.loc 1 877 0
 1098 0074 2268     		ldr	r2, [r4]
 1099 0076 5369     		ldr	r3, [r2, #20]
 1100 0078 23F07F53 		bic	r3, r3, #1069547520
 1101 007c 23F47F13 		bic	r3, r3, #4177920
 1102 0080 23F47F53 		bic	r3, r3, #16320
 1103 0084 23F03803 		bic	r3, r3, #56
 1104 0088 5361     		str	r3, [r2, #20]
 882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                      ADC_SMPR2_SMP15 | ADC_SMPR2_SMP14 | ADC_SMPR2_SMP13 | 
 1105              		.loc 1 882 0
 1106 008a 2268     		ldr	r2, [r4]
 1107 008c 9369     		ldr	r3, [r2, #24]
ARM GAS  /tmp/cc0XO8k8.s 			page 152


 1108 008e 03F07843 		and	r3, r3, #-134217728
 1109 0092 9361     		str	r3, [r2, #24]
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1110              		.loc 1 887 0
 1111 0094 2268     		ldr	r2, [r4]
 1112 0096 136A     		ldr	r3, [r2, #32]
 1113 0098 03F0F023 		and	r3, r3, #-268374016
 1114 009c 1362     		str	r3, [r2, #32]
 890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1115              		.loc 1 890 0
 1116 009e 2268     		ldr	r2, [r4]
 1117 00a0 536A     		ldr	r3, [r2, #36]
 1118 00a2 03F0FF23 		and	r3, r3, #-16711936
 1119 00a6 5362     		str	r3, [r2, #36]
 893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1120              		.loc 1 893 0
 1121 00a8 2268     		ldr	r2, [r4]
 1122 00aa 936A     		ldr	r3, [r2, #40]
 1123 00ac 03F0FF23 		and	r3, r3, #-16711936
 1124 00b0 9362     		str	r3, [r2, #40]
 896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_SQR1_SQ1 | ADC_SQR1_L);
 1125              		.loc 1 896 0
 1126 00b2 2268     		ldr	r2, [r4]
 1127 00b4 116B     		ldr	r1, [r2, #48]
 1128 00b6 4D4B     		ldr	r3, .L119+4
 1129 00b8 0B40     		ands	r3, r3, r1
 1130 00ba 1363     		str	r3, [r2, #48]
 900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_SQR2_SQ6 | ADC_SQR2_SQ5);
 1131              		.loc 1 900 0
 1132 00bc 2168     		ldr	r1, [r4]
 1133 00be 4A6B     		ldr	r2, [r1, #52]
 1134 00c0 4B4B     		ldr	r3, .L119+8
 1135 00c2 1A40     		ands	r2, r2, r3
 1136 00c4 4A63     		str	r2, [r1, #52]
 904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_SQR3_SQ11 | ADC_SQR3_SQ10);
 1137              		.loc 1 904 0
 1138 00c6 2268     		ldr	r2, [r4]
 1139 00c8 916B     		ldr	r1, [r2, #56]
 1140 00ca 0B40     		ands	r3, r3, r1
 1141 00cc 9363     		str	r3, [r2, #56]
 908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1142              		.loc 1 908 0
 1143 00ce 2268     		ldr	r2, [r4]
 1144 00d0 D36B     		ldr	r3, [r2, #60]
 1145 00d2 23F4FB63 		bic	r3, r3, #2008
 1146 00d6 23F00703 		bic	r3, r3, #7
 1147 00da D363     		str	r3, [r2, #60]
 914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register OFR2 */
 1148              		.loc 1 914 0
 1149 00dc 2168     		ldr	r1, [r4]
 1150 00de 0A6E     		ldr	r2, [r1, #96]
 1151 00e0 444B     		ldr	r3, .L119+12
 1152 00e2 1A40     		ands	r2, r2, r3
 1153 00e4 0A66     		str	r2, [r1, #96]
 916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register OFR3 */
 1154              		.loc 1 916 0
 1155 00e6 2168     		ldr	r1, [r4]
ARM GAS  /tmp/cc0XO8k8.s 			page 153


 1156 00e8 4A6E     		ldr	r2, [r1, #100]
 1157 00ea 1A40     		ands	r2, r2, r3
 1158 00ec 4A66     		str	r2, [r1, #100]
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register OFR4 */
 1159              		.loc 1 918 0
 1160 00ee 2168     		ldr	r1, [r4]
 1161 00f0 8A6E     		ldr	r2, [r1, #104]
 1162 00f2 1A40     		ands	r2, r2, r3
 1163 00f4 8A66     		str	r2, [r1, #104]
 920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1164              		.loc 1 920 0
 1165 00f6 2268     		ldr	r2, [r4]
 1166 00f8 D16E     		ldr	r1, [r2, #108]
 1167 00fa 0B40     		ands	r3, r3, r1
 1168 00fc D366     		str	r3, [r2, #108]
 926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1169              		.loc 1 926 0
 1170 00fe 2268     		ldr	r2, [r4]
 1171 0100 D2F8A030 		ldr	r3, [r2, #160]
 1172 0104 DB0C     		lsrs	r3, r3, #19
 1173 0106 DB04     		lsls	r3, r3, #19
 1174 0108 C2F8A030 		str	r3, [r2, #160]
 929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1175              		.loc 1 929 0
 1176 010c 2268     		ldr	r2, [r4]
 1177 010e D2F8A430 		ldr	r3, [r2, #164]
 1178 0112 DB0C     		lsrs	r3, r3, #19
 1179 0114 DB04     		lsls	r3, r3, #19
 1180 0116 C2F8A430 		str	r3, [r2, #164]
 932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1181              		.loc 1 932 0
 1182 011a 2268     		ldr	r2, [r4]
 1183 011c D2F8B030 		ldr	r3, [r2, #176]
 1184 0120 DB0C     		lsrs	r3, r3, #19
 1185 0122 DB04     		lsls	r3, r3, #19
 1186 0124 C2F8B030 		str	r3, [r2, #176]
 935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 1187              		.loc 1 935 0
 1188 0128 2268     		ldr	r2, [r4]
 1189 012a D2F8B430 		ldr	r3, [r2, #180]
 1190 012e 23F07F13 		bic	r3, r3, #8323199
 1191 0132 C2F8B430 		str	r3, [r2, #180]
 947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1192              		.loc 1 947 0
 1193 0136 2368     		ldr	r3, [r4]
 1194 0138 B3F1A04F 		cmp	r3, #1342177280
 1195 013c 04D0     		beq	.L112
 947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1196              		.loc 1 947 0 is_stmt 0 discriminator 2
 1197 013e 2E4A     		ldr	r2, .L119+16
 1198 0140 9342     		cmp	r3, r2
 1199 0142 03D1     		bne	.L113
 947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1200              		.loc 1 947 0
 1201 0144 2D49     		ldr	r1, .L119+20
 1202 0146 02E0     		b	.L99
 1203              	.L112:
ARM GAS  /tmp/cc0XO8k8.s 			page 154


 1204 0148 2C49     		ldr	r1, .L119+20
 1205 014a 00E0     		b	.L99
 1206              	.L113:
 1207 014c 2C49     		ldr	r1, .L119+24
 1208              	.L99:
 1209              	.LVL83:
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1210              		.loc 1 950 0 is_stmt 1 discriminator 6
 1211 014e B3F1A04F 		cmp	r3, #1342177280
 1212 0152 03D1     		bne	.L100
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1213              		.loc 1 950 0 is_stmt 0 discriminator 1
 1214 0154 03F58073 		add	r3, r3, #256
 1215 0158 0193     		str	r3, [sp, #4]
 1216 015a 14E0     		b	.L101
 1217              	.L100:
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1218              		.loc 1 950 0 discriminator 2
 1219 015c 264A     		ldr	r2, .L119+16
 1220 015e 9342     		cmp	r3, r2
 1221 0160 03D1     		bne	.L102
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1222              		.loc 1 950 0 discriminator 3
 1223 0162 4FF0A043 		mov	r3, #1342177280
 1224 0166 0193     		str	r3, [sp, #4]
 1225 0168 0DE0     		b	.L101
 1226              	.L102:
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1227              		.loc 1 950 0 discriminator 4
 1228 016a 264A     		ldr	r2, .L119+28
 1229 016c 9342     		cmp	r3, r2
 1230 016e 02D1     		bne	.L104
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1231              		.loc 1 950 0 discriminator 6
 1232 0170 254B     		ldr	r3, .L119+32
 1233 0172 0193     		str	r3, [sp, #4]
 1234 0174 07E0     		b	.L101
 1235              	.L104:
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1236              		.loc 1 950 0 discriminator 7
 1237 0176 244A     		ldr	r2, .L119+32
 1238 0178 9342     		cmp	r3, r2
 1239 017a 02D1     		bne	.L105
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1240              		.loc 1 950 0 discriminator 9
 1241 017c 214B     		ldr	r3, .L119+28
 1242 017e 0193     		str	r3, [sp, #4]
 1243 0180 01E0     		b	.L101
 1244              	.L105:
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1245              		.loc 1 950 0 discriminator 10
 1246 0182 0023     		movs	r3, #0
 1247 0184 0193     		str	r3, [sp, #4]
 1248              	.L101:
 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (tmphadcSharingSameCommonRegister.Instance == NULL) ||
 1249              		.loc 1 954 0 is_stmt 1
 1250 0186 2268     		ldr	r2, [r4]
ARM GAS  /tmp/cc0XO8k8.s 			page 155


 1251 0188 9368     		ldr	r3, [r2, #8]
 1252 018a 03F00303 		and	r3, r3, #3
 1253 018e 012B     		cmp	r3, #1
 1254 0190 05D1     		bne	.L114
 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (tmphadcSharingSameCommonRegister.Instance == NULL) ||
 1255              		.loc 1 954 0 is_stmt 0 discriminator 1
 1256 0192 1368     		ldr	r3, [r2]
 1257 0194 13F0010F 		tst	r3, #1
 1258 0198 03D1     		bne	.L115
 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (tmphadcSharingSameCommonRegister.Instance == NULL) ||
 1259              		.loc 1 954 0
 1260 019a 0023     		movs	r3, #0
 1261 019c 02E0     		b	.L106
 1262              	.L114:
 1263 019e 0023     		movs	r3, #0
 1264 01a0 00E0     		b	.L106
 1265              	.L115:
 1266 01a2 0123     		movs	r3, #1
 1267              	.L106:
 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (tmphadcSharingSameCommonRegister.Instance == NULL) ||
 1268              		.loc 1 954 0 discriminator 6
 1269 01a4 83B9     		cbnz	r3, .L107
 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET) )   )
 1270              		.loc 1 955 0 is_stmt 1 discriminator 7
 1271 01a6 0198     		ldr	r0, [sp, #4]
 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (tmphadcSharingSameCommonRegister.Instance == NULL) ||
 1272              		.loc 1 954 0 discriminator 7
 1273 01a8 50B1     		cbz	r0, .L108
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 1274              		.loc 1 956 0
 1275 01aa 8268     		ldr	r2, [r0, #8]
 1276 01ac 02F00302 		and	r2, r2, #3
 1277 01b0 012A     		cmp	r2, #1
 1278 01b2 04D1     		bne	.L109
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 1279              		.loc 1 956 0 is_stmt 0 discriminator 1
 1280 01b4 0268     		ldr	r2, [r0]
 1281 01b6 12F0010F 		tst	r2, #1
 1282 01ba 00D0     		beq	.L109
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 1283              		.loc 1 956 0
 1284 01bc 0123     		movs	r3, #1
 1285              	.L109:
 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET) )   )
 1286              		.loc 1 955 0 is_stmt 1
 1287 01be 1BB9     		cbnz	r3, .L107
 1288              	.L108:
 965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CCR_VBATEN |
 1289              		.loc 1 965 0
 1290 01c0 8A68     		ldr	r2, [r1, #8]
 1291 01c2 124B     		ldr	r3, .L119+36
 1292 01c4 1340     		ands	r3, r3, r2
 1293 01c6 8B60     		str	r3, [r1, #8]
 1294              	.L107:
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1295              		.loc 1 987 0
 1296 01c8 2046     		mov	r0, r4
ARM GAS  /tmp/cc0XO8k8.s 			page 156


 1297 01ca FFF7FEFF 		bl	HAL_ADC_MspDeInit
 1298              	.LVL84:
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1299              		.loc 1 990 0
 1300 01ce 0023     		movs	r3, #0
 1301 01d0 A364     		str	r3, [r4, #72]
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 1302              		.loc 1 993 0
 1303 01d2 6364     		str	r3, [r4, #68]
 1304              	.L98:
 997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 1305              		.loc 1 997 0
 1306 01d4 0023     		movs	r3, #0
 1307 01d6 84F84030 		strb	r3, [r4, #64]
1001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 1308              		.loc 1 1001 0
 1309 01da 2846     		mov	r0, r5
 1310 01dc 01E0     		b	.L96
 1311              	.LVL85:
 1312              	.L110:
 1313              	.LCFI12:
 1314              		.cfi_def_cfa_offset 0
 1315              		.cfi_restore 4
 1316              		.cfi_restore 5
 1317              		.cfi_restore 14
 798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 1318              		.loc 1 798 0
 1319 01de 0120     		movs	r0, #1
 1320              	.LVL86:
 1321 01e0 7047     		bx	lr
 1322              	.LVL87:
 1323              	.L96:
 1324              	.LCFI13:
 1325              		.cfi_def_cfa_offset 104
 1326              		.cfi_offset 4, -12
 1327              		.cfi_offset 5, -8
 1328              		.cfi_offset 14, -4
1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 1329              		.loc 1 1002 0
 1330 01e2 17B0     		add	sp, sp, #92
 1331              	.LCFI14:
 1332              		.cfi_def_cfa_offset 12
 1333              		@ sp needed
 1334 01e4 30BD     		pop	{r4, r5, pc}
 1335              	.LVL88:
 1336              	.L120:
 1337 01e6 00BF     		.align	2
 1338              	.L119:
 1339 01e8 04800080 		.word	-2147450876
 1340 01ec 300882E0 		.word	-528349136
 1341 01f0 200882E0 		.word	-528349152
 1342 01f4 00F0FF03 		.word	67104768
 1343 01f8 00010050 		.word	1342177536
 1344 01fc 00030050 		.word	1342178048
 1345 0200 00070050 		.word	1342179072
 1346 0204 00040050 		.word	1342178304
 1347 0208 00050050 		.word	1342178560
ARM GAS  /tmp/cc0XO8k8.s 			page 157


 1348 020c E0103CFE 		.word	-29617952
 1349              		.cfi_endproc
 1350              	.LFE125:
 1352              		.section	.text.HAL_ADC_Start,"ax",%progbits
 1353              		.align	2
 1354              		.global	HAL_ADC_Start
 1355              		.thumb
 1356              		.thumb_func
 1358              	HAL_ADC_Start:
 1359              	.LFB126:
1205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1360              		.loc 1 1205 0
 1361              		.cfi_startproc
 1362              		@ args = 0, pretend = 0, frame = 0
 1363              		@ frame_needed = 0, uses_anonymous_args = 0
 1364              	.LVL89:
1212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 1365              		.loc 1 1212 0
 1366 0000 0368     		ldr	r3, [r0]
 1367 0002 9B68     		ldr	r3, [r3, #8]
 1368 0004 13F0040F 		tst	r3, #4
 1369 0008 40F0B280 		bne	.L145
1215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1370              		.loc 1 1215 0
 1371 000c 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 1372 0010 012B     		cmp	r3, #1
 1373 0012 00F0AF80 		beq	.L146
1205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1374              		.loc 1 1205 0 discriminator 2
 1375 0016 10B5     		push	{r4, lr}
 1376              	.LCFI15:
 1377              		.cfi_def_cfa_offset 8
 1378              		.cfi_offset 4, -8
 1379              		.cfi_offset 14, -4
 1380 0018 0446     		mov	r4, r0
1215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1381              		.loc 1 1215 0 discriminator 2
 1382 001a 0123     		movs	r3, #1
 1383 001c 80F84030 		strb	r3, [r0, #64]
1218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1384              		.loc 1 1218 0 discriminator 2
 1385 0020 FFF7FEFF 		bl	ADC_Enable
 1386              	.LVL90:
1221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 1387              		.loc 1 1221 0 discriminator 2
 1388 0024 0346     		mov	r3, r0
 1389 0026 0028     		cmp	r0, #0
 1390 0028 40F09E80 		bne	.L123
1226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 1391              		.loc 1 1226 0
 1392 002c 626C     		ldr	r2, [r4, #68]
 1393 002e 22F47062 		bic	r2, r2, #3840
 1394 0032 22F00102 		bic	r2, r2, #1
 1395 0036 42F48072 		orr	r2, r2, #256
 1396 003a 6264     		str	r2, [r4, #68]
1233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1397              		.loc 1 1233 0
ARM GAS  /tmp/cc0XO8k8.s 			page 158


 1398 003c 2268     		ldr	r2, [r4]
 1399 003e B2F1A04F 		cmp	r2, #1342177280
 1400 0042 02D0     		beq	.L124
1233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1401              		.loc 1 1233 0 is_stmt 0 discriminator 2
 1402 0044 4D49     		ldr	r1, .L150
 1403 0046 8A42     		cmp	r2, r1
 1404 0048 05D1     		bne	.L125
 1405              	.L124:
1233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1406              		.loc 1 1233 0 discriminator 3
 1407 004a 4D49     		ldr	r1, .L150+4
 1408 004c 8968     		ldr	r1, [r1, #8]
 1409 004e 11F01F0F 		tst	r1, #31
 1410 0052 0BD0     		beq	.L126
 1411 0054 04E0     		b	.L127
 1412              	.L125:
1233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1413              		.loc 1 1233 0 discriminator 4
 1414 0056 4B49     		ldr	r1, .L150+8
 1415 0058 8968     		ldr	r1, [r1, #8]
 1416 005a 11F01F0F 		tst	r1, #31
 1417 005e 05D0     		beq	.L126
 1418              	.L127:
1233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1419              		.loc 1 1233 0 discriminator 5
 1420 0060 B2F1A04F 		cmp	r2, #1342177280
 1421 0064 02D0     		beq	.L126
1233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1422              		.loc 1 1233 0 discriminator 6
 1423 0066 4849     		ldr	r1, .L150+12
 1424 0068 8A42     		cmp	r2, r1
 1425 006a 0ED1     		bne	.L128
 1426              	.L126:
1236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 1427              		.loc 1 1236 0 is_stmt 1
 1428 006c 616C     		ldr	r1, [r4, #68]
 1429 006e 21F48011 		bic	r1, r1, #1048576
 1430 0072 6164     		str	r1, [r4, #68]
1240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 1431              		.loc 1 1240 0
 1432 0074 D168     		ldr	r1, [r2, #12]
 1433 0076 11F0007F 		tst	r1, #33554432
 1434 007a 21D0     		beq	.L129
1242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 1435              		.loc 1 1242 0
 1436 007c 616C     		ldr	r1, [r4, #68]
 1437 007e 21F44051 		bic	r1, r1, #12288
 1438 0082 41F48051 		orr	r1, r1, #4096
 1439 0086 6164     		str	r1, [r4, #68]
 1440 0088 1AE0     		b	.L129
 1441              	.L128:
1248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 1442              		.loc 1 1248 0
 1443 008a 616C     		ldr	r1, [r4, #68]
 1444 008c 41F48011 		orr	r1, r1, #1048576
 1445 0090 6164     		str	r1, [r4, #68]
ARM GAS  /tmp/cc0XO8k8.s 			page 159


1252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 1446              		.loc 1 1252 0
 1447 0092 B2F1A04F 		cmp	r2, #1342177280
 1448 0096 02D0     		beq	.L130
1252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 1449              		.loc 1 1252 0 is_stmt 0 discriminator 2
 1450 0098 3849     		ldr	r1, .L150
 1451 009a 8A42     		cmp	r2, r1
 1452 009c 05D1     		bne	.L131
 1453              	.L130:
1252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 1454              		.loc 1 1252 0 discriminator 3
 1455 009e 4FF0A041 		mov	r1, #1342177280
 1456 00a2 C968     		ldr	r1, [r1, #12]
 1457 00a4 C1F34061 		ubfx	r1, r1, #25, #1
 1458 00a8 03E0     		b	.L132
 1459              	.L131:
1252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 1460              		.loc 1 1252 0 discriminator 4
 1461 00aa 3749     		ldr	r1, .L150+12
 1462 00ac C968     		ldr	r1, [r1, #12]
 1463 00ae C1F34061 		ubfx	r1, r1, #25, #1
 1464              	.L132:
1252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 1465              		.loc 1 1252 0 discriminator 6
 1466 00b2 29B1     		cbz	r1, .L129
1254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 1467              		.loc 1 1254 0 is_stmt 1
 1468 00b4 616C     		ldr	r1, [r4, #68]
 1469 00b6 21F44051 		bic	r1, r1, #12288
 1470 00ba 41F48051 		orr	r1, r1, #4096
 1471 00be 6164     		str	r1, [r4, #68]
 1472              	.L129:
1259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1473              		.loc 1 1259 0
 1474 00c0 616C     		ldr	r1, [r4, #68]
 1475 00c2 11F4805F 		tst	r1, #4096
 1476 00c6 04D0     		beq	.L133
1262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 1477              		.loc 1 1262 0
 1478 00c8 A16C     		ldr	r1, [r4, #72]
 1479 00ca 21F00601 		bic	r1, r1, #6
 1480 00ce A164     		str	r1, [r4, #72]
 1481 00d0 01E0     		b	.L134
 1482              	.L133:
1267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 1483              		.loc 1 1267 0
 1484 00d2 0021     		movs	r1, #0
 1485 00d4 A164     		str	r1, [r4, #72]
 1486              	.L134:
1273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 1487              		.loc 1 1273 0
 1488 00d6 0021     		movs	r1, #0
 1489 00d8 84F84010 		strb	r1, [r4, #64]
1278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 1490              		.loc 1 1278 0
 1491 00dc 1C21     		movs	r1, #28
ARM GAS  /tmp/cc0XO8k8.s 			page 160


 1492 00de 1160     		str	r1, [r2]
1287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1493              		.loc 1 1287 0
 1494 00e0 2268     		ldr	r2, [r4]
 1495 00e2 B2F1A04F 		cmp	r2, #1342177280
 1496 00e6 02D0     		beq	.L135
1287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1497              		.loc 1 1287 0 is_stmt 0 discriminator 2
 1498 00e8 2449     		ldr	r1, .L150
 1499 00ea 8A42     		cmp	r2, r1
 1500 00ec 05D1     		bne	.L136
 1501              	.L135:
1287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1502              		.loc 1 1287 0 discriminator 3
 1503 00ee 2449     		ldr	r1, .L150+4
 1504 00f0 8968     		ldr	r1, [r1, #8]
 1505 00f2 11F01F0F 		tst	r1, #31
 1506 00f6 05D1     		bne	.L138
 1507 00f8 30E0     		b	.L137
 1508              	.L136:
1287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1509              		.loc 1 1287 0 discriminator 4
 1510 00fa 2249     		ldr	r1, .L150+8
 1511 00fc 8968     		ldr	r1, [r1, #8]
 1512 00fe 11F01F0F 		tst	r1, #31
 1513 0102 2BD0     		beq	.L137
 1514              	.L138:
1287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1515              		.loc 1 1287 0 discriminator 5
 1516 0104 B2F1A04F 		cmp	r2, #1342177280
 1517 0108 02D0     		beq	.L139
1287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1518              		.loc 1 1287 0 discriminator 7
 1519 010a 1C49     		ldr	r1, .L150
 1520 010c 8A42     		cmp	r2, r1
 1521 010e 06D1     		bne	.L140
 1522              	.L139:
1287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1523              		.loc 1 1287 0 discriminator 8
 1524 0110 1B49     		ldr	r1, .L150+4
 1525 0112 8968     		ldr	r1, [r1, #8]
 1526 0114 01F01F01 		and	r1, r1, #31
 1527 0118 0529     		cmp	r1, #5
 1528 011a 06D1     		bne	.L141
 1529 011c 1EE0     		b	.L137
 1530              	.L140:
1287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1531              		.loc 1 1287 0 discriminator 9
 1532 011e 1949     		ldr	r1, .L150+8
 1533 0120 8968     		ldr	r1, [r1, #8]
 1534 0122 01F01F01 		and	r1, r1, #31
 1535 0126 0529     		cmp	r1, #5
 1536 0128 18D0     		beq	.L137
 1537              	.L141:
1287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1538              		.loc 1 1287 0 discriminator 10
 1539 012a B2F1A04F 		cmp	r2, #1342177280
ARM GAS  /tmp/cc0XO8k8.s 			page 161


 1540 012e 02D0     		beq	.L142
1287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1541              		.loc 1 1287 0 discriminator 12
 1542 0130 1249     		ldr	r1, .L150
 1543 0132 8A42     		cmp	r2, r1
 1544 0134 06D1     		bne	.L143
 1545              	.L142:
1287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1546              		.loc 1 1287 0 discriminator 13
 1547 0136 1249     		ldr	r1, .L150+4
 1548 0138 8968     		ldr	r1, [r1, #8]
 1549 013a 01F01F01 		and	r1, r1, #31
 1550 013e 0929     		cmp	r1, #9
 1551 0140 06D1     		bne	.L144
 1552 0142 0BE0     		b	.L137
 1553              	.L143:
1287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1554              		.loc 1 1287 0 discriminator 14
 1555 0144 0F49     		ldr	r1, .L150+8
 1556 0146 8968     		ldr	r1, [r1, #8]
 1557 0148 01F01F01 		and	r1, r1, #31
 1558 014c 0929     		cmp	r1, #9
 1559 014e 05D0     		beq	.L137
 1560              	.L144:
1287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1561              		.loc 1 1287 0 discriminator 15
 1562 0150 B2F1A04F 		cmp	r2, #1342177280
 1563 0154 02D0     		beq	.L137
1287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1564              		.loc 1 1287 0 discriminator 16
 1565 0156 0C49     		ldr	r1, .L150+12
 1566 0158 8A42     		cmp	r2, r1
 1567 015a 0DD1     		bne	.L147
 1568              	.L137:
1289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 1569              		.loc 1 1289 0 is_stmt 1
 1570 015c 9168     		ldr	r1, [r2, #8]
 1571 015e 41F00401 		orr	r1, r1, #4
 1572 0162 9160     		str	r1, [r2, #8]
1218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1573              		.loc 1 1218 0
 1574 0164 1846     		mov	r0, r3
 1575              	.LVL91:
 1576 0166 10BD     		pop	{r4, pc}
 1577              	.LVL92:
 1578              	.L123:
1295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 1579              		.loc 1 1295 0
 1580 0168 0022     		movs	r2, #0
 1581 016a 84F84020 		strb	r2, [r4, #64]
 1582 016e 10BD     		pop	{r4, pc}
 1583              	.LVL93:
 1584              	.L145:
 1585              	.LCFI16:
 1586              		.cfi_def_cfa_offset 0
 1587              		.cfi_restore 4
 1588              		.cfi_restore 14
ARM GAS  /tmp/cc0XO8k8.s 			page 162


1300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 1589              		.loc 1 1300 0
 1590 0170 0220     		movs	r0, #2
 1591              	.LVL94:
1305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 1592              		.loc 1 1305 0
 1593 0172 7047     		bx	lr
 1594              	.LVL95:
 1595              	.L146:
1215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1596              		.loc 1 1215 0
 1597 0174 0220     		movs	r0, #2
 1598              	.LVL96:
 1599 0176 7047     		bx	lr
 1600              	.LVL97:
 1601              	.L147:
 1602              	.LCFI17:
 1603              		.cfi_def_cfa_offset 8
 1604              		.cfi_offset 4, -8
 1605              		.cfi_offset 14, -4
1218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1606              		.loc 1 1218 0
 1607 0178 1846     		mov	r0, r3
 1608              	.LVL98:
1305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 1609              		.loc 1 1305 0
 1610 017a 10BD     		pop	{r4, pc}
 1611              	.LVL99:
 1612              	.L151:
 1613              		.align	2
 1614              	.L150:
 1615 017c 00010050 		.word	1342177536
 1616 0180 00030050 		.word	1342178048
 1617 0184 00070050 		.word	1342179072
 1618 0188 00040050 		.word	1342178304
 1619              		.cfi_endproc
 1620              	.LFE126:
 1622              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 1623              		.align	2
 1624              		.global	HAL_ADC_Stop
 1625              		.thumb
 1626              		.thumb_func
 1628              	HAL_ADC_Stop:
 1629              	.LFB127:
1411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1630              		.loc 1 1411 0
 1631              		.cfi_startproc
 1632              		@ args = 0, pretend = 0, frame = 0
 1633              		@ frame_needed = 0, uses_anonymous_args = 0
 1634              	.LVL100:
1418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 1635              		.loc 1 1418 0
 1636 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 1637 0004 012B     		cmp	r3, #1
 1638 0006 1BD0     		beq	.L155
1411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1639              		.loc 1 1411 0 discriminator 2
ARM GAS  /tmp/cc0XO8k8.s 			page 163


 1640 0008 10B5     		push	{r4, lr}
 1641              	.LCFI18:
 1642              		.cfi_def_cfa_offset 8
 1643              		.cfi_offset 4, -8
 1644              		.cfi_offset 14, -4
 1645 000a 0446     		mov	r4, r0
1418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 1646              		.loc 1 1418 0 discriminator 2
 1647 000c 0123     		movs	r3, #1
 1648 000e 80F84030 		strb	r3, [r0, #64]
1421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 1649              		.loc 1 1421 0 discriminator 2
 1650 0012 6C21     		movs	r1, #108
 1651 0014 FFF7FEFF 		bl	ADC_ConversionStop
 1652              	.LVL101:
1424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 1653              		.loc 1 1424 0 discriminator 2
 1654 0018 0346     		mov	r3, r0
 1655 001a 60B9     		cbnz	r0, .L154
1427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1656              		.loc 1 1427 0
 1657 001c 2046     		mov	r0, r4
 1658              	.LVL102:
 1659 001e FFF7FEFF 		bl	ADC_Disable
 1660              	.LVL103:
1430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 1661              		.loc 1 1430 0
 1662 0022 0346     		mov	r3, r0
 1663 0024 38B9     		cbnz	r0, .L154
1433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 1664              		.loc 1 1433 0
 1665 0026 626C     		ldr	r2, [r4, #68]
 1666 0028 22F48852 		bic	r2, r2, #4352
 1667 002c 22F00102 		bic	r2, r2, #1
 1668 0030 42F00102 		orr	r2, r2, #1
 1669 0034 6264     		str	r2, [r4, #68]
 1670              	.L154:
 1671              	.LVL104:
1440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 1672              		.loc 1 1440 0
 1673 0036 0022     		movs	r2, #0
 1674 0038 84F84020 		strb	r2, [r4, #64]
1443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 1675              		.loc 1 1443 0
 1676 003c 1846     		mov	r0, r3
 1677 003e 10BD     		pop	{r4, pc}
 1678              	.LVL105:
 1679              	.L155:
 1680              	.LCFI19:
 1681              		.cfi_def_cfa_offset 0
 1682              		.cfi_restore 4
 1683              		.cfi_restore 14
1418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 1684              		.loc 1 1418 0
 1685 0040 0220     		movs	r0, #2
 1686              	.LVL106:
 1687 0042 7047     		bx	lr
ARM GAS  /tmp/cc0XO8k8.s 			page 164


 1688              		.cfi_endproc
 1689              	.LFE127:
 1691              		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
 1692              		.align	2
 1693              		.global	HAL_ADC_PollForConversion
 1694              		.thumb
 1695              		.thumb_func
 1697              	HAL_ADC_PollForConversion:
 1698              	.LFB128:
1516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart;
 1699              		.loc 1 1516 0
 1700              		.cfi_startproc
 1701              		@ args = 0, pretend = 0, frame = 0
 1702              		@ frame_needed = 0, uses_anonymous_args = 0
 1703              	.LVL107:
 1704 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1705              	.LCFI20:
 1706              		.cfi_def_cfa_offset 24
 1707              		.cfi_offset 4, -24
 1708              		.cfi_offset 5, -20
 1709              		.cfi_offset 6, -16
 1710              		.cfi_offset 7, -12
 1711              		.cfi_offset 8, -8
 1712              		.cfi_offset 14, -4
 1713              	.LVL108:
1526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 1714              		.loc 1 1526 0
 1715 0004 4369     		ldr	r3, [r0, #20]
 1716 0006 082B     		cmp	r3, #8
 1717 0008 2CD0     		beq	.L176
1543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1718              		.loc 1 1543 0
 1719 000a 0368     		ldr	r3, [r0]
 1720 000c B3F1A04F 		cmp	r3, #1342177280
 1721 0010 05D0     		beq	.L177
1543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1722              		.loc 1 1543 0 is_stmt 0 discriminator 2
 1723 0012 514A     		ldr	r2, .L184
 1724 0014 9342     		cmp	r3, r2
 1725 0016 04D1     		bne	.L178
1543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1726              		.loc 1 1543 0
 1727 0018 02F50072 		add	r2, r2, #512
 1728 001c 02E0     		b	.L160
 1729              	.L177:
 1730 001e 4F4A     		ldr	r2, .L184+4
 1731 0020 00E0     		b	.L160
 1732              	.L178:
 1733 0022 4F4A     		ldr	r2, .L184+8
 1734              	.L160:
 1735              	.LVL109:
1546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 1736              		.loc 1 1546 0 is_stmt 1 discriminator 6
 1737 0024 9468     		ldr	r4, [r2, #8]
 1738 0026 14F01F0F 		tst	r4, #31
 1739 002a 0DD1     		bne	.L161
1548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
ARM GAS  /tmp/cc0XO8k8.s 			page 165


 1740              		.loc 1 1548 0
 1741 002c DB68     		ldr	r3, [r3, #12]
 1742 002e 13F0010F 		tst	r3, #1
 1743 0032 19D0     		beq	.L179
1551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 1744              		.loc 1 1551 0
 1745 0034 436C     		ldr	r3, [r0, #68]
 1746 0036 43F02003 		orr	r3, r3, #32
 1747 003a 4364     		str	r3, [r0, #68]
1554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 1748              		.loc 1 1554 0
 1749 003c 0023     		movs	r3, #0
 1750 003e 80F84030 		strb	r3, [r0, #64]
1556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 1751              		.loc 1 1556 0
 1752 0042 0120     		movs	r0, #1
 1753              	.LVL110:
 1754 0044 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1755              	.LVL111:
 1756              	.L161:
1562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1757              		.loc 1 1562 0
 1758 0048 9368     		ldr	r3, [r2, #8]
 1759 004a 13F4404F 		tst	r3, #49152
 1760 004e 0DD0     		beq	.L180
1565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 1761              		.loc 1 1565 0
 1762 0050 436C     		ldr	r3, [r0, #68]
 1763 0052 43F02003 		orr	r3, r3, #32
 1764 0056 4364     		str	r3, [r0, #68]
1568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 1765              		.loc 1 1568 0
 1766 0058 0023     		movs	r3, #0
 1767 005a 80F84030 		strb	r3, [r0, #64]
1570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 1768              		.loc 1 1570 0
 1769 005e 0120     		movs	r0, #1
 1770              	.LVL112:
 1771 0060 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1772              	.LVL113:
 1773              	.L176:
1528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 1774              		.loc 1 1528 0
 1775 0064 0826     		movs	r6, #8
 1776 0066 02E0     		b	.L159
 1777              	.LVL114:
 1778              	.L179:
1574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 1779              		.loc 1 1574 0
 1780 0068 0C26     		movs	r6, #12
 1781 006a 00E0     		b	.L159
 1782              	.L180:
 1783 006c 0C26     		movs	r6, #12
 1784              	.LVL115:
 1785              	.L159:
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 1786              		.loc 1 1581 0
ARM GAS  /tmp/cc0XO8k8.s 			page 166


 1787 006e 0368     		ldr	r3, [r0]
 1788 0070 B3F1A04F 		cmp	r3, #1342177280
 1789 0074 02D0     		beq	.L163
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 1790              		.loc 1 1581 0 is_stmt 0 discriminator 2
 1791 0076 384A     		ldr	r2, .L184
 1792 0078 9342     		cmp	r3, r2
 1793 007a 05D1     		bne	.L164
 1794              	.L163:
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 1795              		.loc 1 1581 0 discriminator 3
 1796 007c 374A     		ldr	r2, .L184+4
 1797 007e 9268     		ldr	r2, [r2, #8]
 1798 0080 12F01F0F 		tst	r2, #31
 1799 0084 0BD0     		beq	.L165
 1800 0086 04E0     		b	.L166
 1801              	.L164:
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 1802              		.loc 1 1581 0 discriminator 4
 1803 0088 354A     		ldr	r2, .L184+8
 1804 008a 9268     		ldr	r2, [r2, #8]
 1805 008c 12F01F0F 		tst	r2, #31
 1806 0090 05D0     		beq	.L165
 1807              	.L166:
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 1808              		.loc 1 1581 0 discriminator 5
 1809 0092 B3F1A04F 		cmp	r3, #1342177280
 1810 0096 02D0     		beq	.L165
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 1811              		.loc 1 1581 0 discriminator 6
 1812 0098 324A     		ldr	r2, .L184+12
 1813 009a 9342     		cmp	r3, r2
 1814 009c 01D1     		bne	.L167
 1815              	.L165:
1583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 1816              		.loc 1 1583 0 is_stmt 1
 1817 009e DF68     		ldr	r7, [r3, #12]
 1818              	.LVL116:
 1819 00a0 0AE0     		b	.L168
 1820              	.LVL117:
 1821              	.L167:
1587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 1822              		.loc 1 1587 0
 1823 00a2 B3F1A04F 		cmp	r3, #1342177280
 1824 00a6 06D0     		beq	.L169
1587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 1825              		.loc 1 1587 0 is_stmt 0 discriminator 2
 1826 00a8 2B4A     		ldr	r2, .L184
 1827 00aa 9342     		cmp	r3, r2
 1828 00ac 02D1     		bne	.L181
1587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 1829              		.loc 1 1587 0
 1830 00ae 4FF0A043 		mov	r3, #1342177280
 1831 00b2 00E0     		b	.L169
 1832              	.L181:
 1833 00b4 2B4B     		ldr	r3, .L184+12
 1834              	.L169:
ARM GAS  /tmp/cc0XO8k8.s 			page 167


1587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 1835              		.loc 1 1587 0 discriminator 6
 1836 00b6 DF68     		ldr	r7, [r3, #12]
 1837              	.LVL118:
 1838              	.L168:
 1839 00b8 0D46     		mov	r5, r1
 1840 00ba 0446     		mov	r4, r0
1591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 1841              		.loc 1 1591 0 is_stmt 1
 1842 00bc FFF7FEFF 		bl	HAL_GetTick
 1843              	.LVL119:
 1844 00c0 8046     		mov	r8, r0
 1845              	.LVL120:
1594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 1846              		.loc 1 1594 0
 1847 00c2 13E0     		b	.L171
 1848              	.LVL121:
 1849              	.L173:
1597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 1850              		.loc 1 1597 0
 1851 00c4 B5F1FF3F 		cmp	r5, #-1
 1852 00c8 10D0     		beq	.L171
1599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1853              		.loc 1 1599 0
 1854 00ca 2DB1     		cbz	r5, .L172
1599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1855              		.loc 1 1599 0 is_stmt 0 discriminator 1
 1856 00cc FFF7FEFF 		bl	HAL_GetTick
 1857              	.LVL122:
 1858 00d0 C8EB0000 		rsb	r0, r8, r0
 1859 00d4 8542     		cmp	r5, r0
 1860 00d6 09D2     		bcs	.L171
 1861              	.L172:
1602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 1862              		.loc 1 1602 0 is_stmt 1
 1863 00d8 636C     		ldr	r3, [r4, #68]
 1864 00da 43F00403 		orr	r3, r3, #4
 1865 00de 6364     		str	r3, [r4, #68]
1605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 1866              		.loc 1 1605 0
 1867 00e0 0023     		movs	r3, #0
 1868 00e2 84F84030 		strb	r3, [r4, #64]
1607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 1869              		.loc 1 1607 0
 1870 00e6 0320     		movs	r0, #3
 1871 00e8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1872              	.LVL123:
 1873              	.L171:
1594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 1874              		.loc 1 1594 0
 1875 00ec 2368     		ldr	r3, [r4]
 1876 00ee 1A68     		ldr	r2, [r3]
 1877 00f0 1642     		tst	r6, r2
 1878 00f2 E7D0     		beq	.L173
1613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 1879              		.loc 1 1613 0
 1880 00f4 626C     		ldr	r2, [r4, #68]
ARM GAS  /tmp/cc0XO8k8.s 			page 168


 1881 00f6 42F40072 		orr	r2, r2, #512
 1882 00fa 6264     		str	r2, [r4, #68]
1617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      (READ_BIT (tmp_cfgr, ADC_CFGR_CONT) == RESET)   )
 1883              		.loc 1 1617 0
 1884 00fc DA68     		ldr	r2, [r3, #12]
 1885 00fe 12F4406F 		tst	r2, #3072
 1886 0102 1FD1     		bne	.L174
1617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      (READ_BIT (tmp_cfgr, ADC_CFGR_CONT) == RESET)   )
 1887              		.loc 1 1617 0 is_stmt 0 discriminator 1
 1888 0104 17F4005F 		tst	r7, #8192
 1889 0108 1CD1     		bne	.L174
1621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 1890              		.loc 1 1621 0 is_stmt 1
 1891 010a 1A68     		ldr	r2, [r3]
 1892 010c 12F0080F 		tst	r2, #8
 1893 0110 18D0     		beq	.L174
1625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {        
 1894              		.loc 1 1625 0
 1895 0112 9A68     		ldr	r2, [r3, #8]
 1896 0114 12F0040F 		tst	r2, #4
 1897 0118 0CD1     		bne	.L175
1628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 1898              		.loc 1 1628 0
 1899 011a 626C     		ldr	r2, [r4, #68]
 1900 011c 22F48072 		bic	r2, r2, #256
 1901 0120 6264     		str	r2, [r4, #68]
1630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 1902              		.loc 1 1630 0
 1903 0122 626C     		ldr	r2, [r4, #68]
 1904 0124 12F4805F 		tst	r2, #4096
 1905 0128 0CD1     		bne	.L174
1632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 1906              		.loc 1 1632 0
 1907 012a 626C     		ldr	r2, [r4, #68]
 1908 012c 42F00102 		orr	r2, r2, #1
 1909 0130 6264     		str	r2, [r4, #68]
 1910 0132 07E0     		b	.L174
 1911              	.L175:
1638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 1912              		.loc 1 1638 0
 1913 0134 626C     		ldr	r2, [r4, #68]
 1914 0136 42F02002 		orr	r2, r2, #32
 1915 013a 6264     		str	r2, [r4, #68]
1641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 1916              		.loc 1 1641 0
 1917 013c A26C     		ldr	r2, [r4, #72]
 1918 013e 42F00102 		orr	r2, r2, #1
 1919 0142 A264     		str	r2, [r4, #72]
 1920              	.L174:
1649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 1921              		.loc 1 1649 0
 1922 0144 17F4804F 		tst	r7, #16384
 1923 0148 03D1     		bne	.L182
1653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 1924              		.loc 1 1653 0
 1925 014a 1E60     		str	r6, [r3]
1657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
ARM GAS  /tmp/cc0XO8k8.s 			page 169


 1926              		.loc 1 1657 0
 1927 014c 0020     		movs	r0, #0
 1928 014e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1929              	.LVL124:
 1930              	.L182:
 1931 0152 0020     		movs	r0, #0
1658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 1932              		.loc 1 1658 0
 1933 0154 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1934              	.LVL125:
 1935              	.L185:
 1936              		.align	2
 1937              	.L184:
 1938 0158 00010050 		.word	1342177536
 1939 015c 00030050 		.word	1342178048
 1940 0160 00070050 		.word	1342179072
 1941 0164 00040050 		.word	1342178304
 1942              		.cfi_endproc
 1943              	.LFE128:
 1945              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 1946              		.align	2
 1947              		.global	HAL_ADC_PollForEvent
 1948              		.thumb
 1949              		.thumb_func
 1951              	HAL_ADC_PollForEvent:
 1952              	.LFB129:
1819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart; 
 1953              		.loc 1 1819 0
 1954              		.cfi_startproc
 1955              		@ args = 0, pretend = 0, frame = 0
 1956              		@ frame_needed = 0, uses_anonymous_args = 0
 1957              	.LVL126:
 1958 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1959              	.LCFI21:
 1960              		.cfi_def_cfa_offset 24
 1961              		.cfi_offset 3, -24
 1962              		.cfi_offset 4, -20
 1963              		.cfi_offset 5, -16
 1964              		.cfi_offset 6, -12
 1965              		.cfi_offset 7, -8
 1966              		.cfi_offset 14, -4
 1967 0002 0546     		mov	r5, r0
 1968 0004 0C46     		mov	r4, r1
 1969 0006 1646     		mov	r6, r2
1827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 1970              		.loc 1 1827 0
 1971 0008 FFF7FEFF 		bl	HAL_GetTick
 1972              	.LVL127:
 1973 000c 0746     		mov	r7, r0
 1974              	.LVL128:
1830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 1975              		.loc 1 1830 0
 1976 000e 11E0     		b	.L188
 1977              	.LVL129:
 1978              	.L191:
1833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 1979              		.loc 1 1833 0
ARM GAS  /tmp/cc0XO8k8.s 			page 170


 1980 0010 B6F1FF3F 		cmp	r6, #-1
 1981 0014 0ED0     		beq	.L188
1835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1982              		.loc 1 1835 0
 1983 0016 26B1     		cbz	r6, .L189
1835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1984              		.loc 1 1835 0 is_stmt 0 discriminator 1
 1985 0018 FFF7FEFF 		bl	HAL_GetTick
 1986              	.LVL130:
 1987 001c C01B     		subs	r0, r0, r7
 1988 001e 8642     		cmp	r6, r0
 1989 0020 08D2     		bcs	.L188
 1990              	.L189:
1838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 1991              		.loc 1 1838 0 is_stmt 1
 1992 0022 6B6C     		ldr	r3, [r5, #68]
 1993 0024 43F00403 		orr	r3, r3, #4
 1994 0028 6B64     		str	r3, [r5, #68]
1841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 1995              		.loc 1 1841 0
 1996 002a 0023     		movs	r3, #0
 1997 002c 85F84030 		strb	r3, [r5, #64]
1843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 1998              		.loc 1 1843 0
 1999 0030 0320     		movs	r0, #3
 2000 0032 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2001              	.LVL131:
 2002              	.L188:
1830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 2003              		.loc 1 1830 0
 2004 0034 2B68     		ldr	r3, [r5]
 2005 0036 1A68     		ldr	r2, [r3]
 2006 0038 34EA0202 		bics	r2, r4, r2
 2007 003c E8D1     		bne	.L191
1849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 2008              		.loc 1 1849 0
 2009 003e B4F5807F 		cmp	r4, #256
 2010 0042 12D0     		beq	.L193
 2011 0044 02D8     		bhi	.L194
 2012 0046 802C     		cmp	r4, #128
 2013 0048 07D0     		beq	.L195
 2014 004a 2DE0     		b	.L192
 2015              	.L194:
 2016 004c B4F5007F 		cmp	r4, #512
 2017 0050 14D0     		beq	.L196
 2018 0052 B4F5806F 		cmp	r4, #1024
 2019 0056 1AD0     		beq	.L197
 2020 0058 26E0     		b	.L192
 2021              	.L195:
1862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      
 2022              		.loc 1 1862 0
 2023 005a 6A6C     		ldr	r2, [r5, #68]
 2024 005c 42F48032 		orr	r2, r2, #65536
 2025 0060 6A64     		str	r2, [r5, #68]
1865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     break;
 2026              		.loc 1 1865 0
 2027 0062 8022     		movs	r2, #128
ARM GAS  /tmp/cc0XO8k8.s 			page 171


 2028 0064 1A60     		str	r2, [r3]
1919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 2029              		.loc 1 1919 0
 2030 0066 0020     		movs	r0, #0
1866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 2031              		.loc 1 1866 0
 2032 0068 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2033              	.LVL132:
 2034              	.L193:
1871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 2035              		.loc 1 1871 0
 2036 006a 6A6C     		ldr	r2, [r5, #68]
 2037 006c 42F40032 		orr	r2, r2, #131072
 2038 0070 6A64     		str	r2, [r5, #68]
1874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     break;
 2039              		.loc 1 1874 0
 2040 0072 4FF48072 		mov	r2, #256
 2041 0076 1A60     		str	r2, [r3]
1919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 2042              		.loc 1 1919 0
 2043 0078 0020     		movs	r0, #0
1875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 2044              		.loc 1 1875 0
 2045 007a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2046              	.LVL133:
 2047              	.L196:
1880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 2048              		.loc 1 1880 0
 2049 007c 6A6C     		ldr	r2, [r5, #68]
 2050 007e 42F48022 		orr	r2, r2, #262144
 2051 0082 6A64     		str	r2, [r5, #68]
1883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     break;
 2052              		.loc 1 1883 0
 2053 0084 4FF40072 		mov	r2, #512
 2054 0088 1A60     		str	r2, [r3]
1919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 2055              		.loc 1 1919 0
 2056 008a 0020     		movs	r0, #0
1884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 2057              		.loc 1 1884 0
 2058 008c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2059              	.LVL134:
 2060              	.L197:
1889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 2061              		.loc 1 1889 0
 2062 008e 6A6C     		ldr	r2, [r5, #68]
 2063 0090 42F48042 		orr	r2, r2, #16384
 2064 0094 6A64     		str	r2, [r5, #68]
1892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 2065              		.loc 1 1892 0
 2066 0096 AA6C     		ldr	r2, [r5, #72]
 2067 0098 42F00802 		orr	r2, r2, #8
 2068 009c AA64     		str	r2, [r5, #72]
1895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     break;
 2069              		.loc 1 1895 0
 2070 009e 4FF48062 		mov	r2, #1024
 2071 00a2 1A60     		str	r2, [r3]
ARM GAS  /tmp/cc0XO8k8.s 			page 172


1919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 2072              		.loc 1 1919 0
 2073 00a4 0020     		movs	r0, #0
1896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      
 2074              		.loc 1 1896 0
 2075 00a6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2076              	.LVL135:
 2077              	.L192:
1904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 2078              		.loc 1 1904 0
 2079 00a8 AA6B     		ldr	r2, [r5, #56]
 2080 00aa 012A     		cmp	r2, #1
 2081 00ac 07D1     		bne	.L198
1907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 2082              		.loc 1 1907 0
 2083 00ae 6A6C     		ldr	r2, [r5, #68]
 2084 00b0 42F48062 		orr	r2, r2, #1024
 2085 00b4 6A64     		str	r2, [r5, #68]
1910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 2086              		.loc 1 1910 0
 2087 00b6 AA6C     		ldr	r2, [r5, #72]
 2088 00b8 42F00202 		orr	r2, r2, #2
 2089 00bc AA64     		str	r2, [r5, #72]
 2090              	.L198:
1914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     break;
 2091              		.loc 1 1914 0
 2092 00be 1022     		movs	r2, #16
 2093 00c0 1A60     		str	r2, [r3]
1919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 2094              		.loc 1 1919 0
 2095 00c2 0020     		movs	r0, #0
1920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 2096              		.loc 1 1920 0
 2097 00c4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2098              		.cfi_endproc
 2099              	.LFE129:
 2101 00c6 00BF     		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 2102              		.align	2
 2103              		.global	HAL_ADC_Start_IT
 2104              		.thumb
 2105              		.thumb_func
 2107              	HAL_ADC_Start_IT:
 2108              	.LFB130:
1997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2109              		.loc 1 1997 0
 2110              		.cfi_startproc
 2111              		@ args = 0, pretend = 0, frame = 0
 2112              		@ frame_needed = 0, uses_anonymous_args = 0
 2113              	.LVL136:
2004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 2114              		.loc 1 2004 0
 2115 0000 0368     		ldr	r3, [r0]
 2116 0002 9B68     		ldr	r3, [r3, #8]
 2117 0004 13F0040F 		tst	r3, #4
 2118 0008 40F0CD80 		bne	.L228
2007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 2119              		.loc 1 2007 0
ARM GAS  /tmp/cc0XO8k8.s 			page 173


 2120 000c 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 2121 0010 012B     		cmp	r3, #1
 2122 0012 00F0CA80 		beq	.L229
1997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2123              		.loc 1 1997 0 discriminator 2
 2124 0016 10B5     		push	{r4, lr}
 2125              	.LCFI22:
 2126              		.cfi_def_cfa_offset 8
 2127              		.cfi_offset 4, -8
 2128              		.cfi_offset 14, -4
 2129 0018 0446     		mov	r4, r0
2007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 2130              		.loc 1 2007 0 discriminator 2
 2131 001a 0123     		movs	r3, #1
 2132 001c 80F84030 		strb	r3, [r0, #64]
2010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 2133              		.loc 1 2010 0 discriminator 2
 2134 0020 FFF7FEFF 		bl	ADC_Enable
 2135              	.LVL137:
2013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 2136              		.loc 1 2013 0 discriminator 2
 2137 0024 0346     		mov	r3, r0
 2138 0026 0028     		cmp	r0, #0
 2139 0028 40F0B980 		bne	.L202
2018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 2140              		.loc 1 2018 0
 2141 002c 626C     		ldr	r2, [r4, #68]
 2142 002e 22F47062 		bic	r2, r2, #3840
 2143 0032 22F00102 		bic	r2, r2, #1
 2144 0036 42F48072 		orr	r2, r2, #256
 2145 003a 6264     		str	r2, [r4, #68]
2025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 2146              		.loc 1 2025 0
 2147 003c 2268     		ldr	r2, [r4]
 2148 003e B2F1A04F 		cmp	r2, #1342177280
 2149 0042 02D0     		beq	.L203
2025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 2150              		.loc 1 2025 0 is_stmt 0 discriminator 2
 2151 0044 5B49     		ldr	r1, .L234
 2152 0046 8A42     		cmp	r2, r1
 2153 0048 05D1     		bne	.L204
 2154              	.L203:
2025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 2155              		.loc 1 2025 0 discriminator 3
 2156 004a 5B49     		ldr	r1, .L234+4
 2157 004c 8968     		ldr	r1, [r1, #8]
 2158 004e 11F01F0F 		tst	r1, #31
 2159 0052 0BD0     		beq	.L205
 2160 0054 04E0     		b	.L206
 2161              	.L204:
2025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 2162              		.loc 1 2025 0 discriminator 4
 2163 0056 5949     		ldr	r1, .L234+8
 2164 0058 8968     		ldr	r1, [r1, #8]
 2165 005a 11F01F0F 		tst	r1, #31
 2166 005e 05D0     		beq	.L205
 2167              	.L206:
ARM GAS  /tmp/cc0XO8k8.s 			page 174


2025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 2168              		.loc 1 2025 0 discriminator 5
 2169 0060 B2F1A04F 		cmp	r2, #1342177280
 2170 0064 02D0     		beq	.L205
2025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 2171              		.loc 1 2025 0 discriminator 6
 2172 0066 5649     		ldr	r1, .L234+12
 2173 0068 8A42     		cmp	r2, r1
 2174 006a 0ED1     		bne	.L207
 2175              	.L205:
2028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 2176              		.loc 1 2028 0 is_stmt 1
 2177 006c 616C     		ldr	r1, [r4, #68]
 2178 006e 21F48011 		bic	r1, r1, #1048576
 2179 0072 6164     		str	r1, [r4, #68]
2032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 2180              		.loc 1 2032 0
 2181 0074 D168     		ldr	r1, [r2, #12]
 2182 0076 11F0007F 		tst	r1, #33554432
 2183 007a 21D0     		beq	.L208
2034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 2184              		.loc 1 2034 0
 2185 007c 616C     		ldr	r1, [r4, #68]
 2186 007e 21F44051 		bic	r1, r1, #12288
 2187 0082 41F48051 		orr	r1, r1, #4096
 2188 0086 6164     		str	r1, [r4, #68]
 2189 0088 1AE0     		b	.L208
 2190              	.L207:
2040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 2191              		.loc 1 2040 0
 2192 008a 616C     		ldr	r1, [r4, #68]
 2193 008c 41F48011 		orr	r1, r1, #1048576
 2194 0090 6164     		str	r1, [r4, #68]
2044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 2195              		.loc 1 2044 0
 2196 0092 B2F1A04F 		cmp	r2, #1342177280
 2197 0096 02D0     		beq	.L209
2044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 2198              		.loc 1 2044 0 is_stmt 0 discriminator 2
 2199 0098 4649     		ldr	r1, .L234
 2200 009a 8A42     		cmp	r2, r1
 2201 009c 05D1     		bne	.L210
 2202              	.L209:
2044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 2203              		.loc 1 2044 0 discriminator 3
 2204 009e 4FF0A041 		mov	r1, #1342177280
 2205 00a2 C968     		ldr	r1, [r1, #12]
 2206 00a4 C1F34061 		ubfx	r1, r1, #25, #1
 2207 00a8 03E0     		b	.L211
 2208              	.L210:
2044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 2209              		.loc 1 2044 0 discriminator 4
 2210 00aa 4549     		ldr	r1, .L234+12
 2211 00ac C968     		ldr	r1, [r1, #12]
 2212 00ae C1F34061 		ubfx	r1, r1, #25, #1
 2213              	.L211:
2044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
ARM GAS  /tmp/cc0XO8k8.s 			page 175


 2214              		.loc 1 2044 0 discriminator 6
 2215 00b2 29B1     		cbz	r1, .L208
2046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 2216              		.loc 1 2046 0 is_stmt 1
 2217 00b4 616C     		ldr	r1, [r4, #68]
 2218 00b6 21F44051 		bic	r1, r1, #12288
 2219 00ba 41F48051 		orr	r1, r1, #4096
 2220 00be 6164     		str	r1, [r4, #68]
 2221              	.L208:
2051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 2222              		.loc 1 2051 0
 2223 00c0 616C     		ldr	r1, [r4, #68]
 2224 00c2 11F4805F 		tst	r1, #4096
 2225 00c6 04D0     		beq	.L212
2054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 2226              		.loc 1 2054 0
 2227 00c8 A16C     		ldr	r1, [r4, #72]
 2228 00ca 21F00601 		bic	r1, r1, #6
 2229 00ce A164     		str	r1, [r4, #72]
 2230 00d0 01E0     		b	.L213
 2231              	.L212:
2059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 2232              		.loc 1 2059 0
 2233 00d2 0021     		movs	r1, #0
 2234 00d4 A164     		str	r1, [r4, #72]
 2235              	.L213:
2065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 2236              		.loc 1 2065 0
 2237 00d6 0021     		movs	r1, #0
 2238 00d8 84F84010 		strb	r1, [r4, #64]
2070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 2239              		.loc 1 2070 0
 2240 00dc 1C21     		movs	r1, #28
 2241 00de 1160     		str	r1, [r2]
2074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 2242              		.loc 1 2074 0
 2243 00e0 6269     		ldr	r2, [r4, #20]
 2244 00e2 082A     		cmp	r2, #8
 2245 00e4 0AD1     		bne	.L231
2077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, (ADC_IT_EOS));
 2246              		.loc 1 2077 0
 2247 00e6 2168     		ldr	r1, [r4]
 2248 00e8 4A68     		ldr	r2, [r1, #4]
 2249 00ea 22F00402 		bic	r2, r2, #4
 2250 00ee 4A60     		str	r2, [r1, #4]
2078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           break;
 2251              		.loc 1 2078 0
 2252 00f0 2168     		ldr	r1, [r4]
 2253 00f2 4A68     		ldr	r2, [r1, #4]
 2254 00f4 42F00802 		orr	r2, r2, #8
 2255 00f8 4A60     		str	r2, [r1, #4]
2079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* case ADC_EOC_SINGLE_CONV */
 2256              		.loc 1 2079 0
 2257 00fa 04E0     		b	.L216
 2258              	.L231:
2082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           break;
 2259              		.loc 1 2082 0
ARM GAS  /tmp/cc0XO8k8.s 			page 176


 2260 00fc 2168     		ldr	r1, [r4]
 2261 00fe 4A68     		ldr	r2, [r1, #4]
 2262 0100 42F00C02 		orr	r2, r2, #12
 2263 0104 4A60     		str	r2, [r1, #4]
 2264              	.L216:
2091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 2265              		.loc 1 2091 0
 2266 0106 A26B     		ldr	r2, [r4, #56]
 2267 0108 012A     		cmp	r2, #1
 2268 010a 04D1     		bne	.L217
2093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 2269              		.loc 1 2093 0
 2270 010c 2168     		ldr	r1, [r4]
 2271 010e 4A68     		ldr	r2, [r1, #4]
 2272 0110 22F01002 		bic	r2, r2, #16
 2273 0114 4A60     		str	r2, [r1, #4]
 2274              	.L217:
2103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 2275              		.loc 1 2103 0
 2276 0116 2268     		ldr	r2, [r4]
 2277 0118 B2F1A04F 		cmp	r2, #1342177280
 2278 011c 02D0     		beq	.L218
2103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 2279              		.loc 1 2103 0 is_stmt 0 discriminator 2
 2280 011e 2549     		ldr	r1, .L234
 2281 0120 8A42     		cmp	r2, r1
 2282 0122 05D1     		bne	.L219
 2283              	.L218:
2103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 2284              		.loc 1 2103 0 discriminator 3
 2285 0124 2449     		ldr	r1, .L234+4
 2286 0126 8968     		ldr	r1, [r1, #8]
 2287 0128 11F01F0F 		tst	r1, #31
 2288 012c 05D1     		bne	.L221
 2289 012e 30E0     		b	.L220
 2290              	.L219:
2103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 2291              		.loc 1 2103 0 discriminator 4
 2292 0130 2249     		ldr	r1, .L234+8
 2293 0132 8968     		ldr	r1, [r1, #8]
 2294 0134 11F01F0F 		tst	r1, #31
 2295 0138 2BD0     		beq	.L220
 2296              	.L221:
2103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 2297              		.loc 1 2103 0 discriminator 5
 2298 013a B2F1A04F 		cmp	r2, #1342177280
 2299 013e 02D0     		beq	.L222
2103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 2300              		.loc 1 2103 0 discriminator 7
 2301 0140 1C49     		ldr	r1, .L234
 2302 0142 8A42     		cmp	r2, r1
 2303 0144 06D1     		bne	.L223
 2304              	.L222:
2103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 2305              		.loc 1 2103 0 discriminator 8
 2306 0146 1C49     		ldr	r1, .L234+4
 2307 0148 8968     		ldr	r1, [r1, #8]
ARM GAS  /tmp/cc0XO8k8.s 			page 177


 2308 014a 01F01F01 		and	r1, r1, #31
 2309 014e 0529     		cmp	r1, #5
 2310 0150 06D1     		bne	.L224
 2311 0152 1EE0     		b	.L220
 2312              	.L223:
2103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 2313              		.loc 1 2103 0 discriminator 9
 2314 0154 1949     		ldr	r1, .L234+8
 2315 0156 8968     		ldr	r1, [r1, #8]
 2316 0158 01F01F01 		and	r1, r1, #31
 2317 015c 0529     		cmp	r1, #5
 2318 015e 18D0     		beq	.L220
 2319              	.L224:
2103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 2320              		.loc 1 2103 0 discriminator 10
 2321 0160 B2F1A04F 		cmp	r2, #1342177280
 2322 0164 02D0     		beq	.L225
2103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 2323              		.loc 1 2103 0 discriminator 12
 2324 0166 1349     		ldr	r1, .L234
 2325 0168 8A42     		cmp	r2, r1
 2326 016a 06D1     		bne	.L226
 2327              	.L225:
2103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 2328              		.loc 1 2103 0 discriminator 13
 2329 016c 1249     		ldr	r1, .L234+4
 2330 016e 8968     		ldr	r1, [r1, #8]
 2331 0170 01F01F01 		and	r1, r1, #31
 2332 0174 0929     		cmp	r1, #9
 2333 0176 06D1     		bne	.L227
 2334 0178 0BE0     		b	.L220
 2335              	.L226:
2103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 2336              		.loc 1 2103 0 discriminator 14
 2337 017a 1049     		ldr	r1, .L234+8
 2338 017c 8968     		ldr	r1, [r1, #8]
 2339 017e 01F01F01 		and	r1, r1, #31
 2340 0182 0929     		cmp	r1, #9
 2341 0184 05D0     		beq	.L220
 2342              	.L227:
2103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 2343              		.loc 1 2103 0 discriminator 15
 2344 0186 B2F1A04F 		cmp	r2, #1342177280
 2345 018a 02D0     		beq	.L220
2103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 2346              		.loc 1 2103 0 discriminator 16
 2347 018c 0C49     		ldr	r1, .L234+12
 2348 018e 8A42     		cmp	r2, r1
 2349 0190 0DD1     		bne	.L230
 2350              	.L220:
2105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 2351              		.loc 1 2105 0 is_stmt 1
 2352 0192 9168     		ldr	r1, [r2, #8]
 2353 0194 41F00401 		orr	r1, r1, #4
 2354 0198 9160     		str	r1, [r2, #8]
2010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 2355              		.loc 1 2010 0
ARM GAS  /tmp/cc0XO8k8.s 			page 178


 2356 019a 1846     		mov	r0, r3
 2357              	.LVL138:
 2358 019c 10BD     		pop	{r4, pc}
 2359              	.LVL139:
 2360              	.L202:
2111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 2361              		.loc 1 2111 0
 2362 019e 0022     		movs	r2, #0
 2363 01a0 84F84020 		strb	r2, [r4, #64]
 2364 01a4 10BD     		pop	{r4, pc}
 2365              	.LVL140:
 2366              	.L228:
 2367              	.LCFI23:
 2368              		.cfi_def_cfa_offset 0
 2369              		.cfi_restore 4
 2370              		.cfi_restore 14
2116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 2371              		.loc 1 2116 0
 2372 01a6 0220     		movs	r0, #2
 2373              	.LVL141:
2121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 2374              		.loc 1 2121 0
 2375 01a8 7047     		bx	lr
 2376              	.LVL142:
 2377              	.L229:
2007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 2378              		.loc 1 2007 0
 2379 01aa 0220     		movs	r0, #2
 2380              	.LVL143:
 2381 01ac 7047     		bx	lr
 2382              	.LVL144:
 2383              	.L230:
 2384              	.LCFI24:
 2385              		.cfi_def_cfa_offset 8
 2386              		.cfi_offset 4, -8
 2387              		.cfi_offset 14, -4
2010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 2388              		.loc 1 2010 0
 2389 01ae 1846     		mov	r0, r3
 2390              	.LVL145:
2121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 2391              		.loc 1 2121 0
 2392 01b0 10BD     		pop	{r4, pc}
 2393              	.LVL146:
 2394              	.L235:
 2395 01b2 00BF     		.align	2
 2396              	.L234:
 2397 01b4 00010050 		.word	1342177536
 2398 01b8 00030050 		.word	1342178048
 2399 01bc 00070050 		.word	1342179072
 2400 01c0 00040050 		.word	1342178304
 2401              		.cfi_endproc
 2402              	.LFE130:
 2404              		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 2405              		.align	2
 2406              		.global	HAL_ADC_Stop_IT
 2407              		.thumb
ARM GAS  /tmp/cc0XO8k8.s 			page 179


 2408              		.thumb_func
 2410              	HAL_ADC_Stop_IT:
 2411              	.LFB131:
2234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2412              		.loc 1 2234 0
 2413              		.cfi_startproc
 2414              		@ args = 0, pretend = 0, frame = 0
 2415              		@ frame_needed = 0, uses_anonymous_args = 0
 2416              	.LVL147:
2241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 2417              		.loc 1 2241 0
 2418 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 2419 0004 012B     		cmp	r3, #1
 2420 0006 20D0     		beq	.L239
2234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2421              		.loc 1 2234 0 discriminator 2
 2422 0008 10B5     		push	{r4, lr}
 2423              	.LCFI25:
 2424              		.cfi_def_cfa_offset 8
 2425              		.cfi_offset 4, -8
 2426              		.cfi_offset 14, -4
 2427 000a 0446     		mov	r4, r0
2241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 2428              		.loc 1 2241 0 discriminator 2
 2429 000c 0123     		movs	r3, #1
 2430 000e 80F84030 		strb	r3, [r0, #64]
2244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 2431              		.loc 1 2244 0 discriminator 2
 2432 0012 6C21     		movs	r1, #108
 2433 0014 FFF7FEFF 		bl	ADC_ConversionStop
 2434              	.LVL148:
2247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 2435              		.loc 1 2247 0 discriminator 2
 2436 0018 0346     		mov	r3, r0
 2437 001a 88B9     		cbnz	r0, .L238
2251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 2438              		.loc 1 2251 0
 2439 001c 2268     		ldr	r2, [r4]
 2440 001e 5368     		ldr	r3, [r2, #4]
 2441 0020 23F01C03 		bic	r3, r3, #28
 2442 0024 5360     		str	r3, [r2, #4]
2254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 2443              		.loc 1 2254 0
 2444 0026 2046     		mov	r0, r4
 2445              	.LVL149:
 2446 0028 FFF7FEFF 		bl	ADC_Disable
 2447              	.LVL150:
2257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 2448              		.loc 1 2257 0
 2449 002c 0346     		mov	r3, r0
 2450 002e 38B9     		cbnz	r0, .L238
2260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 2451              		.loc 1 2260 0
 2452 0030 626C     		ldr	r2, [r4, #68]
 2453 0032 22F48852 		bic	r2, r2, #4352
 2454 0036 22F00102 		bic	r2, r2, #1
 2455 003a 42F00102 		orr	r2, r2, #1
ARM GAS  /tmp/cc0XO8k8.s 			page 180


 2456 003e 6264     		str	r2, [r4, #68]
 2457              	.L238:
 2458              	.LVL151:
2267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 2459              		.loc 1 2267 0
 2460 0040 0022     		movs	r2, #0
 2461 0042 84F84020 		strb	r2, [r4, #64]
2270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 2462              		.loc 1 2270 0
 2463 0046 1846     		mov	r0, r3
 2464 0048 10BD     		pop	{r4, pc}
 2465              	.LVL152:
 2466              	.L239:
 2467              	.LCFI26:
 2468              		.cfi_def_cfa_offset 0
 2469              		.cfi_restore 4
 2470              		.cfi_restore 14
2241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 2471              		.loc 1 2241 0
 2472 004a 0220     		movs	r0, #2
 2473              	.LVL153:
 2474 004c 7047     		bx	lr
 2475              		.cfi_endproc
 2476              	.LFE131:
 2478 004e 00BF     		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 2479              		.align	2
 2480              		.global	HAL_ADC_Start_DMA
 2481              		.thumb
 2482              		.thumb_func
 2484              	HAL_ADC_Start_DMA:
 2485              	.LFB132:
2340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2486              		.loc 1 2340 0
 2487              		.cfi_startproc
 2488              		@ args = 0, pretend = 0, frame = 0
 2489              		@ frame_needed = 0, uses_anonymous_args = 0
 2490              	.LVL154:
 2491 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2492              	.LCFI27:
 2493              		.cfi_def_cfa_offset 24
 2494              		.cfi_offset 3, -24
 2495              		.cfi_offset 4, -20
 2496              		.cfi_offset 5, -16
 2497              		.cfi_offset 6, -12
 2498              		.cfi_offset 7, -8
 2499              		.cfi_offset 14, -4
 2500              	.LVL155:
2347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 2501              		.loc 1 2347 0
 2502 0002 0468     		ldr	r4, [r0]
 2503 0004 A568     		ldr	r5, [r4, #8]
 2504 0006 15F0040F 		tst	r5, #4
 2505 000a 40F0AD80 		bne	.L260
2350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 2506              		.loc 1 2350 0
 2507 000e 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 2508 0012 012B     		cmp	r3, #1
ARM GAS  /tmp/cc0XO8k8.s 			page 181


 2509 0014 00F0AA80 		beq	.L261
2350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 2510              		.loc 1 2350 0 is_stmt 0 discriminator 2
 2511 0018 0123     		movs	r3, #1
 2512 001a 80F84030 		strb	r3, [r0, #64]
2355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 2513              		.loc 1 2355 0 is_stmt 1 discriminator 2
 2514 001e B4F1A04F 		cmp	r4, #1342177280
 2515 0022 02D0     		beq	.L244
 2516 0024 524B     		ldr	r3, .L263
 2517 0026 9C42     		cmp	r4, r3
 2518 0028 07D1     		bne	.L245
 2519              	.L244:
2355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 2520              		.loc 1 2355 0 is_stmt 0 discriminator 3
 2521 002a 524B     		ldr	r3, .L263+4
 2522 002c 9B68     		ldr	r3, [r3, #8]
 2523 002e 13F01F0F 		tst	r3, #31
 2524 0032 0CBF     		ite	eq
 2525 0034 0123     		moveq	r3, #1
 2526 0036 0023     		movne	r3, #0
 2527 0038 06E0     		b	.L246
 2528              	.L245:
2355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 2529              		.loc 1 2355 0 discriminator 4
 2530 003a 4F4B     		ldr	r3, .L263+8
 2531 003c 9B68     		ldr	r3, [r3, #8]
 2532 003e 13F01F0F 		tst	r3, #31
 2533 0042 0CBF     		ite	eq
 2534 0044 0123     		moveq	r3, #1
 2535 0046 0023     		movne	r3, #0
 2536              	.L246:
2355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 2537              		.loc 1 2355 0 discriminator 6
 2538 0048 002B     		cmp	r3, #0
 2539 004a 00F08880 		beq	.L247
 2540 004e 1646     		mov	r6, r2
 2541 0050 0D46     		mov	r5, r1
 2542 0052 0746     		mov	r7, r0
2358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 2543              		.loc 1 2358 0 is_stmt 1
 2544 0054 FFF7FEFF 		bl	ADC_Enable
 2545              	.LVL156:
2361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 2546              		.loc 1 2361 0
 2547 0058 0446     		mov	r4, r0
 2548 005a 0028     		cmp	r0, #0
 2549 005c 7BD1     		bne	.L248
2366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL
 2550              		.loc 1 2366 0
 2551 005e 7B6C     		ldr	r3, [r7, #68]
 2552 0060 23F47063 		bic	r3, r3, #3840
 2553 0064 23F00103 		bic	r3, r3, #1
 2554 0068 43F48073 		orr	r3, r3, #256
 2555 006c 7B64     		str	r3, [r7, #68]
2373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 2556              		.loc 1 2373 0
ARM GAS  /tmp/cc0XO8k8.s 			page 182


 2557 006e 3B68     		ldr	r3, [r7]
 2558 0070 B3F1A04F 		cmp	r3, #1342177280
 2559 0074 02D0     		beq	.L249
2373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 2560              		.loc 1 2373 0 is_stmt 0 discriminator 2
 2561 0076 3E4A     		ldr	r2, .L263
 2562 0078 9342     		cmp	r3, r2
 2563 007a 05D1     		bne	.L250
 2564              	.L249:
2373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 2565              		.loc 1 2373 0 discriminator 3
 2566 007c 3D4A     		ldr	r2, .L263+4
 2567 007e 9268     		ldr	r2, [r2, #8]
 2568 0080 12F01F0F 		tst	r2, #31
 2569 0084 0BD0     		beq	.L251
 2570 0086 04E0     		b	.L252
 2571              	.L250:
2373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 2572              		.loc 1 2373 0 discriminator 4
 2573 0088 3B4A     		ldr	r2, .L263+8
 2574 008a 9268     		ldr	r2, [r2, #8]
 2575 008c 12F01F0F 		tst	r2, #31
 2576 0090 05D0     		beq	.L251
 2577              	.L252:
2373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 2578              		.loc 1 2373 0 discriminator 5
 2579 0092 B3F1A04F 		cmp	r3, #1342177280
 2580 0096 02D0     		beq	.L251
2373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 2581              		.loc 1 2373 0 discriminator 6
 2582 0098 384A     		ldr	r2, .L263+12
 2583 009a 9342     		cmp	r3, r2
 2584 009c 0ED1     		bne	.L253
 2585              	.L251:
2376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
 2586              		.loc 1 2376 0 is_stmt 1
 2587 009e 7A6C     		ldr	r2, [r7, #68]
 2588 00a0 22F48012 		bic	r2, r2, #1048576
 2589 00a4 7A64     		str	r2, [r7, #68]
2380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
 2590              		.loc 1 2380 0
 2591 00a6 DB68     		ldr	r3, [r3, #12]
 2592 00a8 13F0007F 		tst	r3, #33554432
 2593 00ac 21D0     		beq	.L254
2382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           }
 2594              		.loc 1 2382 0
 2595 00ae 7B6C     		ldr	r3, [r7, #68]
 2596 00b0 23F44053 		bic	r3, r3, #12288
 2597 00b4 43F48053 		orr	r3, r3, #4096
 2598 00b8 7B64     		str	r3, [r7, #68]
 2599 00ba 1AE0     		b	.L254
 2600              	.L253:
2388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
 2601              		.loc 1 2388 0
 2602 00bc 7A6C     		ldr	r2, [r7, #68]
 2603 00be 42F48012 		orr	r2, r2, #1048576
 2604 00c2 7A64     		str	r2, [r7, #68]
ARM GAS  /tmp/cc0XO8k8.s 			page 183


2392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
 2605              		.loc 1 2392 0
 2606 00c4 B3F1A04F 		cmp	r3, #1342177280
 2607 00c8 02D0     		beq	.L255
2392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
 2608              		.loc 1 2392 0 is_stmt 0 discriminator 2
 2609 00ca 294A     		ldr	r2, .L263
 2610 00cc 9342     		cmp	r3, r2
 2611 00ce 05D1     		bne	.L256
 2612              	.L255:
2392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
 2613              		.loc 1 2392 0 discriminator 3
 2614 00d0 4FF0A043 		mov	r3, #1342177280
 2615 00d4 DB68     		ldr	r3, [r3, #12]
 2616 00d6 C3F34063 		ubfx	r3, r3, #25, #1
 2617 00da 03E0     		b	.L257
 2618              	.L256:
2392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
 2619              		.loc 1 2392 0 discriminator 4
 2620 00dc 274B     		ldr	r3, .L263+12
 2621 00de DB68     		ldr	r3, [r3, #12]
 2622 00e0 C3F34063 		ubfx	r3, r3, #25, #1
 2623              	.L257:
2392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
 2624              		.loc 1 2392 0 discriminator 6
 2625 00e4 2BB1     		cbz	r3, .L254
2394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           }
 2626              		.loc 1 2394 0 is_stmt 1
 2627 00e6 7B6C     		ldr	r3, [r7, #68]
 2628 00e8 23F44053 		bic	r3, r3, #12288
 2629 00ec 43F48053 		orr	r3, r3, #4096
 2630 00f0 7B64     		str	r3, [r7, #68]
 2631              	.L254:
2399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 2632              		.loc 1 2399 0
 2633 00f2 7B6C     		ldr	r3, [r7, #68]
 2634 00f4 13F4805F 		tst	r3, #4096
 2635 00f8 04D0     		beq	.L258
2402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 2636              		.loc 1 2402 0
 2637 00fa BB6C     		ldr	r3, [r7, #72]
 2638 00fc 23F00603 		bic	r3, r3, #6
 2639 0100 BB64     		str	r3, [r7, #72]
 2640 0102 01E0     		b	.L259
 2641              	.L258:
2407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 2642              		.loc 1 2407 0
 2643 0104 0023     		movs	r3, #0
 2644 0106 BB64     		str	r3, [r7, #72]
 2645              	.L259:
2413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 2646              		.loc 1 2413 0
 2647 0108 0023     		movs	r3, #0
 2648 010a 87F84030 		strb	r3, [r7, #64]
2417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 2649              		.loc 1 2417 0
 2650 010e FB6B     		ldr	r3, [r7, #60]
ARM GAS  /tmp/cc0XO8k8.s 			page 184


 2651 0110 1B4A     		ldr	r2, .L263+16
 2652 0112 9A62     		str	r2, [r3, #40]
2420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 2653              		.loc 1 2420 0
 2654 0114 FB6B     		ldr	r3, [r7, #60]
 2655 0116 1B4A     		ldr	r2, .L263+20
 2656 0118 DA62     		str	r2, [r3, #44]
2423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 2657              		.loc 1 2423 0
 2658 011a FB6B     		ldr	r3, [r7, #60]
 2659 011c 1A4A     		ldr	r2, .L263+24
 2660 011e 1A63     		str	r2, [r3, #48]
2432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 2661              		.loc 1 2432 0
 2662 0120 3B68     		ldr	r3, [r7]
 2663 0122 1C22     		movs	r2, #28
 2664 0124 1A60     		str	r2, [r3]
2435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 2665              		.loc 1 2435 0
 2666 0126 3A68     		ldr	r2, [r7]
 2667 0128 5368     		ldr	r3, [r2, #4]
 2668 012a 43F01003 		orr	r3, r3, #16
 2669 012e 5360     		str	r3, [r2, #4]
2438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 2670              		.loc 1 2438 0
 2671 0130 3A68     		ldr	r2, [r7]
 2672 0132 D368     		ldr	r3, [r2, #12]
 2673 0134 43F00103 		orr	r3, r3, #1
 2674 0138 D360     		str	r3, [r2, #12]
2441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  
 2675              		.loc 1 2441 0
 2676 013a 3968     		ldr	r1, [r7]
 2677 013c 3346     		mov	r3, r6
 2678 013e 2A46     		mov	r2, r5
 2679 0140 4031     		adds	r1, r1, #64
 2680 0142 F86B     		ldr	r0, [r7, #60]
 2681              	.LVL157:
 2682 0144 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2683              	.LVL158:
2447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 2684              		.loc 1 2447 0
 2685 0148 3A68     		ldr	r2, [r7]
 2686 014a 9368     		ldr	r3, [r2, #8]
 2687 014c 43F00403 		orr	r3, r3, #4
 2688 0150 9360     		str	r3, [r2, #8]
2358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 2689              		.loc 1 2358 0
 2690 0152 2046     		mov	r0, r4
 2691 0154 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2692              	.LVL159:
 2693              	.L248:
2453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 2694              		.loc 1 2453 0
 2695 0156 0023     		movs	r3, #0
 2696 0158 87F84030 		strb	r3, [r7, #64]
 2697 015c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2698              	.LVL160:
ARM GAS  /tmp/cc0XO8k8.s 			page 185


 2699              	.L247:
2461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 2700              		.loc 1 2461 0
 2701 015e 0023     		movs	r3, #0
 2702 0160 80F84030 		strb	r3, [r0, #64]
2458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 2703              		.loc 1 2458 0
 2704 0164 0120     		movs	r0, #1
 2705              	.LVL161:
 2706 0166 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2707              	.LVL162:
 2708              	.L260:
2466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 2709              		.loc 1 2466 0
 2710 0168 0220     		movs	r0, #2
 2711              	.LVL163:
 2712 016a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2713              	.LVL164:
 2714              	.L261:
2350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 2715              		.loc 1 2350 0
 2716 016c 0220     		movs	r0, #2
 2717              	.LVL165:
2471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 2718              		.loc 1 2471 0
 2719 016e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2720              	.L264:
 2721              		.align	2
 2722              	.L263:
 2723 0170 00010050 		.word	1342177536
 2724 0174 00030050 		.word	1342178048
 2725 0178 00070050 		.word	1342179072
 2726 017c 00040050 		.word	1342178304
 2727 0180 00000000 		.word	ADC_DMAConvCplt
 2728 0184 00000000 		.word	ADC_DMAHalfConvCplt
 2729 0188 00000000 		.word	ADC_DMAError
 2730              		.cfi_endproc
 2731              	.LFE132:
 2733              		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 2734              		.align	2
 2735              		.global	HAL_ADC_Stop_DMA
 2736              		.thumb
 2737              		.thumb_func
 2739              	HAL_ADC_Stop_DMA:
 2740              	.LFB133:
2611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2741              		.loc 1 2611 0
 2742              		.cfi_startproc
 2743              		@ args = 0, pretend = 0, frame = 0
 2744              		@ frame_needed = 0, uses_anonymous_args = 0
 2745              	.LVL166:
 2746 0000 38B5     		push	{r3, r4, r5, lr}
 2747              	.LCFI28:
 2748              		.cfi_def_cfa_offset 16
 2749              		.cfi_offset 3, -16
 2750              		.cfi_offset 4, -12
 2751              		.cfi_offset 5, -8
ARM GAS  /tmp/cc0XO8k8.s 			page 186


 2752              		.cfi_offset 14, -4
 2753              	.LVL167:
2618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 2754              		.loc 1 2618 0
 2755 0002 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 2756 0006 012B     		cmp	r3, #1
 2757 0008 32D0     		beq	.L271
 2758 000a 0546     		mov	r5, r0
2618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 2759              		.loc 1 2618 0 is_stmt 0 discriminator 2
 2760 000c 0123     		movs	r3, #1
 2761 000e 80F84030 		strb	r3, [r0, #64]
2621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 2762              		.loc 1 2621 0 is_stmt 1 discriminator 2
 2763 0012 6C21     		movs	r1, #108
 2764 0014 FFF7FEFF 		bl	ADC_ConversionStop
 2765              	.LVL168:
2624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 2766              		.loc 1 2624 0 discriminator 2
 2767 0018 0446     		mov	r4, r0
 2768 001a 20BB     		cbnz	r0, .L267
2627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 2769              		.loc 1 2627 0
 2770 001c 2A68     		ldr	r2, [r5]
 2771 001e D368     		ldr	r3, [r2, #12]
 2772 0020 23F00103 		bic	r3, r3, #1
 2773 0024 D360     		str	r3, [r2, #12]
2631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 2774              		.loc 1 2631 0
 2775 0026 E86B     		ldr	r0, [r5, #60]
 2776              	.LVL169:
 2777 0028 FFF7FEFF 		bl	HAL_DMA_Abort
 2778              	.LVL170:
2634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 2779              		.loc 1 2634 0
 2780 002c 0446     		mov	r4, r0
 2781 002e 18B1     		cbz	r0, .L268
2637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 2782              		.loc 1 2637 0
 2783 0030 6B6C     		ldr	r3, [r5, #68]
 2784 0032 43F04003 		orr	r3, r3, #64
 2785 0036 6B64     		str	r3, [r5, #68]
 2786              	.L268:
2641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 2787              		.loc 1 2641 0
 2788 0038 2A68     		ldr	r2, [r5]
 2789 003a 5368     		ldr	r3, [r2, #4]
 2790 003c 23F01003 		bic	r3, r3, #16
 2791 0040 5360     		str	r3, [r2, #4]
2646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 2792              		.loc 1 2646 0
 2793 0042 24B9     		cbnz	r4, .L269
2648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 2794              		.loc 1 2648 0
 2795 0044 2846     		mov	r0, r5
 2796              	.LVL171:
 2797 0046 FFF7FEFF 		bl	ADC_Disable
ARM GAS  /tmp/cc0XO8k8.s 			page 187


 2798              	.LVL172:
 2799 004a 0446     		mov	r4, r0
 2800              	.LVL173:
 2801 004c 02E0     		b	.L270
 2802              	.LVL174:
 2803              	.L269:
2652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 2804              		.loc 1 2652 0
 2805 004e 2846     		mov	r0, r5
 2806              	.LVL175:
 2807 0050 FFF7FEFF 		bl	ADC_Disable
 2808              	.LVL176:
 2809              	.L270:
2656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 2810              		.loc 1 2656 0
 2811 0054 3CB9     		cbnz	r4, .L267
2659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 2812              		.loc 1 2659 0
 2813 0056 6B6C     		ldr	r3, [r5, #68]
 2814 0058 23F48853 		bic	r3, r3, #4352
 2815 005c 23F00103 		bic	r3, r3, #1
 2816 0060 43F00103 		orr	r3, r3, #1
 2817 0064 6B64     		str	r3, [r5, #68]
 2818              	.LVL177:
 2819              	.L267:
2667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 2820              		.loc 1 2667 0
 2821 0066 0023     		movs	r3, #0
 2822 0068 85F84030 		strb	r3, [r5, #64]
2670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 2823              		.loc 1 2670 0
 2824 006c 2046     		mov	r0, r4
 2825 006e 38BD     		pop	{r3, r4, r5, pc}
 2826              	.LVL178:
 2827              	.L271:
2618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 2828              		.loc 1 2618 0
 2829 0070 0220     		movs	r0, #2
 2830              	.LVL179:
2671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 2831              		.loc 1 2671 0
 2832 0072 38BD     		pop	{r3, r4, r5, pc}
 2833              		.cfi_endproc
 2834              	.LFE133:
 2836              		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 2837              		.align	2
 2838              		.global	HAL_ADC_GetValue
 2839              		.thumb
 2840              		.thumb_func
 2842              	HAL_ADC_GetValue:
 2843              	.LFB134:
2761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
 2844              		.loc 1 2761 0
 2845              		.cfi_startproc
 2846              		@ args = 0, pretend = 0, frame = 0
 2847              		@ frame_needed = 0, uses_anonymous_args = 0
 2848              		@ link register save eliminated.
ARM GAS  /tmp/cc0XO8k8.s 			page 188


 2849              	.LVL180:
2769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 2850              		.loc 1 2769 0
 2851 0000 0368     		ldr	r3, [r0]
 2852 0002 186C     		ldr	r0, [r3, #64]
 2853              	.LVL181:
2770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 2854              		.loc 1 2770 0
 2855 0004 7047     		bx	lr
 2856              		.cfi_endproc
 2857              	.LFE134:
 2859 0006 00BF     		.section	.text.HAL_ADCEx_Calibration_Start,"ax",%progbits
 2860              		.align	2
 2861              		.global	HAL_ADCEx_Calibration_Start
 2862              		.thumb
 2863              		.thumb_func
 2865              	HAL_ADCEx_Calibration_Start:
 2866              	.LFB136:
3246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2867              		.loc 1 3246 0
 2868              		.cfi_startproc
 2869              		@ args = 0, pretend = 0, frame = 0
 2870              		@ frame_needed = 0, uses_anonymous_args = 0
 2871              	.LVL182:
3255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****    
 2872              		.loc 1 3255 0
 2873 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 2874 0004 012B     		cmp	r3, #1
 2875 0006 40D0     		beq	.L280
3246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2876              		.loc 1 3246 0 discriminator 2
 2877 0008 70B5     		push	{r4, r5, r6, lr}
 2878              	.LCFI29:
 2879              		.cfi_def_cfa_offset 16
 2880              		.cfi_offset 4, -16
 2881              		.cfi_offset 5, -12
 2882              		.cfi_offset 6, -8
 2883              		.cfi_offset 14, -4
 2884 000a 0E46     		mov	r6, r1
 2885 000c 0446     		mov	r4, r0
3255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****    
 2886              		.loc 1 3255 0 discriminator 2
 2887 000e 0123     		movs	r3, #1
 2888 0010 80F84030 		strb	r3, [r0, #64]
3260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 2889              		.loc 1 3260 0 discriminator 2
 2890 0014 FFF7FEFF 		bl	ADC_Disable
 2891              	.LVL183:
3263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 2892              		.loc 1 3263 0 discriminator 2
 2893 0018 0546     		mov	r5, r0
 2894 001a 0028     		cmp	r0, #0
 2895 001c 30D1     		bne	.L276
3266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 2896              		.loc 1 3266 0
 2897 001e 0123     		movs	r3, #1
 2898 0020 6364     		str	r3, [r4, #68]
ARM GAS  /tmp/cc0XO8k8.s 			page 189


3269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (SingleDiff == ADC_DIFFERENTIAL_ENDED)
 2899              		.loc 1 3269 0
 2900 0022 2268     		ldr	r2, [r4]
 2901 0024 9368     		ldr	r3, [r2, #8]
 2902 0026 23F08043 		bic	r3, r3, #1073741824
 2903 002a 9360     		str	r3, [r2, #8]
3270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 2904              		.loc 1 3270 0
 2905 002c 012E     		cmp	r6, #1
 2906 002e 04D1     		bne	.L277
3272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 2907              		.loc 1 3272 0
 2908 0030 2268     		ldr	r2, [r4]
 2909 0032 9368     		ldr	r3, [r2, #8]
 2910 0034 43F08043 		orr	r3, r3, #1073741824
 2911 0038 9360     		str	r3, [r2, #8]
 2912              	.L277:
3276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 2913              		.loc 1 3276 0
 2914 003a 2268     		ldr	r2, [r4]
 2915 003c 9368     		ldr	r3, [r2, #8]
 2916 003e 43F00043 		orr	r3, r3, #-2147483648
 2917 0042 9360     		str	r3, [r2, #8]
3278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 2918              		.loc 1 3278 0
 2919 0044 FFF7FEFF 		bl	HAL_GetTick
 2920              	.LVL184:
 2921 0048 0646     		mov	r6, r0
 2922              	.LVL185:
3281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 2923              		.loc 1 3281 0
 2924 004a 0FE0     		b	.L278
 2925              	.LVL186:
 2926              	.L279:
3283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 2927              		.loc 1 3283 0
 2928 004c FFF7FEFF 		bl	HAL_GetTick
 2929              	.LVL187:
 2930 0050 801B     		subs	r0, r0, r6
 2931 0052 0A28     		cmp	r0, #10
 2932 0054 0AD9     		bls	.L278
3286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_BUSY_INTERNAL,
 2933              		.loc 1 3286 0
 2934 0056 636C     		ldr	r3, [r4, #68]
 2935 0058 23F01203 		bic	r3, r3, #18
 2936 005c 43F01003 		orr	r3, r3, #16
 2937 0060 6364     		str	r3, [r4, #68]
3291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 2938              		.loc 1 3291 0
 2939 0062 0023     		movs	r3, #0
 2940 0064 84F84030 		strb	r3, [r4, #64]
3293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 2941              		.loc 1 3293 0
 2942 0068 0120     		movs	r0, #1
 2943 006a 70BD     		pop	{r4, r5, r6, pc}
 2944              	.LVL188:
 2945              	.L278:
ARM GAS  /tmp/cc0XO8k8.s 			page 190


3281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 2946              		.loc 1 3281 0
 2947 006c 2368     		ldr	r3, [r4]
 2948 006e 9B68     		ldr	r3, [r3, #8]
 2949 0070 002B     		cmp	r3, #0
 2950 0072 EBDB     		blt	.L279
3298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 2951              		.loc 1 3298 0
 2952 0074 636C     		ldr	r3, [r4, #68]
 2953 0076 23F00303 		bic	r3, r3, #3
 2954 007a 43F00103 		orr	r3, r3, #1
 2955 007e 6364     		str	r3, [r4, #68]
 2956              	.LVL189:
 2957              	.L276:
3304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 2958              		.loc 1 3304 0
 2959 0080 0023     		movs	r3, #0
 2960 0082 84F84030 		strb	r3, [r4, #64]
3307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 2961              		.loc 1 3307 0
 2962 0086 2846     		mov	r0, r5
 2963 0088 70BD     		pop	{r4, r5, r6, pc}
 2964              	.LVL190:
 2965              	.L280:
 2966              	.LCFI30:
 2967              		.cfi_def_cfa_offset 0
 2968              		.cfi_restore 4
 2969              		.cfi_restore 5
 2970              		.cfi_restore 6
 2971              		.cfi_restore 14
3255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****    
 2972              		.loc 1 3255 0
 2973 008a 0220     		movs	r0, #2
 2974              	.LVL191:
 2975 008c 7047     		bx	lr
 2976              		.cfi_endproc
 2977              	.LFE136:
 2979 008e 00BF     		.section	.text.HAL_ADCEx_Calibration_GetValue,"ax",%progbits
 2980              		.align	2
 2981              		.global	HAL_ADCEx_Calibration_GetValue
 2982              		.thumb
 2983              		.thumb_func
 2985              	HAL_ADCEx_Calibration_GetValue:
 2986              	.LFB137:
3435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
 2987              		.loc 1 3435 0
 2988              		.cfi_startproc
 2989              		@ args = 0, pretend = 0, frame = 0
 2990              		@ frame_needed = 0, uses_anonymous_args = 0
 2991              		@ link register save eliminated.
 2992              	.LVL192:
3441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 2993              		.loc 1 3441 0
 2994 0000 0129     		cmp	r1, #1
 2995 0002 04D1     		bne	.L284
3443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 2996              		.loc 1 3443 0
ARM GAS  /tmp/cc0XO8k8.s 			page 191


 2997 0004 0368     		ldr	r3, [r0]
 2998 0006 D3F8B400 		ldr	r0, [r3, #180]
 2999              	.LVL193:
 3000 000a 000C     		lsrs	r0, r0, #16
 3001 000c 7047     		bx	lr
 3002              	.LVL194:
 3003              	.L284:
3447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 3004              		.loc 1 3447 0
 3005 000e 0368     		ldr	r3, [r0]
 3006 0010 D3F8B400 		ldr	r0, [r3, #180]
 3007              	.LVL195:
 3008 0014 00F07F00 		and	r0, r0, #127
3449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 3009              		.loc 1 3449 0
 3010 0018 7047     		bx	lr
 3011              		.cfi_endproc
 3012              	.LFE137:
 3014 001a 00BF     		.section	.text.HAL_ADCEx_Calibration_SetValue,"ax",%progbits
 3015              		.align	2
 3016              		.global	HAL_ADCEx_Calibration_SetValue
 3017              		.thumb
 3018              		.thumb_func
 3020              	HAL_ADCEx_Calibration_SetValue:
 3021              	.LFB138:
3470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3022              		.loc 1 3470 0
 3023              		.cfi_startproc
 3024              		@ args = 0, pretend = 0, frame = 0
 3025              		@ frame_needed = 0, uses_anonymous_args = 0
 3026              		@ link register save eliminated.
 3027              	.LVL196:
3479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 3028              		.loc 1 3479 0
 3029 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 3030 0004 012B     		cmp	r3, #1
 3031 0006 37D0     		beq	.L292
3470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3032              		.loc 1 3470 0 discriminator 2
 3033 0008 10B4     		push	{r4}
 3034              	.LCFI31:
 3035              		.cfi_def_cfa_offset 4
 3036              		.cfi_offset 4, -4
3479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 3037              		.loc 1 3479 0 discriminator 2
 3038 000a 0123     		movs	r3, #1
 3039 000c 80F84030 		strb	r3, [r0, #64]
3483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET)   )
 3040              		.loc 1 3483 0 discriminator 2
 3041 0010 0468     		ldr	r4, [r0]
 3042 0012 A368     		ldr	r3, [r4, #8]
 3043 0014 03F00303 		and	r3, r3, #3
 3044 0018 012B     		cmp	r3, #1
 3045 001a 05D1     		bne	.L293
3483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET)   )
 3046              		.loc 1 3483 0 is_stmt 0 discriminator 1
 3047 001c 2368     		ldr	r3, [r4]
ARM GAS  /tmp/cc0XO8k8.s 			page 192


 3048 001e 13F0010F 		tst	r3, #1
 3049 0022 03D1     		bne	.L294
3483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET)   )
 3050              		.loc 1 3483 0
 3051 0024 0023     		movs	r3, #0
 3052 0026 02E0     		b	.L288
 3053              	.L293:
 3054 0028 0023     		movs	r3, #0
 3055 002a 00E0     		b	.L288
 3056              	.L294:
 3057 002c 0123     		movs	r3, #1
 3058              	.L288:
3483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET)   )
 3059              		.loc 1 3483 0 discriminator 6
 3060 002e B3B1     		cbz	r3, .L289
3484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 3061              		.loc 1 3484 0 is_stmt 1 discriminator 7
 3062 0030 A368     		ldr	r3, [r4, #8]
3483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET)   )
 3063              		.loc 1 3483 0 discriminator 7
 3064 0032 13F00C0F 		tst	r3, #12
 3065 0036 12D1     		bne	.L289
3487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 3066              		.loc 1 3487 0
 3067 0038 0129     		cmp	r1, #1
 3068 003a 08D1     		bne	.L290
3489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CALFACT_CALFACT_D                  ,
 3069              		.loc 1 3489 0
 3070 003c D4F8B430 		ldr	r3, [r4, #180]
 3071 0040 23F4FE03 		bic	r3, r3, #8323072
 3072 0044 43EA0242 		orr	r2, r3, r2, lsl #16
 3073              	.LVL197:
 3074 0048 C4F8B420 		str	r2, [r4, #180]
 3075 004c 0FE0     		b	.L291
 3076              	.LVL198:
 3077              	.L290:
3495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CALFACT_CALFACT_S  ,
 3078              		.loc 1 3495 0
 3079 004e D4F8B430 		ldr	r3, [r4, #180]
 3080 0052 23F07F03 		bic	r3, r3, #127
 3081 0056 1A43     		orrs	r2, r2, r3
 3082              	.LVL199:
 3083 0058 C4F8B420 		str	r2, [r4, #180]
 3084 005c 07E0     		b	.L291
 3085              	.LVL200:
 3086              	.L289:
3503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 3087              		.loc 1 3503 0
 3088 005e 436C     		ldr	r3, [r0, #68]
 3089 0060 43F02003 		orr	r3, r3, #32
 3090 0064 4364     		str	r3, [r0, #68]
3506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 3091              		.loc 1 3506 0
 3092 0066 836C     		ldr	r3, [r0, #72]
 3093 0068 43F00103 		orr	r3, r3, #1
 3094 006c 8364     		str	r3, [r0, #72]
 3095              	.LVL201:
ARM GAS  /tmp/cc0XO8k8.s 			page 193


 3096              	.L291:
3510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 3097              		.loc 1 3510 0
 3098 006e 0023     		movs	r3, #0
 3099 0070 80F84030 		strb	r3, [r0, #64]
3513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 3100              		.loc 1 3513 0
 3101 0074 1846     		mov	r0, r3
 3102              	.LVL202:
 3103 0076 01E0     		b	.L287
 3104              	.LVL203:
 3105              	.L292:
 3106              	.LCFI32:
 3107              		.cfi_def_cfa_offset 0
 3108              		.cfi_restore 4
3479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 3109              		.loc 1 3479 0
 3110 0078 0220     		movs	r0, #2
 3111              	.LVL204:
 3112 007a 7047     		bx	lr
 3113              	.LVL205:
 3114              	.L287:
 3115              	.LCFI33:
 3116              		.cfi_def_cfa_offset 4
 3117              		.cfi_offset 4, -4
3514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 3118              		.loc 1 3514 0
 3119 007c 5DF8044B 		ldr	r4, [sp], #4
 3120              	.LCFI34:
 3121              		.cfi_restore 4
 3122              		.cfi_def_cfa_offset 0
 3123 0080 7047     		bx	lr
 3124              		.cfi_endproc
 3125              	.LFE138:
 3127 0082 00BF     		.section	.text.HAL_ADCEx_InjectedStart,"ax",%progbits
 3128              		.align	2
 3129              		.global	HAL_ADCEx_InjectedStart
 3130              		.thumb
 3131              		.thumb_func
 3133              	HAL_ADCEx_InjectedStart:
 3134              	.LFB139:
3535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3135              		.loc 1 3535 0
 3136              		.cfi_startproc
 3137              		@ args = 0, pretend = 0, frame = 0
 3138              		@ frame_needed = 0, uses_anonymous_args = 0
 3139              	.LVL206:
3542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 3140              		.loc 1 3542 0
 3141 0000 0368     		ldr	r3, [r0]
 3142 0002 9B68     		ldr	r3, [r3, #8]
 3143 0004 13F0080F 		tst	r3, #8
 3144 0008 40F08F80 		bne	.L317
3545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 3145              		.loc 1 3545 0
 3146 000c 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 3147 0010 012B     		cmp	r3, #1
ARM GAS  /tmp/cc0XO8k8.s 			page 194


 3148 0012 00F08C80 		beq	.L318
3535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3149              		.loc 1 3535 0 discriminator 2
 3150 0016 10B5     		push	{r4, lr}
 3151              	.LCFI35:
 3152              		.cfi_def_cfa_offset 8
 3153              		.cfi_offset 4, -8
 3154              		.cfi_offset 14, -4
 3155 0018 0446     		mov	r4, r0
3545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 3156              		.loc 1 3545 0 discriminator 2
 3157 001a 0123     		movs	r3, #1
 3158 001c 80F84030 		strb	r3, [r0, #64]
3548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 3159              		.loc 1 3548 0 discriminator 2
 3160 0020 FFF7FEFF 		bl	ADC_Enable
 3161              	.LVL207:
3551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 3162              		.loc 1 3551 0 discriminator 2
 3163 0024 0346     		mov	r3, r0
 3164 0026 0028     		cmp	r0, #0
 3165 0028 7BD1     		bne	.L299
3556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
 3166              		.loc 1 3556 0
 3167 002a 626C     		ldr	r2, [r4, #68]
 3168 002c 22F44052 		bic	r2, r2, #12288
 3169 0030 22F00102 		bic	r2, r2, #1
 3170 0034 42F48052 		orr	r2, r2, #4096
 3171 0038 6264     		str	r2, [r4, #68]
3562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3172              		.loc 1 3562 0
 3173 003a 2268     		ldr	r2, [r4]
 3174 003c B2F1A04F 		cmp	r2, #1342177280
 3175 0040 02D0     		beq	.L300
3562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3176              		.loc 1 3562 0 is_stmt 0 discriminator 2
 3177 0042 3E49     		ldr	r1, .L323
 3178 0044 8A42     		cmp	r2, r1
 3179 0046 05D1     		bne	.L301
 3180              	.L300:
3562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3181              		.loc 1 3562 0 discriminator 3
 3182 0048 3D49     		ldr	r1, .L323+4
 3183 004a 8968     		ldr	r1, [r1, #8]
 3184 004c 11F01F0F 		tst	r1, #31
 3185 0050 0BD0     		beq	.L302
 3186 0052 04E0     		b	.L303
 3187              	.L301:
3562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3188              		.loc 1 3562 0 discriminator 4
 3189 0054 3B49     		ldr	r1, .L323+8
 3190 0056 8968     		ldr	r1, [r1, #8]
 3191 0058 11F01F0F 		tst	r1, #31
 3192 005c 05D0     		beq	.L302
 3193              	.L303:
3562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3194              		.loc 1 3562 0 discriminator 5
ARM GAS  /tmp/cc0XO8k8.s 			page 195


 3195 005e B2F1A04F 		cmp	r2, #1342177280
 3196 0062 02D0     		beq	.L302
3562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3197              		.loc 1 3562 0 discriminator 6
 3198 0064 3849     		ldr	r1, .L323+12
 3199 0066 8A42     		cmp	r2, r1
 3200 0068 04D1     		bne	.L304
 3201              	.L302:
3564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 3202              		.loc 1 3564 0 is_stmt 1
 3203 006a 616C     		ldr	r1, [r4, #68]
 3204 006c 21F48011 		bic	r1, r1, #1048576
 3205 0070 6164     		str	r1, [r4, #68]
 3206 0072 03E0     		b	.L305
 3207              	.L304:
3568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 3208              		.loc 1 3568 0
 3209 0074 616C     		ldr	r1, [r4, #68]
 3210 0076 41F48011 		orr	r1, r1, #1048576
 3211 007a 6164     		str	r1, [r4, #68]
 3212              	.L305:
3575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3213              		.loc 1 3575 0
 3214 007c 616C     		ldr	r1, [r4, #68]
 3215 007e 11F4807F 		tst	r1, #256
 3216 0082 01D1     		bne	.L306
3578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 3217              		.loc 1 3578 0
 3218 0084 0021     		movs	r1, #0
 3219 0086 A164     		str	r1, [r4, #72]
 3220              	.L306:
3584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 3221              		.loc 1 3584 0
 3222 0088 0021     		movs	r1, #0
 3223 008a 84F84010 		strb	r1, [r4, #64]
3589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 3224              		.loc 1 3589 0
 3225 008e 6021     		movs	r1, #96
 3226 0090 1160     		str	r1, [r2]
3599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_NONMULTIMODE_INJ_OR_MULTIMODEMASTER(hadc)          )
 3227              		.loc 1 3599 0
 3228 0092 2268     		ldr	r2, [r4]
 3229 0094 D168     		ldr	r1, [r2, #12]
 3230 0096 11F0007F 		tst	r1, #33554432
 3231 009a 4AD1     		bne	.L319
3599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_NONMULTIMODE_INJ_OR_MULTIMODEMASTER(hadc)          )
 3232              		.loc 1 3599 0 is_stmt 0 discriminator 1
 3233 009c B2F1A04F 		cmp	r2, #1342177280
 3234 00a0 02D0     		beq	.L307
3600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3235              		.loc 1 3600 0 is_stmt 1 discriminator 1
 3236 00a2 2649     		ldr	r1, .L323
 3237 00a4 8A42     		cmp	r2, r1
 3238 00a6 05D1     		bne	.L308
 3239              	.L307:
3600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3240              		.loc 1 3600 0 is_stmt 0 discriminator 2
ARM GAS  /tmp/cc0XO8k8.s 			page 196


 3241 00a8 2549     		ldr	r1, .L323+4
 3242 00aa 8968     		ldr	r1, [r1, #8]
3599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_NONMULTIMODE_INJ_OR_MULTIMODEMASTER(hadc)          )
 3243              		.loc 1 3599 0 is_stmt 1 discriminator 2
 3244 00ac 11F01F0F 		tst	r1, #31
 3245 00b0 05D1     		bne	.L310
 3246 00b2 30E0     		b	.L309
 3247              	.L308:
3600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3248              		.loc 1 3600 0 discriminator 2
 3249 00b4 2349     		ldr	r1, .L323+8
 3250 00b6 8968     		ldr	r1, [r1, #8]
 3251 00b8 11F01F0F 		tst	r1, #31
 3252 00bc 2BD0     		beq	.L309
 3253              	.L310:
3599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_NONMULTIMODE_INJ_OR_MULTIMODEMASTER(hadc)          )
 3254              		.loc 1 3599 0 discriminator 3
 3255 00be B2F1A04F 		cmp	r2, #1342177280
 3256 00c2 02D0     		beq	.L311
3600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3257              		.loc 1 3600 0
 3258 00c4 1D49     		ldr	r1, .L323
 3259 00c6 8A42     		cmp	r2, r1
 3260 00c8 06D1     		bne	.L312
 3261              	.L311:
3600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3262              		.loc 1 3600 0 is_stmt 0 discriminator 4
 3263 00ca 1D49     		ldr	r1, .L323+4
 3264 00cc 8968     		ldr	r1, [r1, #8]
 3265 00ce 01F01F01 		and	r1, r1, #31
 3266 00d2 0629     		cmp	r1, #6
 3267 00d4 06D1     		bne	.L313
 3268 00d6 1EE0     		b	.L309
 3269              	.L312:
3600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3270              		.loc 1 3600 0 discriminator 5
 3271 00d8 1A49     		ldr	r1, .L323+8
 3272 00da 8968     		ldr	r1, [r1, #8]
 3273 00dc 01F01F01 		and	r1, r1, #31
 3274 00e0 0629     		cmp	r1, #6
 3275 00e2 18D0     		beq	.L309
 3276              	.L313:
3599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_NONMULTIMODE_INJ_OR_MULTIMODEMASTER(hadc)          )
 3277              		.loc 1 3599 0 is_stmt 1 discriminator 6
 3278 00e4 B2F1A04F 		cmp	r2, #1342177280
 3279 00e8 02D0     		beq	.L314
3600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3280              		.loc 1 3600 0
 3281 00ea 1449     		ldr	r1, .L323
 3282 00ec 8A42     		cmp	r2, r1
 3283 00ee 06D1     		bne	.L315
 3284              	.L314:
3600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3285              		.loc 1 3600 0 is_stmt 0 discriminator 7
 3286 00f0 1349     		ldr	r1, .L323+4
 3287 00f2 8968     		ldr	r1, [r1, #8]
 3288 00f4 01F01F01 		and	r1, r1, #31
ARM GAS  /tmp/cc0XO8k8.s 			page 197


 3289 00f8 0729     		cmp	r1, #7
 3290 00fa 06D1     		bne	.L316
 3291 00fc 0BE0     		b	.L309
 3292              	.L315:
3600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3293              		.loc 1 3600 0 discriminator 8
 3294 00fe 1149     		ldr	r1, .L323+8
 3295 0100 8968     		ldr	r1, [r1, #8]
 3296 0102 01F01F01 		and	r1, r1, #31
 3297 0106 0729     		cmp	r1, #7
 3298 0108 05D0     		beq	.L309
 3299              	.L316:
3600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3300              		.loc 1 3600 0 discriminator 9
 3301 010a B2F1A04F 		cmp	r2, #1342177280
 3302 010e 02D0     		beq	.L309
3600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3303              		.loc 1 3600 0 discriminator 10
 3304 0110 0D49     		ldr	r1, .L323+12
 3305 0112 8A42     		cmp	r2, r1
 3306 0114 0FD1     		bne	.L320
 3307              	.L309:
3602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 3308              		.loc 1 3602 0 is_stmt 1
 3309 0116 9168     		ldr	r1, [r2, #8]
 3310 0118 41F00801 		orr	r1, r1, #8
 3311 011c 9160     		str	r1, [r2, #8]
3548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 3312              		.loc 1 3548 0
 3313 011e 1846     		mov	r0, r3
 3314              	.LVL208:
 3315 0120 10BD     		pop	{r4, pc}
 3316              	.LVL209:
 3317              	.L299:
3608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 3318              		.loc 1 3608 0
 3319 0122 0022     		movs	r2, #0
 3320 0124 84F84020 		strb	r2, [r4, #64]
 3321 0128 10BD     		pop	{r4, pc}
 3322              	.LVL210:
 3323              	.L317:
 3324              	.LCFI36:
 3325              		.cfi_def_cfa_offset 0
 3326              		.cfi_restore 4
 3327              		.cfi_restore 14
3613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 3328              		.loc 1 3613 0
 3329 012a 0220     		movs	r0, #2
 3330              	.LVL211:
3618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 3331              		.loc 1 3618 0
 3332 012c 7047     		bx	lr
 3333              	.LVL212:
 3334              	.L318:
3545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 3335              		.loc 1 3545 0
 3336 012e 0220     		movs	r0, #2
ARM GAS  /tmp/cc0XO8k8.s 			page 198


 3337              	.LVL213:
 3338 0130 7047     		bx	lr
 3339              	.LVL214:
 3340              	.L319:
 3341              	.LCFI37:
 3342              		.cfi_def_cfa_offset 8
 3343              		.cfi_offset 4, -8
 3344              		.cfi_offset 14, -4
3548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 3345              		.loc 1 3548 0
 3346 0132 1846     		mov	r0, r3
 3347              	.LVL215:
 3348 0134 10BD     		pop	{r4, pc}
 3349              	.LVL216:
 3350              	.L320:
 3351 0136 1846     		mov	r0, r3
 3352              	.LVL217:
3618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 3353              		.loc 1 3618 0
 3354 0138 10BD     		pop	{r4, pc}
 3355              	.LVL218:
 3356              	.L324:
 3357 013a 00BF     		.align	2
 3358              	.L323:
 3359 013c 00010050 		.word	1342177536
 3360 0140 00030050 		.word	1342178048
 3361 0144 00070050 		.word	1342179072
 3362 0148 00040050 		.word	1342178304
 3363              		.cfi_endproc
 3364              	.LFE139:
 3366              		.section	.text.HAL_ADCEx_InjectedStop,"ax",%progbits
 3367              		.align	2
 3368              		.global	HAL_ADCEx_InjectedStop
 3369              		.thumb
 3370              		.thumb_func
 3372              	HAL_ADCEx_InjectedStop:
 3373              	.LFB140:
3723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3374              		.loc 1 3723 0
 3375              		.cfi_startproc
 3376              		@ args = 0, pretend = 0, frame = 0
 3377              		@ frame_needed = 0, uses_anonymous_args = 0
 3378              	.LVL219:
3730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 3379              		.loc 1 3730 0
 3380 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 3381 0004 012B     		cmp	r3, #1
 3382 0006 34D0     		beq	.L330
3723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3383              		.loc 1 3723 0 discriminator 2
 3384 0008 10B5     		push	{r4, lr}
 3385              	.LCFI38:
 3386              		.cfi_def_cfa_offset 8
 3387              		.cfi_offset 4, -8
 3388              		.cfi_offset 14, -4
 3389 000a 0446     		mov	r4, r0
3730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
ARM GAS  /tmp/cc0XO8k8.s 			page 199


 3390              		.loc 1 3730 0 discriminator 2
 3391 000c 0123     		movs	r3, #1
 3392 000e 80F84030 		strb	r3, [r0, #64]
3743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 3393              		.loc 1 3743 0 discriminator 2
 3394 0012 0368     		ldr	r3, [r0]
 3395 0014 DB68     		ldr	r3, [r3, #12]
 3396 0016 13F0007F 		tst	r3, #33554432
 3397 001a 20D1     		bne	.L327
3746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 3398              		.loc 1 3746 0
 3399 001c 6021     		movs	r1, #96
 3400 001e FFF7FEFF 		bl	ADC_ConversionStop
 3401              	.LVL220:
3751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {      
 3402              		.loc 1 3751 0
 3403 0022 0346     		mov	r3, r0
 3404 0024 00BB     		cbnz	r0, .L328
3753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          ((hadc->State & HAL_ADC_STATE_REG_BUSY) == RESET)    )
 3405              		.loc 1 3753 0
 3406 0026 2268     		ldr	r2, [r4]
 3407 0028 9268     		ldr	r2, [r2, #8]
 3408 002a 12F0040F 		tst	r2, #4
 3409 002e 11D1     		bne	.L329
3754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3410              		.loc 1 3754 0 discriminator 1
 3411 0030 626C     		ldr	r2, [r4, #68]
3753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          ((hadc->State & HAL_ADC_STATE_REG_BUSY) == RESET)    )
 3412              		.loc 1 3753 0 discriminator 1
 3413 0032 12F4807F 		tst	r2, #256
 3414 0036 0DD1     		bne	.L329
3757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 3415              		.loc 1 3757 0
 3416 0038 2046     		mov	r0, r4
 3417              	.LVL221:
 3418 003a FFF7FEFF 		bl	ADC_Disable
 3419              	.LVL222:
3760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 3420              		.loc 1 3760 0
 3421 003e 0346     		mov	r3, r0
 3422 0040 90B9     		cbnz	r0, .L328
3763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                             HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 3423              		.loc 1 3763 0
 3424 0042 626C     		ldr	r2, [r4, #68]
 3425 0044 22F48852 		bic	r2, r2, #4352
 3426 0048 22F00102 		bic	r2, r2, #1
 3427 004c 42F00102 		orr	r2, r2, #1
 3428 0050 6264     		str	r2, [r4, #68]
 3429 0052 09E0     		b	.L328
 3430              	.L329:
3773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 3431              		.loc 1 3773 0
 3432 0054 626C     		ldr	r2, [r4, #68]
 3433 0056 22F48052 		bic	r2, r2, #4096
 3434 005a 6264     		str	r2, [r4, #68]
 3435 005c 04E0     		b	.L328
 3436              	.LVL223:
ARM GAS  /tmp/cc0XO8k8.s 			page 200


 3437              	.L327:
3780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 3438              		.loc 1 3780 0
 3439 005e 436C     		ldr	r3, [r0, #68]
 3440 0060 43F02003 		orr	r3, r3, #32
 3441 0064 4364     		str	r3, [r0, #68]
 3442              	.LVL224:
3782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 3443              		.loc 1 3782 0
 3444 0066 0123     		movs	r3, #1
 3445              	.LVL225:
 3446              	.L328:
3786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 3447              		.loc 1 3786 0
 3448 0068 0022     		movs	r2, #0
 3449 006a 84F84020 		strb	r2, [r4, #64]
3789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 3450              		.loc 1 3789 0
 3451 006e 1846     		mov	r0, r3
 3452 0070 10BD     		pop	{r4, pc}
 3453              	.LVL226:
 3454              	.L330:
 3455              	.LCFI39:
 3456              		.cfi_def_cfa_offset 0
 3457              		.cfi_restore 4
 3458              		.cfi_restore 14
3730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 3459              		.loc 1 3730 0
 3460 0072 0220     		movs	r0, #2
 3461              	.LVL227:
 3462 0074 7047     		bx	lr
 3463              		.cfi_endproc
 3464              	.LFE140:
 3466 0076 00BF     		.section	.text.HAL_ADCEx_InjectedPollForConversion,"ax",%progbits
 3467              		.align	2
 3468              		.global	HAL_ADCEx_InjectedPollForConversion
 3469              		.thumb
 3470              		.thumb_func
 3472              	HAL_ADCEx_InjectedPollForConversion:
 3473              	.LFB141:
3866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart;
 3474              		.loc 1 3866 0
 3475              		.cfi_startproc
 3476              		@ args = 0, pretend = 0, frame = 0
 3477              		@ frame_needed = 0, uses_anonymous_args = 0
 3478              	.LVL228:
 3479 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3480              	.LCFI40:
 3481              		.cfi_def_cfa_offset 24
 3482              		.cfi_offset 4, -24
 3483              		.cfi_offset 5, -20
 3484              		.cfi_offset 6, -16
 3485              		.cfi_offset 7, -12
 3486              		.cfi_offset 8, -8
 3487              		.cfi_offset 14, -4
 3488 0004 0446     		mov	r4, r0
 3489 0006 0D46     		mov	r5, r1
ARM GAS  /tmp/cc0XO8k8.s 			page 201


 3490              	.LVL229:
3875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 3491              		.loc 1 3875 0
 3492 0008 4369     		ldr	r3, [r0, #20]
 3493 000a 082B     		cmp	r3, #8
 3494 000c 01D1     		bne	.L349
3877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 3495              		.loc 1 3877 0
 3496 000e 4026     		movs	r6, #64
 3497 0010 00E0     		b	.L334
 3498              	.L349:
3882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 3499              		.loc 1 3882 0
 3500 0012 6026     		movs	r6, #96
 3501              	.L334:
 3502              	.LVL230:
3888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 3503              		.loc 1 3888 0
 3504 0014 2368     		ldr	r3, [r4]
 3505 0016 B3F1A04F 		cmp	r3, #1342177280
 3506 001a 02D0     		beq	.L335
3888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 3507              		.loc 1 3888 0 is_stmt 0 discriminator 2
 3508 001c 324A     		ldr	r2, .L353
 3509 001e 9342     		cmp	r3, r2
 3510 0020 05D1     		bne	.L336
 3511              	.L335:
3888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 3512              		.loc 1 3888 0 discriminator 3
 3513 0022 324A     		ldr	r2, .L353+4
 3514 0024 9268     		ldr	r2, [r2, #8]
 3515 0026 12F01F0F 		tst	r2, #31
 3516 002a 0BD0     		beq	.L337
 3517 002c 04E0     		b	.L338
 3518              	.L336:
3888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 3519              		.loc 1 3888 0 discriminator 4
 3520 002e 304A     		ldr	r2, .L353+8
 3521 0030 9268     		ldr	r2, [r2, #8]
 3522 0032 12F01F0F 		tst	r2, #31
 3523 0036 05D0     		beq	.L337
 3524              	.L338:
3888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 3525              		.loc 1 3888 0 discriminator 5
 3526 0038 B3F1A04F 		cmp	r3, #1342177280
 3527 003c 02D0     		beq	.L337
3888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 3528              		.loc 1 3888 0 discriminator 6
 3529 003e 2D4A     		ldr	r2, .L353+12
 3530 0040 9342     		cmp	r3, r2
 3531 0042 01D1     		bne	.L339
 3532              	.L337:
3890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 3533              		.loc 1 3890 0 is_stmt 1
 3534 0044 DF68     		ldr	r7, [r3, #12]
 3535              	.LVL231:
 3536 0046 0AE0     		b	.L340
ARM GAS  /tmp/cc0XO8k8.s 			page 202


 3537              	.LVL232:
 3538              	.L339:
3894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 3539              		.loc 1 3894 0
 3540 0048 B3F1A04F 		cmp	r3, #1342177280
 3541 004c 06D0     		beq	.L341
3894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 3542              		.loc 1 3894 0 is_stmt 0 discriminator 2
 3543 004e 264A     		ldr	r2, .L353
 3544 0050 9342     		cmp	r3, r2
 3545 0052 02D1     		bne	.L350
3894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 3546              		.loc 1 3894 0
 3547 0054 4FF0A043 		mov	r3, #1342177280
 3548 0058 00E0     		b	.L341
 3549              	.L350:
 3550 005a 264B     		ldr	r3, .L353+12
 3551              	.L341:
3894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 3552              		.loc 1 3894 0 discriminator 6
 3553 005c DF68     		ldr	r7, [r3, #12]
 3554              	.LVL233:
 3555              	.L340:
3898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      
 3556              		.loc 1 3898 0 is_stmt 1
 3557 005e FFF7FEFF 		bl	HAL_GetTick
 3558              	.LVL234:
 3559 0062 8046     		mov	r8, r0
 3560              	.LVL235:
3901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 3561              		.loc 1 3901 0
 3562 0064 13E0     		b	.L343
 3563              	.LVL236:
 3564              	.L346:
3904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 3565              		.loc 1 3904 0
 3566 0066 B5F1FF3F 		cmp	r5, #-1
 3567 006a 10D0     		beq	.L343
3906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3568              		.loc 1 3906 0
 3569 006c 2DB1     		cbz	r5, .L344
3906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3570              		.loc 1 3906 0 is_stmt 0 discriminator 1
 3571 006e FFF7FEFF 		bl	HAL_GetTick
 3572              	.LVL237:
 3573 0072 C8EB0000 		rsb	r0, r8, r0
 3574 0076 8542     		cmp	r5, r0
 3575 0078 09D2     		bcs	.L343
 3576              	.L344:
3909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 3577              		.loc 1 3909 0 is_stmt 1
 3578 007a 636C     		ldr	r3, [r4, #68]
 3579 007c 43F00403 		orr	r3, r3, #4
 3580 0080 6364     		str	r3, [r4, #68]
3912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 3581              		.loc 1 3912 0
 3582 0082 0023     		movs	r3, #0
ARM GAS  /tmp/cc0XO8k8.s 			page 203


 3583 0084 84F84030 		strb	r3, [r4, #64]
3914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 3584              		.loc 1 3914 0
 3585 0088 0320     		movs	r0, #3
 3586 008a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3587              	.LVL238:
 3588              	.L343:
3901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 3589              		.loc 1 3901 0
 3590 008e 2368     		ldr	r3, [r4]
 3591 0090 1A68     		ldr	r2, [r3]
 3592 0092 1642     		tst	r6, r2
 3593 0094 E7D0     		beq	.L346
3920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 3594              		.loc 1 3920 0
 3595 0096 626C     		ldr	r2, [r4, #68]
 3596 0098 42F40052 		orr	r2, r2, #8192
 3597 009c 6264     		str	r2, [r4, #68]
3925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((READ_BIT (tmp_cfgr, ADC_CFGR_JAUTO) == RESET)    &&
 3598              		.loc 1 3925 0
 3599 009e DA6C     		ldr	r2, [r3, #76]
 3600 00a0 12F0C00F 		tst	r2, #192
 3601 00a4 09D0     		beq	.L347
3925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((READ_BIT (tmp_cfgr, ADC_CFGR_JAUTO) == RESET)    &&
 3602              		.loc 1 3925 0 is_stmt 0 discriminator 1
 3603 00a6 17F0007F 		tst	r7, #33554432
 3604 00aa 12D1     		bne	.L348
3927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (READ_BIT (tmp_cfgr, ADC_CFGR_CONT) == RESET)   )   )   )
 3605              		.loc 1 3927 0 is_stmt 1
 3606 00ac DA68     		ldr	r2, [r3, #12]
3926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (ADC_IS_SOFTWARE_START_REGULAR(hadc)          &&
 3607              		.loc 1 3926 0
 3608 00ae 12F4406F 		tst	r2, #3072
 3609 00b2 0ED1     		bne	.L348
3927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (READ_BIT (tmp_cfgr, ADC_CFGR_CONT) == RESET)   )   )   )
 3610              		.loc 1 3927 0
 3611 00b4 17F4005F 		tst	r7, #8192
 3612 00b8 0BD1     		bne	.L348
 3613              	.L347:
3931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 3614              		.loc 1 3931 0
 3615 00ba 626C     		ldr	r2, [r4, #68]
 3616 00bc 22F48052 		bic	r2, r2, #4096
 3617 00c0 6264     		str	r2, [r4, #68]
3933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 3618              		.loc 1 3933 0
 3619 00c2 626C     		ldr	r2, [r4, #68]
 3620 00c4 12F4807F 		tst	r2, #256
 3621 00c8 03D1     		bne	.L348
3935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 3622              		.loc 1 3935 0
 3623 00ca 626C     		ldr	r2, [r4, #68]
 3624 00cc 42F00102 		orr	r2, r2, #1
 3625 00d0 6264     		str	r2, [r4, #68]
 3626              	.L348:
3942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 3627              		.loc 1 3942 0
ARM GAS  /tmp/cc0XO8k8.s 			page 204


 3628 00d2 17F4804F 		tst	r7, #16384
 3629 00d6 03D1     		bne	.L351
3946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 3630              		.loc 1 3946 0
 3631 00d8 1E60     		str	r6, [r3]
3950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 3632              		.loc 1 3950 0
 3633 00da 0020     		movs	r0, #0
 3634 00dc BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3635              	.LVL239:
 3636              	.L351:
 3637 00e0 0020     		movs	r0, #0
3951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 3638              		.loc 1 3951 0
 3639 00e2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3640              	.LVL240:
 3641              	.L354:
 3642 00e6 00BF     		.align	2
 3643              	.L353:
 3644 00e8 00010050 		.word	1342177536
 3645 00ec 00030050 		.word	1342178048
 3646 00f0 00070050 		.word	1342179072
 3647 00f4 00040050 		.word	1342178304
 3648              		.cfi_endproc
 3649              	.LFE141:
 3651              		.section	.text.HAL_ADCEx_InjectedStart_IT,"ax",%progbits
 3652              		.align	2
 3653              		.global	HAL_ADCEx_InjectedStart_IT
 3654              		.thumb
 3655              		.thumb_func
 3657              	HAL_ADCEx_InjectedStart_IT:
 3658              	.LFB142:
4093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3659              		.loc 1 4093 0
 3660              		.cfi_startproc
 3661              		@ args = 0, pretend = 0, frame = 0
 3662              		@ frame_needed = 0, uses_anonymous_args = 0
 3663              	.LVL241:
4100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 3664              		.loc 1 4100 0
 3665 0000 0368     		ldr	r3, [r0]
 3666 0002 9B68     		ldr	r3, [r3, #8]
 3667 0004 13F0080F 		tst	r3, #8
 3668 0008 40F0AC80 		bne	.L379
4103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 3669              		.loc 1 4103 0
 3670 000c 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 3671 0010 012B     		cmp	r3, #1
 3672 0012 00F0A980 		beq	.L380
4093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3673              		.loc 1 4093 0 discriminator 2
 3674 0016 10B5     		push	{r4, lr}
 3675              	.LCFI41:
 3676              		.cfi_def_cfa_offset 8
 3677              		.cfi_offset 4, -8
 3678              		.cfi_offset 14, -4
 3679 0018 0446     		mov	r4, r0
ARM GAS  /tmp/cc0XO8k8.s 			page 205


4103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 3680              		.loc 1 4103 0 discriminator 2
 3681 001a 0123     		movs	r3, #1
 3682 001c 80F84030 		strb	r3, [r0, #64]
4106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 3683              		.loc 1 4106 0 discriminator 2
 3684 0020 FFF7FEFF 		bl	ADC_Enable
 3685              	.LVL242:
4110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 3686              		.loc 1 4110 0 discriminator 2
 3687 0024 0346     		mov	r3, r0
 3688 0026 0028     		cmp	r0, #0
 3689 0028 40F09880 		bne	.L357
4115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
 3690              		.loc 1 4115 0
 3691 002c 626C     		ldr	r2, [r4, #68]
 3692 002e 22F44052 		bic	r2, r2, #12288
 3693 0032 22F00102 		bic	r2, r2, #1
 3694 0036 42F48052 		orr	r2, r2, #4096
 3695 003a 6264     		str	r2, [r4, #68]
4121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3696              		.loc 1 4121 0
 3697 003c 2268     		ldr	r2, [r4]
 3698 003e B2F1A04F 		cmp	r2, #1342177280
 3699 0042 02D0     		beq	.L358
4121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3700              		.loc 1 4121 0 is_stmt 0 discriminator 2
 3701 0044 4B49     		ldr	r1, .L386
 3702 0046 8A42     		cmp	r2, r1
 3703 0048 05D1     		bne	.L359
 3704              	.L358:
4121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3705              		.loc 1 4121 0 discriminator 3
 3706 004a 4B49     		ldr	r1, .L386+4
 3707 004c 8968     		ldr	r1, [r1, #8]
 3708 004e 11F01F0F 		tst	r1, #31
 3709 0052 0BD0     		beq	.L360
 3710 0054 04E0     		b	.L361
 3711              	.L359:
4121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3712              		.loc 1 4121 0 discriminator 4
 3713 0056 4949     		ldr	r1, .L386+8
 3714 0058 8968     		ldr	r1, [r1, #8]
 3715 005a 11F01F0F 		tst	r1, #31
 3716 005e 05D0     		beq	.L360
 3717              	.L361:
4121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3718              		.loc 1 4121 0 discriminator 5
 3719 0060 B2F1A04F 		cmp	r2, #1342177280
 3720 0064 02D0     		beq	.L360
4121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3721              		.loc 1 4121 0 discriminator 6
 3722 0066 4649     		ldr	r1, .L386+12
 3723 0068 8A42     		cmp	r2, r1
 3724 006a 04D1     		bne	.L362
 3725              	.L360:
4123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
ARM GAS  /tmp/cc0XO8k8.s 			page 206


 3726              		.loc 1 4123 0 is_stmt 1
 3727 006c 616C     		ldr	r1, [r4, #68]
 3728 006e 21F48011 		bic	r1, r1, #1048576
 3729 0072 6164     		str	r1, [r4, #68]
 3730 0074 03E0     		b	.L363
 3731              	.L362:
4127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 3732              		.loc 1 4127 0
 3733 0076 616C     		ldr	r1, [r4, #68]
 3734 0078 41F48011 		orr	r1, r1, #1048576
 3735 007c 6164     		str	r1, [r4, #68]
 3736              	.L363:
4134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3737              		.loc 1 4134 0
 3738 007e 616C     		ldr	r1, [r4, #68]
 3739 0080 11F4807F 		tst	r1, #256
 3740 0084 01D1     		bne	.L364
4137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 3741              		.loc 1 4137 0
 3742 0086 0021     		movs	r1, #0
 3743 0088 A164     		str	r1, [r4, #72]
 3744              	.L364:
4143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 3745              		.loc 1 4143 0
 3746 008a 0021     		movs	r1, #0
 3747 008c 84F84010 		strb	r1, [r4, #64]
4148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 3748              		.loc 1 4148 0
 3749 0090 6021     		movs	r1, #96
 3750 0092 1160     		str	r1, [r2]
4152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3751              		.loc 1 4152 0
 3752 0094 2268     		ldr	r2, [r4]
 3753 0096 D168     		ldr	r1, [r2, #12]
 3754 0098 11F4001F 		tst	r1, #2097152
 3755 009c 03D0     		beq	.L365
4154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 3756              		.loc 1 4154 0
 3757 009e 5168     		ldr	r1, [r2, #4]
 3758 00a0 41F48061 		orr	r1, r1, #1024
 3759 00a4 5160     		str	r1, [r2, #4]
 3760              	.L365:
4158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3761              		.loc 1 4158 0
 3762 00a6 6269     		ldr	r2, [r4, #20]
 3763 00a8 082A     		cmp	r2, #8
 3764 00aa 0AD1     		bne	.L383
4161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 3765              		.loc 1 4161 0
 3766 00ac 2168     		ldr	r1, [r4]
 3767 00ae 4A68     		ldr	r2, [r1, #4]
 3768 00b0 22F02002 		bic	r2, r2, #32
 3769 00b4 4A60     		str	r2, [r1, #4]
4162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           break;
 3770              		.loc 1 4162 0
 3771 00b6 2168     		ldr	r1, [r4]
 3772 00b8 4A68     		ldr	r2, [r1, #4]
ARM GAS  /tmp/cc0XO8k8.s 			page 207


 3773 00ba 42F04002 		orr	r2, r2, #64
 3774 00be 4A60     		str	r2, [r1, #4]
4163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* case ADC_EOC_SINGLE_CONV */
 3775              		.loc 1 4163 0
 3776 00c0 04E0     		b	.L368
 3777              	.L383:
4166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           break;
 3778              		.loc 1 4166 0
 3779 00c2 2168     		ldr	r1, [r4]
 3780 00c4 4A68     		ldr	r2, [r1, #4]
 3781 00c6 42F06002 		orr	r2, r2, #96
 3782 00ca 4A60     		str	r2, [r1, #4]
 3783              	.L368:
4178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_NONMULTIMODE_INJ_OR_MULTIMODEMASTER(hadc)          )
 3784              		.loc 1 4178 0
 3785 00cc 2268     		ldr	r2, [r4]
 3786 00ce D168     		ldr	r1, [r2, #12]
 3787 00d0 11F0007F 		tst	r1, #33554432
 3788 00d4 4AD1     		bne	.L381
4178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_NONMULTIMODE_INJ_OR_MULTIMODEMASTER(hadc)          )
 3789              		.loc 1 4178 0 is_stmt 0 discriminator 1
 3790 00d6 B2F1A04F 		cmp	r2, #1342177280
 3791 00da 02D0     		beq	.L369
4179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3792              		.loc 1 4179 0 is_stmt 1 discriminator 1
 3793 00dc 2549     		ldr	r1, .L386
 3794 00de 8A42     		cmp	r2, r1
 3795 00e0 05D1     		bne	.L370
 3796              	.L369:
4179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3797              		.loc 1 4179 0 is_stmt 0 discriminator 2
 3798 00e2 2549     		ldr	r1, .L386+4
 3799 00e4 8968     		ldr	r1, [r1, #8]
4178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_NONMULTIMODE_INJ_OR_MULTIMODEMASTER(hadc)          )
 3800              		.loc 1 4178 0 is_stmt 1 discriminator 2
 3801 00e6 11F01F0F 		tst	r1, #31
 3802 00ea 05D1     		bne	.L372
 3803 00ec 30E0     		b	.L371
 3804              	.L370:
4179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3805              		.loc 1 4179 0 discriminator 2
 3806 00ee 2349     		ldr	r1, .L386+8
 3807 00f0 8968     		ldr	r1, [r1, #8]
 3808 00f2 11F01F0F 		tst	r1, #31
 3809 00f6 2BD0     		beq	.L371
 3810              	.L372:
4178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_NONMULTIMODE_INJ_OR_MULTIMODEMASTER(hadc)          )
 3811              		.loc 1 4178 0 discriminator 3
 3812 00f8 B2F1A04F 		cmp	r2, #1342177280
 3813 00fc 02D0     		beq	.L373
4179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3814              		.loc 1 4179 0
 3815 00fe 1D49     		ldr	r1, .L386
 3816 0100 8A42     		cmp	r2, r1
 3817 0102 06D1     		bne	.L374
 3818              	.L373:
4179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
ARM GAS  /tmp/cc0XO8k8.s 			page 208


 3819              		.loc 1 4179 0 is_stmt 0 discriminator 4
 3820 0104 1C49     		ldr	r1, .L386+4
 3821 0106 8968     		ldr	r1, [r1, #8]
 3822 0108 01F01F01 		and	r1, r1, #31
 3823 010c 0629     		cmp	r1, #6
 3824 010e 06D1     		bne	.L375
 3825 0110 1EE0     		b	.L371
 3826              	.L374:
4179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3827              		.loc 1 4179 0 discriminator 5
 3828 0112 1A49     		ldr	r1, .L386+8
 3829 0114 8968     		ldr	r1, [r1, #8]
 3830 0116 01F01F01 		and	r1, r1, #31
 3831 011a 0629     		cmp	r1, #6
 3832 011c 18D0     		beq	.L371
 3833              	.L375:
4178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_NONMULTIMODE_INJ_OR_MULTIMODEMASTER(hadc)          )
 3834              		.loc 1 4178 0 is_stmt 1 discriminator 6
 3835 011e B2F1A04F 		cmp	r2, #1342177280
 3836 0122 02D0     		beq	.L376
4179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3837              		.loc 1 4179 0
 3838 0124 1349     		ldr	r1, .L386
 3839 0126 8A42     		cmp	r2, r1
 3840 0128 06D1     		bne	.L377
 3841              	.L376:
4179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3842              		.loc 1 4179 0 is_stmt 0 discriminator 7
 3843 012a 1349     		ldr	r1, .L386+4
 3844 012c 8968     		ldr	r1, [r1, #8]
 3845 012e 01F01F01 		and	r1, r1, #31
 3846 0132 0729     		cmp	r1, #7
 3847 0134 06D1     		bne	.L378
 3848 0136 0BE0     		b	.L371
 3849              	.L377:
4179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3850              		.loc 1 4179 0 discriminator 8
 3851 0138 1049     		ldr	r1, .L386+8
 3852 013a 8968     		ldr	r1, [r1, #8]
 3853 013c 01F01F01 		and	r1, r1, #31
 3854 0140 0729     		cmp	r1, #7
 3855 0142 05D0     		beq	.L371
 3856              	.L378:
4179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3857              		.loc 1 4179 0 discriminator 9
 3858 0144 B2F1A04F 		cmp	r2, #1342177280
 3859 0148 02D0     		beq	.L371
4179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3860              		.loc 1 4179 0 discriminator 10
 3861 014a 0D49     		ldr	r1, .L386+12
 3862 014c 8A42     		cmp	r2, r1
 3863 014e 0FD1     		bne	.L382
 3864              	.L371:
4181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 3865              		.loc 1 4181 0 is_stmt 1
 3866 0150 9168     		ldr	r1, [r2, #8]
 3867 0152 41F00801 		orr	r1, r1, #8
ARM GAS  /tmp/cc0XO8k8.s 			page 209


 3868 0156 9160     		str	r1, [r2, #8]
4106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 3869              		.loc 1 4106 0
 3870 0158 1846     		mov	r0, r3
 3871              	.LVL243:
 3872 015a 10BD     		pop	{r4, pc}
 3873              	.LVL244:
 3874              	.L357:
4187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 3875              		.loc 1 4187 0
 3876 015c 0022     		movs	r2, #0
 3877 015e 84F84020 		strb	r2, [r4, #64]
 3878 0162 10BD     		pop	{r4, pc}
 3879              	.LVL245:
 3880              	.L379:
 3881              	.LCFI42:
 3882              		.cfi_def_cfa_offset 0
 3883              		.cfi_restore 4
 3884              		.cfi_restore 14
4192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 3885              		.loc 1 4192 0
 3886 0164 0220     		movs	r0, #2
 3887              	.LVL246:
4197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 3888              		.loc 1 4197 0
 3889 0166 7047     		bx	lr
 3890              	.LVL247:
 3891              	.L380:
4103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 3892              		.loc 1 4103 0
 3893 0168 0220     		movs	r0, #2
 3894              	.LVL248:
 3895 016a 7047     		bx	lr
 3896              	.LVL249:
 3897              	.L381:
 3898              	.LCFI43:
 3899              		.cfi_def_cfa_offset 8
 3900              		.cfi_offset 4, -8
 3901              		.cfi_offset 14, -4
4106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 3902              		.loc 1 4106 0
 3903 016c 1846     		mov	r0, r3
 3904              	.LVL250:
 3905 016e 10BD     		pop	{r4, pc}
 3906              	.LVL251:
 3907              	.L382:
 3908 0170 1846     		mov	r0, r3
 3909              	.LVL252:
4197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 3910              		.loc 1 4197 0
 3911 0172 10BD     		pop	{r4, pc}
 3912              	.LVL253:
 3913              	.L387:
 3914              		.align	2
 3915              	.L386:
 3916 0174 00010050 		.word	1342177536
 3917 0178 00030050 		.word	1342178048
ARM GAS  /tmp/cc0XO8k8.s 			page 210


 3918 017c 00070050 		.word	1342179072
 3919 0180 00040050 		.word	1342178304
 3920              		.cfi_endproc
 3921              	.LFE142:
 3923              		.section	.text.HAL_ADCEx_InjectedStop_IT,"ax",%progbits
 3924              		.align	2
 3925              		.global	HAL_ADCEx_InjectedStop_IT
 3926              		.thumb
 3927              		.thumb_func
 3929              	HAL_ADCEx_InjectedStop_IT:
 3930              	.LFB143:
4313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3931              		.loc 1 4313 0
 3932              		.cfi_startproc
 3933              		@ args = 0, pretend = 0, frame = 0
 3934              		@ frame_needed = 0, uses_anonymous_args = 0
 3935              	.LVL254:
4320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 3936              		.loc 1 4320 0
 3937 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 3938 0004 012B     		cmp	r3, #1
 3939 0006 39D0     		beq	.L393
4313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3940              		.loc 1 4313 0 discriminator 2
 3941 0008 10B5     		push	{r4, lr}
 3942              	.LCFI44:
 3943              		.cfi_def_cfa_offset 8
 3944              		.cfi_offset 4, -8
 3945              		.cfi_offset 14, -4
 3946 000a 0446     		mov	r4, r0
4320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 3947              		.loc 1 4320 0 discriminator 2
 3948 000c 0123     		movs	r3, #1
 3949 000e 80F84030 		strb	r3, [r0, #64]
4333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 3950              		.loc 1 4333 0 discriminator 2
 3951 0012 0368     		ldr	r3, [r0]
 3952 0014 DB68     		ldr	r3, [r3, #12]
 3953 0016 13F0007F 		tst	r3, #33554432
 3954 001a 25D1     		bne	.L390
4336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 3955              		.loc 1 4336 0
 3956 001c 6021     		movs	r1, #96
 3957 001e FFF7FEFF 		bl	ADC_ConversionStop
 3958              	.LVL255:
4341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 3959              		.loc 1 4341 0
 3960 0022 0346     		mov	r3, r0
 3961 0024 28BB     		cbnz	r0, .L391
4344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 3962              		.loc 1 4344 0
 3963 0026 2168     		ldr	r1, [r4]
 3964 0028 4A68     		ldr	r2, [r1, #4]
 3965 002a 22F48C62 		bic	r2, r2, #1120
 3966 002e 4A60     		str	r2, [r1, #4]
4346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          ((hadc->State & HAL_ADC_STATE_REG_BUSY) == RESET)    )
 3967              		.loc 1 4346 0
ARM GAS  /tmp/cc0XO8k8.s 			page 211


 3968 0030 2268     		ldr	r2, [r4]
 3969 0032 9268     		ldr	r2, [r2, #8]
 3970 0034 12F0040F 		tst	r2, #4
 3971 0038 11D1     		bne	.L392
4347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3972              		.loc 1 4347 0 discriminator 1
 3973 003a 626C     		ldr	r2, [r4, #68]
4346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          ((hadc->State & HAL_ADC_STATE_REG_BUSY) == RESET)    )
 3974              		.loc 1 4346 0 discriminator 1
 3975 003c 12F4807F 		tst	r2, #256
 3976 0040 0DD1     		bne	.L392
4350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 3977              		.loc 1 4350 0
 3978 0042 2046     		mov	r0, r4
 3979              	.LVL256:
 3980 0044 FFF7FEFF 		bl	ADC_Disable
 3981              	.LVL257:
4353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 3982              		.loc 1 4353 0
 3983 0048 0346     		mov	r3, r0
 3984 004a 90B9     		cbnz	r0, .L391
4356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                             HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 3985              		.loc 1 4356 0
 3986 004c 626C     		ldr	r2, [r4, #68]
 3987 004e 22F48852 		bic	r2, r2, #4352
 3988 0052 22F00102 		bic	r2, r2, #1
 3989 0056 42F00102 		orr	r2, r2, #1
 3990 005a 6264     		str	r2, [r4, #68]
 3991 005c 09E0     		b	.L391
 3992              	.L392:
4366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 3993              		.loc 1 4366 0
 3994 005e 626C     		ldr	r2, [r4, #68]
 3995 0060 22F48052 		bic	r2, r2, #4096
 3996 0064 6264     		str	r2, [r4, #68]
 3997 0066 04E0     		b	.L391
 3998              	.LVL258:
 3999              	.L390:
4373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 4000              		.loc 1 4373 0
 4001 0068 436C     		ldr	r3, [r0, #68]
 4002 006a 43F02003 		orr	r3, r3, #32
 4003 006e 4364     		str	r3, [r0, #68]
 4004              	.LVL259:
4375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 4005              		.loc 1 4375 0
 4006 0070 0123     		movs	r3, #1
 4007              	.LVL260:
 4008              	.L391:
4379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 4009              		.loc 1 4379 0
 4010 0072 0022     		movs	r2, #0
 4011 0074 84F84020 		strb	r2, [r4, #64]
4382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 4012              		.loc 1 4382 0
 4013 0078 1846     		mov	r0, r3
 4014 007a 10BD     		pop	{r4, pc}
ARM GAS  /tmp/cc0XO8k8.s 			page 212


 4015              	.LVL261:
 4016              	.L393:
 4017              	.LCFI45:
 4018              		.cfi_def_cfa_offset 0
 4019              		.cfi_restore 4
 4020              		.cfi_restore 14
4320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 4021              		.loc 1 4320 0
 4022 007c 0220     		movs	r0, #2
 4023              	.LVL262:
 4024 007e 7047     		bx	lr
 4025              		.cfi_endproc
 4026              	.LFE143:
 4028              		.section	.text.HAL_ADCEx_MultiModeStart_DMA,"ax",%progbits
 4029              		.align	2
 4030              		.global	HAL_ADCEx_MultiModeStart_DMA
 4031              		.thumb
 4032              		.thumb_func
 4034              	HAL_ADCEx_MultiModeStart_DMA:
 4035              	.LFB144:
4473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 4036              		.loc 1 4473 0
 4037              		.cfi_startproc
 4038              		@ args = 0, pretend = 0, frame = 88
 4039              		@ frame_needed = 0, uses_anonymous_args = 0
 4040              	.LVL263:
 4041 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4042              	.LCFI46:
 4043              		.cfi_def_cfa_offset 20
 4044              		.cfi_offset 4, -20
 4045              		.cfi_offset 5, -16
 4046              		.cfi_offset 6, -12
 4047              		.cfi_offset 7, -8
 4048              		.cfi_offset 14, -4
 4049 0002 97B0     		sub	sp, sp, #92
 4050              	.LCFI47:
 4051              		.cfi_def_cfa_offset 112
 4052              	.LVL264:
4485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 4053              		.loc 1 4485 0
 4054 0004 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 4055 0008 012C     		cmp	r4, #1
 4056 000a 71D0     		beq	.L407
4485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 4057              		.loc 1 4485 0 is_stmt 0 discriminator 2
 4058 000c 0123     		movs	r3, #1
 4059 000e 80F84030 		strb	r3, [r0, #64]
4489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 4060              		.loc 1 4489 0 is_stmt 1 discriminator 2
 4061 0012 0468     		ldr	r4, [r0]
 4062 0014 A368     		ldr	r3, [r4, #8]
 4063 0016 13F0040F 		tst	r3, #4
 4064 001a 6BD1     		bne	.L408
4493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4065              		.loc 1 4493 0
 4066 001c B4F1A04F 		cmp	r4, #1342177280
 4067 0020 02D1     		bne	.L398
ARM GAS  /tmp/cc0XO8k8.s 			page 213


4493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4068              		.loc 1 4493 0 is_stmt 0 discriminator 1
 4069 0022 364B     		ldr	r3, .L412
 4070 0024 0193     		str	r3, [sp, #4]
 4071 0026 08E0     		b	.L399
 4072              	.L398:
4493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4073              		.loc 1 4493 0 discriminator 2
 4074 0028 354B     		ldr	r3, .L412+4
 4075 002a 9C42     		cmp	r4, r3
 4076 002c 03D1     		bne	.L400
4493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4077              		.loc 1 4493 0 discriminator 3
 4078 002e 03F58073 		add	r3, r3, #256
 4079 0032 0193     		str	r3, [sp, #4]
 4080 0034 01E0     		b	.L399
 4081              	.L400:
4493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4082              		.loc 1 4493 0 discriminator 4
 4083 0036 0023     		movs	r3, #0
 4084 0038 0193     		str	r3, [sp, #4]
 4085              	.L399:
4495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4086              		.loc 1 4495 0 is_stmt 1
 4087 003a 019B     		ldr	r3, [sp, #4]
 4088 003c 43B9     		cbnz	r3, .L402
4498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 4089              		.loc 1 4498 0
 4090 003e 436C     		ldr	r3, [r0, #68]
 4091 0040 43F02003 		orr	r3, r3, #32
 4092 0044 4364     		str	r3, [r0, #68]
4501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 4093              		.loc 1 4501 0
 4094 0046 0023     		movs	r3, #0
 4095 0048 80F84030 		strb	r3, [r0, #64]
4503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 4096              		.loc 1 4503 0
 4097 004c 0120     		movs	r0, #1
 4098              	.LVL265:
 4099 004e 52E0     		b	.L397
 4100              	.LVL266:
 4101              	.L402:
 4102 0050 1746     		mov	r7, r2
 4103 0052 0E46     		mov	r6, r1
 4104 0054 0446     		mov	r4, r0
4509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 4105              		.loc 1 4509 0
 4106 0056 FFF7FEFF 		bl	ADC_Enable
 4107              	.LVL267:
4510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4108              		.loc 1 4510 0
 4109 005a 0546     		mov	r5, r0
 4110 005c 18B9     		cbnz	r0, .L403
4512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 4111              		.loc 1 4512 0
 4112 005e 01A8     		add	r0, sp, #4
 4113              	.LVL268:
ARM GAS  /tmp/cc0XO8k8.s 			page 214


 4114 0060 FFF7FEFF 		bl	ADC_Enable
 4115              	.LVL269:
 4116 0064 0546     		mov	r5, r0
 4117              	.LVL270:
 4118              	.L403:
4516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4119              		.loc 1 4516 0
 4120 0066 002D     		cmp	r5, #0
 4121 0068 3DD1     		bne	.L404
4521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 4122              		.loc 1 4521 0
 4123 006a 626C     		ldr	r2, [r4, #68]
 4124 006c 254B     		ldr	r3, .L412+8
 4125 006e 1340     		ands	r3, r3, r2
 4126 0070 43F48073 		orr	r3, r3, #256
 4127 0074 6364     		str	r3, [r4, #68]
4527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 4128              		.loc 1 4527 0
 4129 0076 2368     		ldr	r3, [r4]
 4130 0078 DB68     		ldr	r3, [r3, #12]
 4131 007a 13F0007F 		tst	r3, #33554432
 4132 007e 05D0     		beq	.L405
4529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 4133              		.loc 1 4529 0
 4134 0080 636C     		ldr	r3, [r4, #68]
 4135 0082 23F44053 		bic	r3, r3, #12288
 4136 0086 43F48053 		orr	r3, r3, #4096
 4137 008a 6364     		str	r3, [r4, #68]
 4138              	.L405:
4535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 4139              		.loc 1 4535 0
 4140 008c 0023     		movs	r3, #0
 4141 008e 84F84030 		strb	r3, [r4, #64]
4538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 4142              		.loc 1 4538 0
 4143 0092 A364     		str	r3, [r4, #72]
4542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          
 4144              		.loc 1 4542 0
 4145 0094 E36B     		ldr	r3, [r4, #60]
 4146 0096 1C4A     		ldr	r2, .L412+12
 4147 0098 9A62     		str	r2, [r3, #40]
4545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 4148              		.loc 1 4545 0
 4149 009a E36B     		ldr	r3, [r4, #60]
 4150 009c 1B4A     		ldr	r2, .L412+16
 4151 009e DA62     		str	r2, [r3, #44]
4548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 4152              		.loc 1 4548 0
 4153 00a0 E36B     		ldr	r3, [r4, #60]
 4154 00a2 1B4A     		ldr	r2, .L412+20
 4155 00a4 1A63     		str	r2, [r3, #48]
4553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 4156              		.loc 1 4553 0
 4157 00a6 2368     		ldr	r3, [r4]
 4158 00a8 B3F1A04F 		cmp	r3, #1342177280
 4159 00ac 04D0     		beq	.L409
4553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
ARM GAS  /tmp/cc0XO8k8.s 			page 215


 4160              		.loc 1 4553 0 is_stmt 0 discriminator 2
 4161 00ae 134A     		ldr	r2, .L412
 4162 00b0 9342     		cmp	r3, r2
 4163 00b2 03D1     		bne	.L410
4553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 4164              		.loc 1 4553 0
 4165 00b4 1749     		ldr	r1, .L412+24
 4166 00b6 02E0     		b	.L406
 4167              	.L409:
 4168 00b8 1649     		ldr	r1, .L412+24
 4169 00ba 00E0     		b	.L406
 4170              	.L410:
 4171 00bc 1649     		ldr	r1, .L412+28
 4172              	.L406:
 4173              	.LVL271:
4561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 4174              		.loc 1 4561 0 is_stmt 1 discriminator 6
 4175 00be 1C22     		movs	r2, #28
 4176 00c0 1A60     		str	r2, [r3]
4564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 4177              		.loc 1 4564 0 discriminator 6
 4178 00c2 2268     		ldr	r2, [r4]
 4179 00c4 5368     		ldr	r3, [r2, #4]
 4180 00c6 43F01003 		orr	r3, r3, #16
 4181 00ca 5360     		str	r3, [r2, #4]
4567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
 4182              		.loc 1 4567 0 discriminator 6
 4183 00cc 3B46     		mov	r3, r7
 4184 00ce 3246     		mov	r2, r6
 4185 00d0 0C31     		adds	r1, r1, #12
 4186              	.LVL272:
 4187 00d2 E06B     		ldr	r0, [r4, #60]
 4188 00d4 FFF7FEFF 		bl	HAL_DMA_Start_IT
 4189              	.LVL273:
4573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 4190              		.loc 1 4573 0 discriminator 6
 4191 00d8 2268     		ldr	r2, [r4]
 4192 00da 9368     		ldr	r3, [r2, #8]
 4193 00dc 43F00403 		orr	r3, r3, #4
 4194 00e0 9360     		str	r3, [r2, #8]
 4195 00e2 2846     		mov	r0, r5
 4196 00e4 07E0     		b	.L397
 4197              	.L404:
4579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 4198              		.loc 1 4579 0
 4199 00e6 0023     		movs	r3, #0
 4200 00e8 84F84030 		strb	r3, [r4, #64]
 4201 00ec 2846     		mov	r0, r5
 4202 00ee 02E0     		b	.L397
 4203              	.LVL274:
 4204              	.L407:
4485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 4205              		.loc 1 4485 0
 4206 00f0 0220     		movs	r0, #2
 4207              	.LVL275:
 4208 00f2 00E0     		b	.L397
 4209              	.LVL276:
ARM GAS  /tmp/cc0XO8k8.s 			page 216


 4210              	.L408:
4584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 4211              		.loc 1 4584 0
 4212 00f4 0220     		movs	r0, #2
 4213              	.LVL277:
 4214              	.L397:
4589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 4215              		.loc 1 4589 0
 4216 00f6 17B0     		add	sp, sp, #92
 4217              	.LCFI48:
 4218              		.cfi_def_cfa_offset 20
 4219              		@ sp needed
 4220 00f8 F0BD     		pop	{r4, r5, r6, r7, pc}
 4221              	.L413:
 4222 00fa 00BF     		.align	2
 4223              	.L412:
 4224 00fc 00010050 		.word	1342177536
 4225 0100 00040050 		.word	1342178304
 4226 0104 FEF0EFFF 		.word	-1052418
 4227 0108 00000000 		.word	ADC_DMAConvCplt
 4228 010c 00000000 		.word	ADC_DMAHalfConvCplt
 4229 0110 00000000 		.word	ADC_DMAError
 4230 0114 00030050 		.word	1342178048
 4231 0118 00070050 		.word	1342179072
 4232              		.cfi_endproc
 4233              	.LFE144:
 4235              		.section	.text.HAL_ADCEx_MultiModeStop_DMA,"ax",%progbits
 4236              		.align	2
 4237              		.global	HAL_ADCEx_MultiModeStop_DMA
 4238              		.thumb
 4239              		.thumb_func
 4241              	HAL_ADCEx_MultiModeStop_DMA:
 4242              	.LFB145:
4613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 4243              		.loc 1 4613 0
 4244              		.cfi_startproc
 4245              		@ args = 0, pretend = 0, frame = 88
 4246              		@ frame_needed = 0, uses_anonymous_args = 0
 4247              	.LVL278:
4622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 4248              		.loc 1 4622 0
 4249 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 4250 0004 012B     		cmp	r3, #1
 4251 0006 73D0     		beq	.L426
4613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 4252              		.loc 1 4613 0 discriminator 2
 4253 0008 30B5     		push	{r4, r5, lr}
 4254              	.LCFI49:
 4255              		.cfi_def_cfa_offset 12
 4256              		.cfi_offset 4, -12
 4257              		.cfi_offset 5, -8
 4258              		.cfi_offset 14, -4
 4259 000a 97B0     		sub	sp, sp, #92
 4260              	.LCFI50:
 4261              		.cfi_def_cfa_offset 104
 4262 000c 0446     		mov	r4, r0
4622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
ARM GAS  /tmp/cc0XO8k8.s 			page 217


 4263              		.loc 1 4622 0 discriminator 2
 4264 000e 0123     		movs	r3, #1
 4265 0010 80F84030 		strb	r3, [r0, #64]
4626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 4266              		.loc 1 4626 0 discriminator 2
 4267 0014 6C21     		movs	r1, #108
 4268 0016 FFF7FEFF 		bl	ADC_ConversionStop
 4269              	.LVL279:
4629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 4270              		.loc 1 4629 0 discriminator 2
 4271 001a 0546     		mov	r5, r0
 4272 001c 0028     		cmp	r0, #0
 4273 001e 62D1     		bne	.L416
4633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4274              		.loc 1 4633 0
 4275 0020 2368     		ldr	r3, [r4]
 4276 0022 B3F1A04F 		cmp	r3, #1342177280
 4277 0026 03D1     		bne	.L417
4633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4278              		.loc 1 4633 0 is_stmt 0 discriminator 1
 4279 0028 03F58073 		add	r3, r3, #256
 4280 002c 0193     		str	r3, [sp, #4]
 4281 002e 07E0     		b	.L418
 4282              	.L417:
4633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4283              		.loc 1 4633 0 discriminator 2
 4284 0030 314A     		ldr	r2, .L429
 4285 0032 9342     		cmp	r3, r2
 4286 0034 02D1     		bne	.L419
4633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4287              		.loc 1 4633 0 discriminator 3
 4288 0036 314B     		ldr	r3, .L429+4
 4289 0038 0193     		str	r3, [sp, #4]
 4290 003a 01E0     		b	.L418
 4291              	.L419:
4633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4292              		.loc 1 4633 0 discriminator 4
 4293 003c 0023     		movs	r3, #0
 4294 003e 0193     		str	r3, [sp, #4]
 4295              	.L418:
4635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4296              		.loc 1 4635 0 is_stmt 1
 4297 0040 019B     		ldr	r3, [sp, #4]
 4298 0042 43B9     		cbnz	r3, .L421
4638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 4299              		.loc 1 4638 0
 4300 0044 636C     		ldr	r3, [r4, #68]
 4301 0046 43F04003 		orr	r3, r3, #64
 4302 004a 6364     		str	r3, [r4, #68]
4641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 4303              		.loc 1 4641 0
 4304 004c 0023     		movs	r3, #0
 4305 004e 84F84030 		strb	r3, [r4, #64]
4643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 4306              		.loc 1 4643 0
 4307 0052 0120     		movs	r0, #1
 4308              	.LVL280:
ARM GAS  /tmp/cc0XO8k8.s 			page 218


 4309 0054 4EE0     		b	.L415
 4310              	.LVL281:
 4311              	.L421:
4650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 4312              		.loc 1 4650 0
 4313 0056 FFF7FEFF 		bl	HAL_GetTick
 4314              	.LVL282:
 4315 005a 0546     		mov	r5, r0
 4316              	.LVL283:
4652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_IS_CONVERSION_ONGOING_REGULAR(&tmphadcSlave)   )
 4317              		.loc 1 4652 0
 4318 005c 0DE0     		b	.L422
 4319              	.LVL284:
 4320              	.L423:
4655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 4321              		.loc 1 4655 0
 4322 005e FFF7FEFF 		bl	HAL_GetTick
 4323              	.LVL285:
 4324 0062 401B     		subs	r0, r0, r5
 4325 0064 0B28     		cmp	r0, #11
 4326 0066 08D9     		bls	.L422
4658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 4327              		.loc 1 4658 0
 4328 0068 636C     		ldr	r3, [r4, #68]
 4329 006a 43F01003 		orr	r3, r3, #16
 4330 006e 6364     		str	r3, [r4, #68]
4661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 4331              		.loc 1 4661 0
 4332 0070 0023     		movs	r3, #0
 4333 0072 84F84030 		strb	r3, [r4, #64]
4663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 4334              		.loc 1 4663 0
 4335 0076 0120     		movs	r0, #1
 4336 0078 3CE0     		b	.L415
 4337              	.L422:
4652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_IS_CONVERSION_ONGOING_REGULAR(&tmphadcSlave)   )
 4338              		.loc 1 4652 0
 4339 007a 2368     		ldr	r3, [r4]
 4340 007c 9B68     		ldr	r3, [r3, #8]
 4341 007e 13F0040F 		tst	r3, #4
 4342 0082 ECD1     		bne	.L423
4653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4343              		.loc 1 4653 0 discriminator 1
 4344 0084 019B     		ldr	r3, [sp, #4]
 4345 0086 9B68     		ldr	r3, [r3, #8]
4652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_IS_CONVERSION_ONGOING_REGULAR(&tmphadcSlave)   )
 4346              		.loc 1 4652 0 discriminator 1
 4347 0088 13F0040F 		tst	r3, #4
 4348 008c E7D1     		bne	.L423
4673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4349              		.loc 1 4673 0
 4350 008e E06B     		ldr	r0, [r4, #60]
 4351 0090 FFF7FEFF 		bl	HAL_DMA_Abort
 4352              	.LVL286:
4676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4353              		.loc 1 4676 0
 4354 0094 0546     		mov	r5, r0
ARM GAS  /tmp/cc0XO8k8.s 			page 219


 4355              	.LVL287:
 4356 0096 18B1     		cbz	r0, .L424
4679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 4357              		.loc 1 4679 0
 4358 0098 636C     		ldr	r3, [r4, #68]
 4359 009a 43F04003 		orr	r3, r3, #64
 4360 009e 6364     		str	r3, [r4, #68]
 4361              	.L424:
4683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4362              		.loc 1 4683 0
 4363 00a0 2268     		ldr	r2, [r4]
 4364 00a2 5368     		ldr	r3, [r2, #4]
 4365 00a4 23F01003 		bic	r3, r3, #16
 4366 00a8 5360     		str	r3, [r2, #4]
4690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4367              		.loc 1 4690 0
 4368 00aa 95B9     		cbnz	r5, .L425
4693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_Disable(&tmphadcSlave) != HAL_ERROR)   )
 4369              		.loc 1 4693 0
 4370 00ac 2046     		mov	r0, r4
 4371              	.LVL288:
 4372 00ae FFF7FEFF 		bl	ADC_Disable
 4373              	.LVL289:
 4374 00b2 0128     		cmp	r0, #1
 4375 00b4 17D0     		beq	.L416
4694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 4376              		.loc 1 4694 0 discriminator 1
 4377 00b6 01A8     		add	r0, sp, #4
 4378 00b8 FFF7FEFF 		bl	ADC_Disable
 4379              	.LVL290:
4693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_Disable(&tmphadcSlave) != HAL_ERROR)   )
 4380              		.loc 1 4693 0 discriminator 1
 4381 00bc 0128     		cmp	r0, #1
 4382 00be 12D0     		beq	.L416
 4383              	.LVL291:
4699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 4384              		.loc 1 4699 0
 4385 00c0 636C     		ldr	r3, [r4, #68]
 4386 00c2 23F48853 		bic	r3, r3, #4352
 4387 00c6 23F00103 		bic	r3, r3, #1
 4388 00ca 43F00103 		orr	r3, r3, #1
 4389 00ce 6364     		str	r3, [r4, #68]
 4390 00d0 09E0     		b	.L416
 4391              	.LVL292:
 4392              	.L425:
4707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_Disable(&tmphadcSlave);
 4393              		.loc 1 4707 0
 4394 00d2 2046     		mov	r0, r4
 4395              	.LVL293:
 4396 00d4 FFF7FEFF 		bl	ADC_Disable
 4397              	.LVL294:
4708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 4398              		.loc 1 4708 0
 4399 00d8 01A8     		add	r0, sp, #4
 4400 00da FFF7FEFF 		bl	ADC_Disable
 4401              	.LVL295:
4711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
ARM GAS  /tmp/cc0XO8k8.s 			page 220


 4402              		.loc 1 4711 0
 4403 00de 636C     		ldr	r3, [r4, #68]
 4404 00e0 43F01003 		orr	r3, r3, #16
 4405 00e4 6364     		str	r3, [r4, #68]
 4406              	.L416:
 4407              	.LVL296:
4717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 4408              		.loc 1 4717 0
 4409 00e6 0023     		movs	r3, #0
 4410 00e8 84F84030 		strb	r3, [r4, #64]
4720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 4411              		.loc 1 4720 0
 4412 00ec 2846     		mov	r0, r5
 4413 00ee 01E0     		b	.L415
 4414              	.LVL297:
 4415              	.L426:
 4416              	.LCFI51:
 4417              		.cfi_def_cfa_offset 0
 4418              		.cfi_restore 4
 4419              		.cfi_restore 5
 4420              		.cfi_restore 14
4622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 4421              		.loc 1 4622 0
 4422 00f0 0220     		movs	r0, #2
 4423              	.LVL298:
 4424 00f2 7047     		bx	lr
 4425              	.LVL299:
 4426              	.L415:
 4427              	.LCFI52:
 4428              		.cfi_def_cfa_offset 104
 4429              		.cfi_offset 4, -12
 4430              		.cfi_offset 5, -8
 4431              		.cfi_offset 14, -4
4721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 4432              		.loc 1 4721 0
 4433 00f4 17B0     		add	sp, sp, #92
 4434              	.LCFI53:
 4435              		.cfi_def_cfa_offset 12
 4436              		@ sp needed
 4437 00f6 30BD     		pop	{r4, r5, pc}
 4438              	.LVL300:
 4439              	.L430:
 4440              		.align	2
 4441              	.L429:
 4442 00f8 00040050 		.word	1342178304
 4443 00fc 00050050 		.word	1342178560
 4444              		.cfi_endproc
 4445              	.LFE145:
 4447              		.section	.text.HAL_ADCEx_MultiModeGetValue,"ax",%progbits
 4448              		.align	2
 4449              		.global	HAL_ADCEx_MultiModeGetValue
 4450              		.thumb
 4451              		.thumb_func
 4453              	HAL_ADCEx_MultiModeGetValue:
 4454              	.LFB146:
4733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 4455              		.loc 1 4733 0
ARM GAS  /tmp/cc0XO8k8.s 			page 221


 4456              		.cfi_startproc
 4457              		@ args = 0, pretend = 0, frame = 0
 4458              		@ frame_needed = 0, uses_anonymous_args = 0
 4459              		@ link register save eliminated.
 4460              	.LVL301:
4742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 4461              		.loc 1 4742 0
 4462 0000 0368     		ldr	r3, [r0]
 4463 0002 B3F1A04F 		cmp	r3, #1342177280
 4464 0006 04D0     		beq	.L433
4742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 4465              		.loc 1 4742 0 is_stmt 0 discriminator 2
 4466 0008 044A     		ldr	r2, .L435
 4467 000a 9342     		cmp	r3, r2
 4468 000c 03D1     		bne	.L434
4742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 4469              		.loc 1 4742 0
 4470 000e 044B     		ldr	r3, .L435+4
 4471 0010 02E0     		b	.L432
 4472              	.L433:
 4473 0012 034B     		ldr	r3, .L435+4
 4474 0014 00E0     		b	.L432
 4475              	.L434:
 4476 0016 034B     		ldr	r3, .L435+8
 4477              	.L432:
 4478              	.LVL302:
4745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 4479              		.loc 1 4745 0 is_stmt 1 discriminator 6
 4480 0018 D868     		ldr	r0, [r3, #12]
 4481              	.LVL303:
4746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 4482              		.loc 1 4746 0 discriminator 6
 4483 001a 7047     		bx	lr
 4484              	.L436:
 4485              		.align	2
 4486              	.L435:
 4487 001c 00010050 		.word	1342177536
 4488 0020 00030050 		.word	1342178048
 4489 0024 00070050 		.word	1342179072
 4490              		.cfi_endproc
 4491              	.LFE146:
 4493              		.section	.text.HAL_ADCEx_InjectedGetValue,"ax",%progbits
 4494              		.align	2
 4495              		.global	HAL_ADCEx_InjectedGetValue
 4496              		.thumb
 4497              		.thumb_func
 4499              	HAL_ADCEx_InjectedGetValue:
 4500              	.LFB147:
4784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_jdr = 0U;
 4501              		.loc 1 4784 0
 4502              		.cfi_startproc
 4503              		@ args = 0, pretend = 0, frame = 0
 4504              		@ frame_needed = 0, uses_anonymous_args = 0
 4505              		@ link register save eliminated.
 4506              	.LVL304:
4795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {  
 4507              		.loc 1 4795 0
ARM GAS  /tmp/cc0XO8k8.s 			page 222


 4508 0000 0329     		cmp	r1, #3
 4509 0002 08D0     		beq	.L439
 4510 0004 0429     		cmp	r1, #4
 4511 0006 02D0     		beq	.L440
 4512 0008 0229     		cmp	r1, #2
 4513 000a 0CD1     		bne	.L443
 4514 000c 07E0     		b	.L441
 4515              	.L440:
4798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
 4516              		.loc 1 4798 0
 4517 000e 0368     		ldr	r3, [r0]
 4518 0010 D3F88C00 		ldr	r0, [r3, #140]
 4519              	.LVL305:
4799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_3: 
 4520              		.loc 1 4799 0
 4521 0014 7047     		bx	lr
 4522              	.LVL306:
 4523              	.L439:
4801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
 4524              		.loc 1 4801 0
 4525 0016 0368     		ldr	r3, [r0]
 4526 0018 D3F88800 		ldr	r0, [r3, #136]
 4527              	.LVL307:
4802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_2: 
 4528              		.loc 1 4802 0
 4529 001c 7047     		bx	lr
 4530              	.LVL308:
 4531              	.L441:
4804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
 4532              		.loc 1 4804 0
 4533 001e 0368     		ldr	r3, [r0]
 4534 0020 D3F88400 		ldr	r0, [r3, #132]
 4535              	.LVL309:
4805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_1:
 4536              		.loc 1 4805 0
 4537 0024 7047     		bx	lr
 4538              	.LVL310:
 4539              	.L443:
4808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
 4540              		.loc 1 4808 0
 4541 0026 0368     		ldr	r3, [r0]
 4542 0028 D3F88000 		ldr	r0, [r3, #128]
 4543              	.LVL311:
4814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 4544              		.loc 1 4814 0
 4545 002c 7047     		bx	lr
 4546              		.cfi_endproc
 4547              	.LFE147:
 4549 002e 00BF     		.section	.text.HAL_ADCEx_RegularStop,"ax",%progbits
 4550              		.align	2
 4551              		.global	HAL_ADCEx_RegularStop
 4552              		.thumb
 4553              		.thumb_func
 4555              	HAL_ADCEx_RegularStop:
 4556              	.LFB148:
4898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 4557              		.loc 1 4898 0
ARM GAS  /tmp/cc0XO8k8.s 			page 223


 4558              		.cfi_startproc
 4559              		@ args = 0, pretend = 0, frame = 0
 4560              		@ frame_needed = 0, uses_anonymous_args = 0
 4561              	.LVL312:
4905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 4562              		.loc 1 4905 0
 4563 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 4564 0004 012B     		cmp	r3, #1
 4565 0006 28D0     		beq	.L448
4898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 4566              		.loc 1 4898 0 discriminator 2
 4567 0008 10B5     		push	{r4, lr}
 4568              	.LCFI54:
 4569              		.cfi_def_cfa_offset 8
 4570              		.cfi_offset 4, -8
 4571              		.cfi_offset 14, -4
 4572 000a 0446     		mov	r4, r0
4905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 4573              		.loc 1 4905 0 discriminator 2
 4574 000c 0123     		movs	r3, #1
 4575 000e 80F84030 		strb	r3, [r0, #64]
4919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 4576              		.loc 1 4919 0 discriminator 2
 4577 0012 0C21     		movs	r1, #12
 4578 0014 FFF7FEFF 		bl	ADC_ConversionStop
 4579              	.LVL313:
 4580 0018 0346     		mov	r3, r0
 4581              	.LVL314:
4924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == RESET)     )
 4582              		.loc 1 4924 0 discriminator 2
 4583 001a 2268     		ldr	r2, [r4]
 4584 001c 9268     		ldr	r2, [r2, #8]
 4585 001e 12F0080F 		tst	r2, #8
 4586 0022 11D1     		bne	.L446
4925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 4587              		.loc 1 4925 0 discriminator 1
 4588 0024 626C     		ldr	r2, [r4, #68]
4924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == RESET)     )
 4589              		.loc 1 4924 0 discriminator 1
 4590 0026 12F4805F 		tst	r2, #4096
 4591 002a 0DD1     		bne	.L446
4928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4592              		.loc 1 4928 0
 4593 002c 2046     		mov	r0, r4
 4594 002e FFF7FEFF 		bl	ADC_Disable
 4595              	.LVL315:
4931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4596              		.loc 1 4931 0
 4597 0032 0346     		mov	r3, r0
 4598 0034 60B9     		cbnz	r0, .L447
4934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 4599              		.loc 1 4934 0
 4600 0036 626C     		ldr	r2, [r4, #68]
 4601 0038 22F48852 		bic	r2, r2, #4352
 4602 003c 22F00102 		bic	r2, r2, #1
 4603 0040 42F00102 		orr	r2, r2, #1
 4604 0044 6264     		str	r2, [r4, #68]
ARM GAS  /tmp/cc0XO8k8.s 			page 224


 4605 0046 03E0     		b	.L447
 4606              	.LVL316:
 4607              	.L446:
4944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 4608              		.loc 1 4944 0
 4609 0048 626C     		ldr	r2, [r4, #68]
 4610 004a 22F48072 		bic	r2, r2, #256
 4611 004e 6264     		str	r2, [r4, #68]
 4612              	.LVL317:
 4613              	.L447:
4948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 4614              		.loc 1 4948 0
 4615 0050 0022     		movs	r2, #0
 4616 0052 84F84020 		strb	r2, [r4, #64]
4951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 4617              		.loc 1 4951 0
 4618 0056 1846     		mov	r0, r3
 4619 0058 10BD     		pop	{r4, pc}
 4620              	.LVL318:
 4621              	.L448:
 4622              	.LCFI55:
 4623              		.cfi_def_cfa_offset 0
 4624              		.cfi_restore 4
 4625              		.cfi_restore 14
4905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 4626              		.loc 1 4905 0
 4627 005a 0220     		movs	r0, #2
 4628              	.LVL319:
 4629 005c 7047     		bx	lr
 4630              		.cfi_endproc
 4631              	.LFE148:
 4633 005e 00BF     		.section	.text.HAL_ADCEx_RegularStop_IT,"ax",%progbits
 4634              		.align	2
 4635              		.global	HAL_ADCEx_RegularStop_IT
 4636              		.thumb
 4637              		.thumb_func
 4639              	HAL_ADCEx_RegularStop_IT:
 4640              	.LFB149:
4972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 4641              		.loc 1 4972 0
 4642              		.cfi_startproc
 4643              		@ args = 0, pretend = 0, frame = 0
 4644              		@ frame_needed = 0, uses_anonymous_args = 0
 4645              	.LVL320:
4979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 4646              		.loc 1 4979 0
 4647 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 4648 0004 012B     		cmp	r3, #1
 4649 0006 2CD0     		beq	.L455
4972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 4650              		.loc 1 4972 0 discriminator 2
 4651 0008 10B5     		push	{r4, lr}
 4652              	.LCFI56:
 4653              		.cfi_def_cfa_offset 8
 4654              		.cfi_offset 4, -8
 4655              		.cfi_offset 14, -4
 4656 000a 0446     		mov	r4, r0
ARM GAS  /tmp/cc0XO8k8.s 			page 225


4979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 4657              		.loc 1 4979 0 discriminator 2
 4658 000c 0123     		movs	r3, #1
 4659 000e 80F84030 		strb	r3, [r0, #64]
4993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 4660              		.loc 1 4993 0 discriminator 2
 4661 0012 0C21     		movs	r1, #12
 4662 0014 FFF7FEFF 		bl	ADC_ConversionStop
 4663              	.LVL321:
 4664 0018 0346     		mov	r3, r0
 4665              	.LVL322:
4998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == RESET)     )
 4666              		.loc 1 4998 0 discriminator 2
 4667 001a 2268     		ldr	r2, [r4]
 4668 001c 9168     		ldr	r1, [r2, #8]
 4669 001e 11F0080F 		tst	r1, #8
 4670 0022 15D1     		bne	.L453
4999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 4671              		.loc 1 4999 0 discriminator 1
 4672 0024 616C     		ldr	r1, [r4, #68]
4998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == RESET)     )
 4673              		.loc 1 4998 0 discriminator 1
 4674 0026 11F4805F 		tst	r1, #4096
 4675 002a 11D1     		bne	.L453
5003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4676              		.loc 1 5003 0
 4677 002c 5368     		ldr	r3, [r2, #4]
 4678              	.LVL323:
 4679 002e 23F01C03 		bic	r3, r3, #28
 4680 0032 5360     		str	r3, [r2, #4]
5006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4681              		.loc 1 5006 0
 4682 0034 2046     		mov	r0, r4
 4683 0036 FFF7FEFF 		bl	ADC_Disable
 4684              	.LVL324:
5009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4685              		.loc 1 5009 0
 4686 003a 0346     		mov	r3, r0
 4687 003c 60B9     		cbnz	r0, .L454
5012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 4688              		.loc 1 5012 0
 4689 003e 626C     		ldr	r2, [r4, #68]
 4690 0040 22F48852 		bic	r2, r2, #4352
 4691 0044 22F00102 		bic	r2, r2, #1
 4692 0048 42F00102 		orr	r2, r2, #1
 4693 004c 6264     		str	r2, [r4, #68]
 4694 004e 03E0     		b	.L454
 4695              	.LVL325:
 4696              	.L453:
5022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 4697              		.loc 1 5022 0
 4698 0050 626C     		ldr	r2, [r4, #68]
 4699 0052 22F48072 		bic	r2, r2, #256
 4700 0056 6264     		str	r2, [r4, #68]
 4701              	.LVL326:
 4702              	.L454:
5026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
ARM GAS  /tmp/cc0XO8k8.s 			page 226


 4703              		.loc 1 5026 0
 4704 0058 0022     		movs	r2, #0
 4705 005a 84F84020 		strb	r2, [r4, #64]
5029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 4706              		.loc 1 5029 0
 4707 005e 1846     		mov	r0, r3
 4708 0060 10BD     		pop	{r4, pc}
 4709              	.LVL327:
 4710              	.L455:
 4711              	.LCFI57:
 4712              		.cfi_def_cfa_offset 0
 4713              		.cfi_restore 4
 4714              		.cfi_restore 14
4979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 4715              		.loc 1 4979 0
 4716 0062 0220     		movs	r0, #2
 4717              	.LVL328:
 4718 0064 7047     		bx	lr
 4719              		.cfi_endproc
 4720              	.LFE149:
 4722              		.section	.text.HAL_ADCEx_RegularStop_DMA,"ax",%progbits
 4723              		.align	2
 4724              		.global	HAL_ADCEx_RegularStop_DMA
 4725              		.thumb
 4726              		.thumb_func
 4728              	HAL_ADCEx_RegularStop_DMA:
 4729              	.LFB150:
5052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 4730              		.loc 1 5052 0
 4731              		.cfi_startproc
 4732              		@ args = 0, pretend = 0, frame = 0
 4733              		@ frame_needed = 0, uses_anonymous_args = 0
 4734              	.LVL329:
 4735 0000 38B5     		push	{r3, r4, r5, lr}
 4736              	.LCFI58:
 4737              		.cfi_def_cfa_offset 16
 4738              		.cfi_offset 3, -16
 4739              		.cfi_offset 4, -12
 4740              		.cfi_offset 5, -8
 4741              		.cfi_offset 14, -4
 4742              	.LVL330:
5059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 4743              		.loc 1 5059 0
 4744 0002 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 4745 0006 012B     		cmp	r3, #1
 4746 0008 3ED0     		beq	.L465
 4747 000a 0446     		mov	r4, r0
5059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 4748              		.loc 1 5059 0 is_stmt 0 discriminator 2
 4749 000c 0123     		movs	r3, #1
 4750 000e 80F84030 		strb	r3, [r0, #64]
5073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 4751              		.loc 1 5073 0 is_stmt 1 discriminator 2
 4752 0012 0C21     		movs	r1, #12
 4753 0014 FFF7FEFF 		bl	ADC_ConversionStop
 4754              	.LVL331:
 4755 0018 0546     		mov	r5, r0
ARM GAS  /tmp/cc0XO8k8.s 			page 227


 4756              	.LVL332:
5078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == RESET)     )
 4757              		.loc 1 5078 0 discriminator 2
 4758 001a 2368     		ldr	r3, [r4]
 4759 001c 9A68     		ldr	r2, [r3, #8]
 4760 001e 12F0080F 		tst	r2, #8
 4761 0022 28D1     		bne	.L460
5079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 4762              		.loc 1 5079 0 discriminator 1
 4763 0024 626C     		ldr	r2, [r4, #68]
5078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == RESET)     )
 4764              		.loc 1 5078 0 discriminator 1
 4765 0026 12F4805F 		tst	r2, #4096
 4766 002a 24D1     		bne	.L460
5082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4767              		.loc 1 5082 0
 4768 002c DA68     		ldr	r2, [r3, #12]
 4769 002e 22F00102 		bic	r2, r2, #1
 4770 0032 DA60     		str	r2, [r3, #12]
5086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4771              		.loc 1 5086 0
 4772 0034 E06B     		ldr	r0, [r4, #60]
 4773 0036 FFF7FEFF 		bl	HAL_DMA_Abort
 4774              	.LVL333:
5089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4775              		.loc 1 5089 0
 4776 003a 0546     		mov	r5, r0
 4777 003c 18B1     		cbz	r0, .L461
5092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 4778              		.loc 1 5092 0
 4779 003e 636C     		ldr	r3, [r4, #68]
 4780 0040 43F04003 		orr	r3, r3, #64
 4781 0044 6364     		str	r3, [r4, #68]
 4782              	.L461:
5096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4783              		.loc 1 5096 0
 4784 0046 2268     		ldr	r2, [r4]
 4785 0048 5368     		ldr	r3, [r2, #4]
 4786 004a 23F01003 		bic	r3, r3, #16
 4787 004e 5360     		str	r3, [r2, #4]
5101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4788              		.loc 1 5101 0
 4789 0050 25B9     		cbnz	r5, .L462
5103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 4790              		.loc 1 5103 0
 4791 0052 2046     		mov	r0, r4
 4792              	.LVL334:
 4793 0054 FFF7FEFF 		bl	ADC_Disable
 4794              	.LVL335:
 4795 0058 0546     		mov	r5, r0
 4796              	.LVL336:
 4797 005a 02E0     		b	.L463
 4798              	.LVL337:
 4799              	.L462:
5107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 4800              		.loc 1 5107 0
 4801 005c 2046     		mov	r0, r4
ARM GAS  /tmp/cc0XO8k8.s 			page 228


 4802              	.LVL338:
 4803 005e FFF7FEFF 		bl	ADC_Disable
 4804              	.LVL339:
 4805              	.L463:
5111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4806              		.loc 1 5111 0
 4807 0062 65B9     		cbnz	r5, .L464
5114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 4808              		.loc 1 5114 0
 4809 0064 636C     		ldr	r3, [r4, #68]
 4810 0066 23F48853 		bic	r3, r3, #4352
 4811 006a 23F00103 		bic	r3, r3, #1
 4812 006e 43F00103 		orr	r3, r3, #1
 4813 0072 6364     		str	r3, [r4, #68]
 4814 0074 03E0     		b	.L464
 4815              	.L460:
5124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 4816              		.loc 1 5124 0
 4817 0076 636C     		ldr	r3, [r4, #68]
 4818 0078 23F48073 		bic	r3, r3, #256
 4819 007c 6364     		str	r3, [r4, #68]
 4820              	.L464:
5128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 4821              		.loc 1 5128 0
 4822 007e 0023     		movs	r3, #0
 4823 0080 84F84030 		strb	r3, [r4, #64]
5131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 4824              		.loc 1 5131 0
 4825 0084 2846     		mov	r0, r5
 4826 0086 38BD     		pop	{r3, r4, r5, pc}
 4827              	.LVL340:
 4828              	.L465:
5059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 4829              		.loc 1 5059 0
 4830 0088 0220     		movs	r0, #2
 4831              	.LVL341:
5132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 4832              		.loc 1 5132 0
 4833 008a 38BD     		pop	{r3, r4, r5, pc}
 4834              		.cfi_endproc
 4835              	.LFE150:
 4837              		.section	.text.HAL_ADCEx_RegularMultiModeStop_DMA,"ax",%progbits
 4838              		.align	2
 4839              		.global	HAL_ADCEx_RegularMultiModeStop_DMA
 4840              		.thumb
 4841              		.thumb_func
 4843              	HAL_ADCEx_RegularMultiModeStop_DMA:
 4844              	.LFB151:
5164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 4845              		.loc 1 5164 0
 4846              		.cfi_startproc
 4847              		@ args = 0, pretend = 0, frame = 88
 4848              		@ frame_needed = 0, uses_anonymous_args = 0
 4849              	.LVL342:
5173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 4850              		.loc 1 5173 0
 4851 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
ARM GAS  /tmp/cc0XO8k8.s 			page 229


 4852 0004 012B     		cmp	r3, #1
 4853 0006 7ED0     		beq	.L480
5164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 4854              		.loc 1 5164 0 discriminator 2
 4855 0008 30B5     		push	{r4, r5, lr}
 4856              	.LCFI59:
 4857              		.cfi_def_cfa_offset 12
 4858              		.cfi_offset 4, -12
 4859              		.cfi_offset 5, -8
 4860              		.cfi_offset 14, -4
 4861 000a 97B0     		sub	sp, sp, #92
 4862              	.LCFI60:
 4863              		.cfi_def_cfa_offset 104
 4864 000c 0446     		mov	r4, r0
5173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 4865              		.loc 1 5173 0 discriminator 2
 4866 000e 0123     		movs	r3, #1
 4867 0010 80F84030 		strb	r3, [r0, #64]
5187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 4868              		.loc 1 5187 0 discriminator 2
 4869 0014 0C21     		movs	r1, #12
 4870 0016 FFF7FEFF 		bl	ADC_ConversionStop
 4871              	.LVL343:
 4872 001a 0546     		mov	r5, r0
 4873              	.LVL344:
5192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == RESET)     )
 4874              		.loc 1 5192 0 discriminator 2
 4875 001c 2368     		ldr	r3, [r4]
 4876 001e 9A68     		ldr	r2, [r3, #8]
 4877 0020 12F0080F 		tst	r2, #8
 4878 0024 66D1     		bne	.L469
5193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 4879              		.loc 1 5193 0 discriminator 1
 4880 0026 626C     		ldr	r2, [r4, #68]
5192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == RESET)     )
 4881              		.loc 1 5192 0 discriminator 1
 4882 0028 12F4805F 		tst	r2, #4096
 4883 002c 62D1     		bne	.L469
5197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4884              		.loc 1 5197 0
 4885 002e B3F1A04F 		cmp	r3, #1342177280
 4886 0032 03D1     		bne	.L470
5197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4887              		.loc 1 5197 0 is_stmt 0 discriminator 1
 4888 0034 03F58073 		add	r3, r3, #256
 4889 0038 0193     		str	r3, [sp, #4]
 4890 003a 07E0     		b	.L471
 4891              	.L470:
5197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4892              		.loc 1 5197 0 discriminator 2
 4893 003c 344A     		ldr	r2, .L483
 4894 003e 9342     		cmp	r3, r2
 4895 0040 02D1     		bne	.L472
5197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4896              		.loc 1 5197 0 discriminator 3
 4897 0042 344B     		ldr	r3, .L483+4
 4898 0044 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/cc0XO8k8.s 			page 230


 4899 0046 01E0     		b	.L471
 4900              	.L472:
5197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4901              		.loc 1 5197 0 discriminator 4
 4902 0048 0023     		movs	r3, #0
 4903 004a 0193     		str	r3, [sp, #4]
 4904              	.L471:
5199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4905              		.loc 1 5199 0 is_stmt 1
 4906 004c 019B     		ldr	r3, [sp, #4]
 4907 004e 43B9     		cbnz	r3, .L474
5202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 4908              		.loc 1 5202 0
 4909 0050 636C     		ldr	r3, [r4, #68]
 4910 0052 43F04003 		orr	r3, r3, #64
 4911 0056 6364     		str	r3, [r4, #68]
5205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 4912              		.loc 1 5205 0
 4913 0058 0023     		movs	r3, #0
 4914 005a 84F84030 		strb	r3, [r4, #64]
5207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 4915              		.loc 1 5207 0
 4916 005e 0120     		movs	r0, #1
 4917 0060 53E0     		b	.L468
 4918              	.L474:
5214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 4919              		.loc 1 5214 0
 4920 0062 FFF7FEFF 		bl	HAL_GetTick
 4921              	.LVL345:
 4922 0066 0546     		mov	r5, r0
 4923              	.LVL346:
5216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_IS_CONVERSION_ONGOING_REGULAR(&tmphadcSlave)   )
 4924              		.loc 1 5216 0
 4925 0068 0DE0     		b	.L475
 4926              	.LVL347:
 4927              	.L476:
5219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 4928              		.loc 1 5219 0
 4929 006a FFF7FEFF 		bl	HAL_GetTick
 4930              	.LVL348:
 4931 006e 401B     		subs	r0, r0, r5
 4932 0070 0B28     		cmp	r0, #11
 4933 0072 08D9     		bls	.L475
5222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 4934              		.loc 1 5222 0
 4935 0074 636C     		ldr	r3, [r4, #68]
 4936 0076 43F01003 		orr	r3, r3, #16
 4937 007a 6364     		str	r3, [r4, #68]
5225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 4938              		.loc 1 5225 0
 4939 007c 0023     		movs	r3, #0
 4940 007e 84F84030 		strb	r3, [r4, #64]
5227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 4941              		.loc 1 5227 0
 4942 0082 0120     		movs	r0, #1
 4943 0084 41E0     		b	.L468
 4944              	.L475:
ARM GAS  /tmp/cc0XO8k8.s 			page 231


5216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_IS_CONVERSION_ONGOING_REGULAR(&tmphadcSlave)   )
 4945              		.loc 1 5216 0
 4946 0086 2368     		ldr	r3, [r4]
 4947 0088 9B68     		ldr	r3, [r3, #8]
 4948 008a 13F0040F 		tst	r3, #4
 4949 008e ECD1     		bne	.L476
5217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4950              		.loc 1 5217 0 discriminator 1
 4951 0090 019B     		ldr	r3, [sp, #4]
 4952 0092 9B68     		ldr	r3, [r3, #8]
5216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_IS_CONVERSION_ONGOING_REGULAR(&tmphadcSlave)   )
 4953              		.loc 1 5216 0 discriminator 1
 4954 0094 13F0040F 		tst	r3, #4
 4955 0098 E7D1     		bne	.L476
5237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4956              		.loc 1 5237 0
 4957 009a E06B     		ldr	r0, [r4, #60]
 4958 009c FFF7FEFF 		bl	HAL_DMA_Abort
 4959              	.LVL349:
5240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4960              		.loc 1 5240 0
 4961 00a0 0546     		mov	r5, r0
 4962              	.LVL350:
 4963 00a2 18B1     		cbz	r0, .L477
5243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 4964              		.loc 1 5243 0
 4965 00a4 636C     		ldr	r3, [r4, #68]
 4966 00a6 43F04003 		orr	r3, r3, #64
 4967 00aa 6364     		str	r3, [r4, #68]
 4968              	.L477:
5247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4969              		.loc 1 5247 0
 4970 00ac 2268     		ldr	r2, [r4]
 4971 00ae 5368     		ldr	r3, [r2, #4]
 4972 00b0 23F01003 		bic	r3, r3, #16
 4973 00b4 5360     		str	r3, [r2, #4]
5254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4974              		.loc 1 5254 0
 4975 00b6 95B9     		cbnz	r5, .L478
5257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_Disable(&tmphadcSlave) != HAL_ERROR)   )
 4976              		.loc 1 5257 0
 4977 00b8 2046     		mov	r0, r4
 4978              	.LVL351:
 4979 00ba FFF7FEFF 		bl	ADC_Disable
 4980              	.LVL352:
 4981 00be 0128     		cmp	r0, #1
 4982 00c0 1CD0     		beq	.L479
5258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 4983              		.loc 1 5258 0 discriminator 1
 4984 00c2 01A8     		add	r0, sp, #4
 4985 00c4 FFF7FEFF 		bl	ADC_Disable
 4986              	.LVL353:
5257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_Disable(&tmphadcSlave) != HAL_ERROR)   )
 4987              		.loc 1 5257 0 discriminator 1
 4988 00c8 0128     		cmp	r0, #1
 4989 00ca 17D0     		beq	.L479
 4990              	.LVL354:
ARM GAS  /tmp/cc0XO8k8.s 			page 232


5263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 4991              		.loc 1 5263 0
 4992 00cc 636C     		ldr	r3, [r4, #68]
 4993 00ce 23F48853 		bic	r3, r3, #4352
 4994 00d2 23F00103 		bic	r3, r3, #1
 4995 00d6 43F00103 		orr	r3, r3, #1
 4996 00da 6364     		str	r3, [r4, #68]
 4997 00dc 0EE0     		b	.L479
 4998              	.LVL355:
 4999              	.L478:
5271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_Disable(&tmphadcSlave);
 5000              		.loc 1 5271 0
 5001 00de 2046     		mov	r0, r4
 5002              	.LVL356:
 5003 00e0 FFF7FEFF 		bl	ADC_Disable
 5004              	.LVL357:
5272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 5005              		.loc 1 5272 0
 5006 00e4 01A8     		add	r0, sp, #4
 5007 00e6 FFF7FEFF 		bl	ADC_Disable
 5008              	.LVL358:
5275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 5009              		.loc 1 5275 0
 5010 00ea 636C     		ldr	r3, [r4, #68]
 5011 00ec 43F01003 		orr	r3, r3, #16
 5012 00f0 6364     		str	r3, [r4, #68]
 5013 00f2 03E0     		b	.L479
 5014              	.LVL359:
 5015              	.L469:
5284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 5016              		.loc 1 5284 0
 5017 00f4 636C     		ldr	r3, [r4, #68]
 5018 00f6 23F48073 		bic	r3, r3, #256
 5019 00fa 6364     		str	r3, [r4, #68]
 5020              	.LVL360:
 5021              	.L479:
5288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 5022              		.loc 1 5288 0
 5023 00fc 0023     		movs	r3, #0
 5024 00fe 84F84030 		strb	r3, [r4, #64]
5291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 5025              		.loc 1 5291 0
 5026 0102 2846     		mov	r0, r5
 5027 0104 01E0     		b	.L468
 5028              	.LVL361:
 5029              	.L480:
 5030              	.LCFI61:
 5031              		.cfi_def_cfa_offset 0
 5032              		.cfi_restore 4
 5033              		.cfi_restore 5
 5034              		.cfi_restore 14
5173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 5035              		.loc 1 5173 0
 5036 0106 0220     		movs	r0, #2
 5037              	.LVL362:
 5038 0108 7047     		bx	lr
 5039              	.LVL363:
ARM GAS  /tmp/cc0XO8k8.s 			page 233


 5040              	.L468:
 5041              	.LCFI62:
 5042              		.cfi_def_cfa_offset 104
 5043              		.cfi_offset 4, -12
 5044              		.cfi_offset 5, -8
 5045              		.cfi_offset 14, -4
5292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 5046              		.loc 1 5292 0
 5047 010a 17B0     		add	sp, sp, #92
 5048              	.LCFI63:
 5049              		.cfi_def_cfa_offset 12
 5050              		@ sp needed
 5051 010c 30BD     		pop	{r4, r5, pc}
 5052              	.LVL364:
 5053              	.L484:
 5054 010e 00BF     		.align	2
 5055              	.L483:
 5056 0110 00040050 		.word	1342178304
 5057 0114 00050050 		.word	1342178560
 5058              		.cfi_endproc
 5059              	.LFE151:
 5061              		.section	.text.HAL_ADCEx_InjectedConvCpltCallback,"ax",%progbits
 5062              		.align	2
 5063              		.weak	HAL_ADCEx_InjectedConvCpltCallback
 5064              		.thumb
 5065              		.thumb_func
 5067              	HAL_ADCEx_InjectedConvCpltCallback:
 5068              	.LFB152:
5309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 5069              		.loc 1 5309 0
 5070              		.cfi_startproc
 5071              		@ args = 0, pretend = 0, frame = 0
 5072              		@ frame_needed = 0, uses_anonymous_args = 0
 5073              		@ link register save eliminated.
 5074              	.LVL365:
 5075 0000 7047     		bx	lr
 5076              		.cfi_endproc
 5077              	.LFE152:
 5079 0002 00BF     		.section	.text.HAL_ADCEx_InjectedQueueOverflowCallback,"ax",%progbits
 5080              		.align	2
 5081              		.weak	HAL_ADCEx_InjectedQueueOverflowCallback
 5082              		.thumb
 5083              		.thumb_func
 5085              	HAL_ADCEx_InjectedQueueOverflowCallback:
 5086              	.LFB153:
5332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 5087              		.loc 1 5332 0
 5088              		.cfi_startproc
 5089              		@ args = 0, pretend = 0, frame = 0
 5090              		@ frame_needed = 0, uses_anonymous_args = 0
 5091              		@ link register save eliminated.
 5092              	.LVL366:
 5093 0000 7047     		bx	lr
 5094              		.cfi_endproc
 5095              	.LFE153:
 5097 0002 00BF     		.section	.text.HAL_ADCEx_LevelOutOfWindow2Callback,"ax",%progbits
 5098              		.align	2
ARM GAS  /tmp/cc0XO8k8.s 			page 234


 5099              		.weak	HAL_ADCEx_LevelOutOfWindow2Callback
 5100              		.thumb
 5101              		.thumb_func
 5103              	HAL_ADCEx_LevelOutOfWindow2Callback:
 5104              	.LFB154:
5348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 5105              		.loc 1 5348 0
 5106              		.cfi_startproc
 5107              		@ args = 0, pretend = 0, frame = 0
 5108              		@ frame_needed = 0, uses_anonymous_args = 0
 5109              		@ link register save eliminated.
 5110              	.LVL367:
 5111 0000 7047     		bx	lr
 5112              		.cfi_endproc
 5113              	.LFE154:
 5115 0002 00BF     		.section	.text.HAL_ADCEx_LevelOutOfWindow3Callback,"ax",%progbits
 5116              		.align	2
 5117              		.weak	HAL_ADCEx_LevelOutOfWindow3Callback
 5118              		.thumb
 5119              		.thumb_func
 5121              	HAL_ADCEx_LevelOutOfWindow3Callback:
 5122              	.LFB155:
5363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 5123              		.loc 1 5363 0
 5124              		.cfi_startproc
 5125              		@ args = 0, pretend = 0, frame = 0
 5126              		@ frame_needed = 0, uses_anonymous_args = 0
 5127              		@ link register save eliminated.
 5128              	.LVL368:
 5129 0000 7047     		bx	lr
 5130              		.cfi_endproc
 5131              	.LFE155:
 5133 0002 00BF     		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
 5134              		.align	2
 5135              		.global	HAL_ADC_IRQHandler
 5136              		.thumb
 5137              		.thumb_func
 5139              	HAL_ADC_IRQHandler:
 5140              	.LFB135:
2819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t overrun_error = 0U; /* flag set if overrun occurrence has to be considered as an error *
 5141              		.loc 1 2819 0
 5142              		.cfi_startproc
 5143              		@ args = 0, pretend = 0, frame = 0
 5144              		@ frame_needed = 0, uses_anonymous_args = 0
 5145              	.LVL369:
2819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t overrun_error = 0U; /* flag set if overrun occurrence has to be considered as an error *
 5146              		.loc 1 2819 0
 5147 0000 10B5     		push	{r4, lr}
 5148              	.LCFI64:
 5149              		.cfi_def_cfa_offset 8
 5150              		.cfi_offset 4, -8
 5151              		.cfi_offset 14, -4
 5152 0002 0446     		mov	r4, r0
 5153              	.LVL370:
2831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_EOS))   )
 5154              		.loc 1 2831 0
 5155 0004 0368     		ldr	r3, [r0]
ARM GAS  /tmp/cc0XO8k8.s 			page 235


 5156 0006 1A68     		ldr	r2, [r3]
 5157 0008 12F0040F 		tst	r2, #4
 5158 000c 03D0     		beq	.L490
2831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_EOS))   )
 5159              		.loc 1 2831 0 is_stmt 0 discriminator 1
 5160 000e 5A68     		ldr	r2, [r3, #4]
 5161 0010 12F0040F 		tst	r2, #4
 5162 0014 09D1     		bne	.L491
 5163              	.L490:
2832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 5164              		.loc 1 2832 0 is_stmt 1 discriminator 3
 5165 0016 1A68     		ldr	r2, [r3]
2831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_EOS))   )
 5166              		.loc 1 2831 0 discriminator 3
 5167 0018 12F0080F 		tst	r2, #8
 5168 001c 00F08780 		beq	.L492
2832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 5169              		.loc 1 2832 0
 5170 0020 5A68     		ldr	r2, [r3, #4]
 5171 0022 12F0080F 		tst	r2, #8
 5172 0026 00F08280 		beq	.L492
 5173              	.L491:
2835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5174              		.loc 1 2835 0
 5175 002a 626C     		ldr	r2, [r4, #68]
 5176 002c 12F0100F 		tst	r2, #16
 5177 0030 03D1     		bne	.L493
2838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 5178              		.loc 1 2838 0
 5179 0032 626C     		ldr	r2, [r4, #68]
 5180 0034 42F40072 		orr	r2, r2, #512
 5181 0038 6264     		str	r2, [r4, #68]
 5182              	.L493:
2844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5183              		.loc 1 2844 0
 5184 003a B3F1A04F 		cmp	r3, #1342177280
 5185 003e 02D0     		beq	.L494
2844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5186              		.loc 1 2844 0 is_stmt 0 discriminator 2
 5187 0040 9A4A     		ldr	r2, .L562
 5188 0042 9342     		cmp	r3, r2
 5189 0044 05D1     		bne	.L495
 5190              	.L494:
2844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5191              		.loc 1 2844 0 discriminator 3
 5192 0046 9A4A     		ldr	r2, .L562+4
 5193 0048 9268     		ldr	r2, [r2, #8]
 5194 004a 12F01F0F 		tst	r2, #31
 5195 004e 31D0     		beq	.L496
 5196 0050 04E0     		b	.L497
 5197              	.L495:
2844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5198              		.loc 1 2844 0 discriminator 4
 5199 0052 984A     		ldr	r2, .L562+8
 5200 0054 9268     		ldr	r2, [r2, #8]
 5201 0056 12F01F0F 		tst	r2, #31
 5202 005a 2BD0     		beq	.L496
ARM GAS  /tmp/cc0XO8k8.s 			page 236


 5203              	.L497:
2844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5204              		.loc 1 2844 0 discriminator 5
 5205 005c B3F1A04F 		cmp	r3, #1342177280
 5206 0060 02D0     		beq	.L498
2844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5207              		.loc 1 2844 0 discriminator 7
 5208 0062 924A     		ldr	r2, .L562
 5209 0064 9342     		cmp	r3, r2
 5210 0066 06D1     		bne	.L499
 5211              	.L498:
2844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5212              		.loc 1 2844 0 discriminator 8
 5213 0068 914A     		ldr	r2, .L562+4
 5214 006a 9268     		ldr	r2, [r2, #8]
 5215 006c 02F01F02 		and	r2, r2, #31
 5216 0070 052A     		cmp	r2, #5
 5217 0072 06D1     		bne	.L500
 5218 0074 1EE0     		b	.L496
 5219              	.L499:
2844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5220              		.loc 1 2844 0 discriminator 9
 5221 0076 8F4A     		ldr	r2, .L562+8
 5222 0078 9268     		ldr	r2, [r2, #8]
 5223 007a 02F01F02 		and	r2, r2, #31
 5224 007e 052A     		cmp	r2, #5
 5225 0080 18D0     		beq	.L496
 5226              	.L500:
2844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5227              		.loc 1 2844 0 discriminator 10
 5228 0082 B3F1A04F 		cmp	r3, #1342177280
 5229 0086 02D0     		beq	.L501
2844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5230              		.loc 1 2844 0 discriminator 12
 5231 0088 884A     		ldr	r2, .L562
 5232 008a 9342     		cmp	r3, r2
 5233 008c 06D1     		bne	.L502
 5234              	.L501:
2844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5235              		.loc 1 2844 0 discriminator 13
 5236 008e 884A     		ldr	r2, .L562+4
 5237 0090 9268     		ldr	r2, [r2, #8]
 5238 0092 02F01F02 		and	r2, r2, #31
 5239 0096 092A     		cmp	r2, #9
 5240 0098 06D1     		bne	.L503
 5241 009a 0BE0     		b	.L496
 5242              	.L502:
2844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5243              		.loc 1 2844 0 discriminator 14
 5244 009c 854A     		ldr	r2, .L562+8
 5245 009e 9268     		ldr	r2, [r2, #8]
 5246 00a0 02F01F02 		and	r2, r2, #31
 5247 00a4 092A     		cmp	r2, #9
 5248 00a6 05D0     		beq	.L496
 5249              	.L503:
2844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5250              		.loc 1 2844 0 discriminator 15
ARM GAS  /tmp/cc0XO8k8.s 			page 237


 5251 00a8 B3F1A04F 		cmp	r3, #1342177280
 5252 00ac 02D0     		beq	.L496
2844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5253              		.loc 1 2844 0 discriminator 16
 5254 00ae 824A     		ldr	r2, .L562+12
 5255 00b0 9342     		cmp	r3, r2
 5256 00b2 01D1     		bne	.L504
 5257              	.L496:
2846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 5258              		.loc 1 2846 0 is_stmt 1
 5259 00b4 D968     		ldr	r1, [r3, #12]
 5260              	.LVL371:
 5261 00b6 0CE0     		b	.L505
 5262              	.LVL372:
 5263              	.L504:
2850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 5264              		.loc 1 2850 0
 5265 00b8 B3F1A04F 		cmp	r3, #1342177280
 5266 00bc 05D0     		beq	.L550
2850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 5267              		.loc 1 2850 0 is_stmt 0 discriminator 2
 5268 00be 7B4A     		ldr	r2, .L562
 5269 00c0 9342     		cmp	r3, r2
 5270 00c2 04D1     		bne	.L551
2850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 5271              		.loc 1 2850 0
 5272 00c4 4FF0A042 		mov	r2, #1342177280
 5273 00c8 02E0     		b	.L506
 5274              	.L550:
 5275 00ca 1A46     		mov	r2, r3
 5276 00cc 00E0     		b	.L506
 5277              	.L551:
 5278 00ce 7A4A     		ldr	r2, .L562+12
 5279              	.L506:
2850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 5280              		.loc 1 2850 0 discriminator 6
 5281 00d0 D168     		ldr	r1, [r2, #12]
 5282              	.LVL373:
 5283              	.L505:
2856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == RESET)  )
 5284              		.loc 1 2856 0 is_stmt 1
 5285 00d2 DA68     		ldr	r2, [r3, #12]
 5286 00d4 12F4406F 		tst	r2, #3072
 5287 00d8 23D1     		bne	.L507
2856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == RESET)  )
 5288              		.loc 1 2856 0 is_stmt 0 discriminator 1
 5289 00da 11F4005F 		tst	r1, #8192
 5290 00de 20D1     		bne	.L507
2860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 5291              		.loc 1 2860 0 is_stmt 1
 5292 00e0 1A68     		ldr	r2, [r3]
 5293 00e2 12F0080F 		tst	r2, #8
 5294 00e6 1CD0     		beq	.L507
2864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 5295              		.loc 1 2864 0
 5296 00e8 9A68     		ldr	r2, [r3, #8]
 5297 00ea 12F0040F 		tst	r2, #4
ARM GAS  /tmp/cc0XO8k8.s 			page 238


 5298 00ee 10D1     		bne	.L508
2870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
 5299              		.loc 1 2870 0
 5300 00f0 5A68     		ldr	r2, [r3, #4]
 5301 00f2 22F00C02 		bic	r2, r2, #12
 5302 00f6 5A60     		str	r2, [r3, #4]
2873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
 5303              		.loc 1 2873 0
 5304 00f8 636C     		ldr	r3, [r4, #68]
 5305 00fa 23F48073 		bic	r3, r3, #256
 5306 00fe 6364     		str	r3, [r4, #68]
2875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
 5307              		.loc 1 2875 0
 5308 0100 636C     		ldr	r3, [r4, #68]
 5309 0102 13F4805F 		tst	r3, #4096
 5310 0106 0CD1     		bne	.L507
2877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           }
 5311              		.loc 1 2877 0
 5312 0108 636C     		ldr	r3, [r4, #68]
 5313 010a 43F00103 		orr	r3, r3, #1
 5314 010e 6364     		str	r3, [r4, #68]
 5315 0110 07E0     		b	.L507
 5316              	.L508:
2883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 5317              		.loc 1 2883 0
 5318 0112 636C     		ldr	r3, [r4, #68]
 5319 0114 43F01003 		orr	r3, r3, #16
 5320 0118 6364     		str	r3, [r4, #68]
2886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 5321              		.loc 1 2886 0
 5322 011a A36C     		ldr	r3, [r4, #72]
 5323 011c 43F00103 		orr	r3, r3, #1
 5324 0120 A364     		str	r3, [r4, #72]
 5325              	.L507:
2895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 5326              		.loc 1 2895 0
 5327 0122 2046     		mov	r0, r4
 5328              	.LVL374:
 5329 0124 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 5330              	.LVL375:
2904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 5331              		.loc 1 2904 0
 5332 0128 2368     		ldr	r3, [r4]
 5333 012a 0C22     		movs	r2, #12
 5334 012c 1A60     		str	r2, [r3]
 5335              	.L492:
2909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_JEOS))   )
 5336              		.loc 1 2909 0
 5337 012e 2368     		ldr	r3, [r4]
 5338 0130 1A68     		ldr	r2, [r3]
 5339 0132 12F0200F 		tst	r2, #32
 5340 0136 03D0     		beq	.L509
2909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_JEOS))   )
 5341              		.loc 1 2909 0 is_stmt 0 discriminator 1
 5342 0138 5A68     		ldr	r2, [r3, #4]
 5343 013a 12F0200F 		tst	r2, #32
 5344 013e 09D1     		bne	.L510
ARM GAS  /tmp/cc0XO8k8.s 			page 239


 5345              	.L509:
2910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 5346              		.loc 1 2910 0 is_stmt 1 discriminator 3
 5347 0140 1A68     		ldr	r2, [r3]
2909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_JEOS))   )
 5348              		.loc 1 2909 0 discriminator 3
 5349 0142 12F0400F 		tst	r2, #64
 5350 0146 00F0E180 		beq	.L511
2910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 5351              		.loc 1 2910 0
 5352 014a 5A68     		ldr	r2, [r3, #4]
 5353 014c 12F0400F 		tst	r2, #64
 5354 0150 00F0DC80 		beq	.L511
 5355              	.L510:
2913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 5356              		.loc 1 2913 0
 5357 0154 626C     		ldr	r2, [r4, #68]
 5358 0156 42F40052 		orr	r2, r2, #8192
 5359 015a 6264     		str	r2, [r4, #68]
2918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5360              		.loc 1 2918 0
 5361 015c B3F1A04F 		cmp	r3, #1342177280
 5362 0160 02D0     		beq	.L512
2918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5363              		.loc 1 2918 0 is_stmt 0 discriminator 2
 5364 0162 524A     		ldr	r2, .L562
 5365 0164 9342     		cmp	r3, r2
 5366 0166 05D1     		bne	.L513
 5367              	.L512:
2918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5368              		.loc 1 2918 0 discriminator 3
 5369 0168 514A     		ldr	r2, .L562+4
 5370 016a 9268     		ldr	r2, [r2, #8]
 5371 016c 12F01F0F 		tst	r2, #31
 5372 0170 31D0     		beq	.L514
 5373 0172 04E0     		b	.L515
 5374              	.L513:
2918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5375              		.loc 1 2918 0 discriminator 4
 5376 0174 4F4A     		ldr	r2, .L562+8
 5377 0176 9268     		ldr	r2, [r2, #8]
 5378 0178 12F01F0F 		tst	r2, #31
 5379 017c 2BD0     		beq	.L514
 5380              	.L515:
2918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5381              		.loc 1 2918 0 discriminator 5
 5382 017e B3F1A04F 		cmp	r3, #1342177280
 5383 0182 02D0     		beq	.L516
2918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5384              		.loc 1 2918 0 discriminator 7
 5385 0184 494A     		ldr	r2, .L562
 5386 0186 9342     		cmp	r3, r2
 5387 0188 06D1     		bne	.L517
 5388              	.L516:
2918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5389              		.loc 1 2918 0 discriminator 8
 5390 018a 494A     		ldr	r2, .L562+4
ARM GAS  /tmp/cc0XO8k8.s 			page 240


 5391 018c 9268     		ldr	r2, [r2, #8]
 5392 018e 02F01F02 		and	r2, r2, #31
 5393 0192 052A     		cmp	r2, #5
 5394 0194 06D1     		bne	.L518
 5395 0196 1EE0     		b	.L514
 5396              	.L517:
2918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5397              		.loc 1 2918 0 discriminator 9
 5398 0198 464A     		ldr	r2, .L562+8
 5399 019a 9268     		ldr	r2, [r2, #8]
 5400 019c 02F01F02 		and	r2, r2, #31
 5401 01a0 052A     		cmp	r2, #5
 5402 01a2 18D0     		beq	.L514
 5403              	.L518:
2918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5404              		.loc 1 2918 0 discriminator 10
 5405 01a4 B3F1A04F 		cmp	r3, #1342177280
 5406 01a8 02D0     		beq	.L519
2918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5407              		.loc 1 2918 0 discriminator 12
 5408 01aa 404A     		ldr	r2, .L562
 5409 01ac 9342     		cmp	r3, r2
 5410 01ae 06D1     		bne	.L520
 5411              	.L519:
2918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5412              		.loc 1 2918 0 discriminator 13
 5413 01b0 3F4A     		ldr	r2, .L562+4
 5414 01b2 9268     		ldr	r2, [r2, #8]
 5415 01b4 02F01F02 		and	r2, r2, #31
 5416 01b8 092A     		cmp	r2, #9
 5417 01ba 06D1     		bne	.L521
 5418 01bc 0BE0     		b	.L514
 5419              	.L520:
2918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5420              		.loc 1 2918 0 discriminator 14
 5421 01be 3D4A     		ldr	r2, .L562+8
 5422 01c0 9268     		ldr	r2, [r2, #8]
 5423 01c2 02F01F02 		and	r2, r2, #31
 5424 01c6 092A     		cmp	r2, #9
 5425 01c8 05D0     		beq	.L514
 5426              	.L521:
2918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5427              		.loc 1 2918 0 discriminator 15
 5428 01ca B3F1A04F 		cmp	r3, #1342177280
 5429 01ce 02D0     		beq	.L514
2918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5430              		.loc 1 2918 0 discriminator 16
 5431 01d0 394A     		ldr	r2, .L562+12
 5432 01d2 9342     		cmp	r3, r2
 5433 01d4 01D1     		bne	.L522
 5434              	.L514:
2920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 5435              		.loc 1 2920 0 is_stmt 1
 5436 01d6 D968     		ldr	r1, [r3, #12]
 5437              	.LVL376:
 5438 01d8 0CE0     		b	.L523
 5439              	.LVL377:
ARM GAS  /tmp/cc0XO8k8.s 			page 241


 5440              	.L522:
2924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 5441              		.loc 1 2924 0
 5442 01da B3F1A04F 		cmp	r3, #1342177280
 5443 01de 05D0     		beq	.L552
2924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 5444              		.loc 1 2924 0 is_stmt 0 discriminator 2
 5445 01e0 324A     		ldr	r2, .L562
 5446 01e2 9342     		cmp	r3, r2
 5447 01e4 04D1     		bne	.L553
2924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 5448              		.loc 1 2924 0
 5449 01e6 4FF0A042 		mov	r2, #1342177280
 5450 01ea 02E0     		b	.L524
 5451              	.L552:
 5452 01ec 1A46     		mov	r2, r3
 5453 01ee 00E0     		b	.L524
 5454              	.L553:
 5455 01f0 314A     		ldr	r2, .L562+12
 5456              	.L524:
2924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 5457              		.loc 1 2924 0 discriminator 6
 5458 01f2 D168     		ldr	r1, [r2, #12]
 5459              	.LVL378:
 5460              	.L523:
2932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        ((READ_BIT (tmp_cfgr, ADC_CFGR_JAUTO) == RESET)    &&
 5461              		.loc 1 2932 0 is_stmt 1
 5462 01f4 DA6C     		ldr	r2, [r3, #76]
 5463 01f6 12F0C00F 		tst	r2, #192
 5464 01fa 09D0     		beq	.L525
2932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        ((READ_BIT (tmp_cfgr, ADC_CFGR_JAUTO) == RESET)    &&
 5465              		.loc 1 2932 0 is_stmt 0 discriminator 1
 5466 01fc 11F0007F 		tst	r1, #33554432
 5467 0200 7ED1     		bne	.L526
2934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         (READ_BIT (tmp_cfgr, ADC_CFGR_CONT) == RESET)   )   )   )
 5468              		.loc 1 2934 0 is_stmt 1
 5469 0202 DA68     		ldr	r2, [r3, #12]
2933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         (ADC_IS_SOFTWARE_START_REGULAR(hadc)          &&
 5470              		.loc 1 2933 0
 5471 0204 12F4406F 		tst	r2, #3072
 5472 0208 7AD1     		bne	.L526
2934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         (READ_BIT (tmp_cfgr, ADC_CFGR_CONT) == RESET)   )   )   )
 5473              		.loc 1 2934 0
 5474 020a 11F4005F 		tst	r1, #8192
 5475 020e 77D1     		bne	.L526
 5476              	.L525:
2938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 5477              		.loc 1 2938 0
 5478 0210 1A68     		ldr	r2, [r3]
 5479 0212 12F0400F 		tst	r2, #64
 5480 0216 73D0     		beq	.L526
2944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 5481              		.loc 1 2944 0
 5482 0218 B3F1A04F 		cmp	r3, #1342177280
 5483 021c 02D0     		beq	.L527
2944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 5484              		.loc 1 2944 0 is_stmt 0 discriminator 2
ARM GAS  /tmp/cc0XO8k8.s 			page 242


 5485 021e 234A     		ldr	r2, .L562
 5486 0220 9342     		cmp	r3, r2
 5487 0222 05D1     		bne	.L528
 5488              	.L527:
2944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 5489              		.loc 1 2944 0 discriminator 3
 5490 0224 224A     		ldr	r2, .L562+4
 5491 0226 9268     		ldr	r2, [r2, #8]
 5492 0228 12F01F0F 		tst	r2, #31
 5493 022c 31D0     		beq	.L529
 5494 022e 04E0     		b	.L530
 5495              	.L528:
2944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 5496              		.loc 1 2944 0 discriminator 4
 5497 0230 204A     		ldr	r2, .L562+8
 5498 0232 9268     		ldr	r2, [r2, #8]
 5499 0234 12F01F0F 		tst	r2, #31
 5500 0238 2BD0     		beq	.L529
 5501              	.L530:
2944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 5502              		.loc 1 2944 0 discriminator 5
 5503 023a B3F1A04F 		cmp	r3, #1342177280
 5504 023e 02D0     		beq	.L531
2944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 5505              		.loc 1 2944 0 discriminator 7
 5506 0240 1A4A     		ldr	r2, .L562
 5507 0242 9342     		cmp	r3, r2
 5508 0244 06D1     		bne	.L532
 5509              	.L531:
2944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 5510              		.loc 1 2944 0 discriminator 8
 5511 0246 1A4A     		ldr	r2, .L562+4
 5512 0248 9268     		ldr	r2, [r2, #8]
 5513 024a 02F01F02 		and	r2, r2, #31
 5514 024e 062A     		cmp	r2, #6
 5515 0250 06D1     		bne	.L533
 5516 0252 1EE0     		b	.L529
 5517              	.L532:
2944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 5518              		.loc 1 2944 0 discriminator 9
 5519 0254 174A     		ldr	r2, .L562+8
 5520 0256 9268     		ldr	r2, [r2, #8]
 5521 0258 02F01F02 		and	r2, r2, #31
 5522 025c 062A     		cmp	r2, #6
 5523 025e 18D0     		beq	.L529
 5524              	.L533:
2944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 5525              		.loc 1 2944 0 discriminator 10
 5526 0260 B3F1A04F 		cmp	r3, #1342177280
 5527 0264 02D0     		beq	.L534
2944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 5528              		.loc 1 2944 0 discriminator 12
 5529 0266 114A     		ldr	r2, .L562
 5530 0268 9342     		cmp	r3, r2
 5531 026a 06D1     		bne	.L535
 5532              	.L534:
2944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
ARM GAS  /tmp/cc0XO8k8.s 			page 243


 5533              		.loc 1 2944 0 discriminator 13
 5534 026c 104A     		ldr	r2, .L562+4
 5535 026e 9268     		ldr	r2, [r2, #8]
 5536 0270 02F01F02 		and	r2, r2, #31
 5537 0274 072A     		cmp	r2, #7
 5538 0276 06D1     		bne	.L536
 5539 0278 0BE0     		b	.L529
 5540              	.L535:
2944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 5541              		.loc 1 2944 0 discriminator 14
 5542 027a 0E4A     		ldr	r2, .L562+8
 5543 027c 9268     		ldr	r2, [r2, #8]
 5544 027e 02F01F02 		and	r2, r2, #31
 5545 0282 072A     		cmp	r2, #7
 5546 0284 05D0     		beq	.L529
 5547              	.L536:
2944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 5548              		.loc 1 2944 0 discriminator 15
 5549 0286 B3F1A04F 		cmp	r3, #1342177280
 5550 028a 02D0     		beq	.L529
2944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 5551              		.loc 1 2944 0 discriminator 16
 5552 028c 0A4A     		ldr	r2, .L562+12
 5553 028e 9342     		cmp	r3, r2
 5554 0290 01D1     		bne	.L537
 5555              	.L529:
2946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 5556              		.loc 1 2946 0 is_stmt 1
 5557 0292 DA68     		ldr	r2, [r3, #12]
 5558              	.LVL379:
 5559 0294 14E0     		b	.L538
 5560              	.LVL380:
 5561              	.L537:
2950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 5562              		.loc 1 2950 0
 5563 0296 B3F1A04F 		cmp	r3, #1342177280
 5564 029a 05D0     		beq	.L554
2950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 5565              		.loc 1 2950 0 is_stmt 0 discriminator 2
 5566 029c 034A     		ldr	r2, .L562
 5567 029e 9342     		cmp	r3, r2
 5568 02a0 0CD1     		bne	.L555
2950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 5569              		.loc 1 2950 0
 5570 02a2 4FF0A042 		mov	r2, #1342177280
 5571 02a6 0AE0     		b	.L539
 5572              	.L554:
 5573 02a8 1A46     		mov	r2, r3
 5574 02aa 08E0     		b	.L539
 5575              	.L563:
 5576              		.align	2
 5577              	.L562:
 5578 02ac 00010050 		.word	1342177536
 5579 02b0 00030050 		.word	1342178048
 5580 02b4 00070050 		.word	1342179072
 5581 02b8 00040050 		.word	1342178304
 5582              	.L555:
ARM GAS  /tmp/cc0XO8k8.s 			page 244


 5583 02bc 5B4A     		ldr	r2, .L564
 5584              	.L539:
2950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 5585              		.loc 1 2950 0 discriminator 6
 5586 02be D268     		ldr	r2, [r2, #12]
 5587              	.LVL381:
 5588              	.L538:
2959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 5589              		.loc 1 2959 0 is_stmt 1
 5590 02c0 12F4001F 		tst	r2, #2097152
 5591 02c4 1CD1     		bne	.L526
2963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
 5592              		.loc 1 2963 0
 5593 02c6 9A68     		ldr	r2, [r3, #8]
 5594              	.LVL382:
 5595 02c8 12F0080F 		tst	r2, #8
 5596 02cc 10D1     		bne	.L540
2966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             
 5597              		.loc 1 2966 0
 5598 02ce 5A68     		ldr	r2, [r3, #4]
 5599 02d0 22F06002 		bic	r2, r2, #96
 5600 02d4 5A60     		str	r2, [r3, #4]
2969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 5601              		.loc 1 2969 0
 5602 02d6 636C     		ldr	r3, [r4, #68]
 5603 02d8 23F48053 		bic	r3, r3, #4096
 5604 02dc 6364     		str	r3, [r4, #68]
2971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             { 
 5605              		.loc 1 2971 0
 5606 02de 636C     		ldr	r3, [r4, #68]
 5607 02e0 13F4807F 		tst	r3, #256
 5608 02e4 0CD1     		bne	.L526
2973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             }
 5609              		.loc 1 2973 0
 5610 02e6 636C     		ldr	r3, [r4, #68]
 5611 02e8 43F00103 		orr	r3, r3, #1
 5612 02ec 6364     		str	r3, [r4, #68]
 5613 02ee 07E0     		b	.L526
 5614              	.L540:
2979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
 5615              		.loc 1 2979 0
 5616 02f0 636C     		ldr	r3, [r4, #68]
 5617 02f2 43F01003 		orr	r3, r3, #16
 5618 02f6 6364     		str	r3, [r4, #68]
2982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           }
 5619              		.loc 1 2982 0
 5620 02f8 A36C     		ldr	r3, [r4, #72]
 5621 02fa 43F00103 		orr	r3, r3, #1
 5622 02fe A364     		str	r3, [r4, #72]
 5623              	.L526:
2992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 5624              		.loc 1 2992 0
 5625 0300 2046     		mov	r0, r4
 5626 0302 FFF7FEFF 		bl	HAL_ADCEx_InjectedConvCpltCallback
 5627              	.LVL383:
2995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 5628              		.loc 1 2995 0
ARM GAS  /tmp/cc0XO8k8.s 			page 245


 5629 0306 2368     		ldr	r3, [r4]
 5630 0308 6022     		movs	r2, #96
 5631 030a 1A60     		str	r2, [r3]
 5632              	.L511:
2999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 5633              		.loc 1 2999 0
 5634 030c 2368     		ldr	r3, [r4]
 5635 030e 1A68     		ldr	r2, [r3]
 5636 0310 12F0800F 		tst	r2, #128
 5637 0314 0DD0     		beq	.L541
2999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 5638              		.loc 1 2999 0 is_stmt 0 discriminator 1
 5639 0316 5B68     		ldr	r3, [r3, #4]
 5640 0318 13F0800F 		tst	r3, #128
 5641 031c 09D0     		beq	.L541
3002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 5642              		.loc 1 3002 0 is_stmt 1
 5643 031e 636C     		ldr	r3, [r4, #68]
 5644 0320 43F48033 		orr	r3, r3, #65536
 5645 0324 6364     		str	r3, [r4, #68]
3005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear ADC analog watchdog flag */ 
 5646              		.loc 1 3005 0
 5647 0326 2046     		mov	r0, r4
 5648 0328 FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
 5649              	.LVL384:
3007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 5650              		.loc 1 3007 0
 5651 032c 2368     		ldr	r3, [r4]
 5652 032e 8022     		movs	r2, #128
 5653 0330 1A60     		str	r2, [r3]
 5654              	.L541:
3011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 5655              		.loc 1 3011 0
 5656 0332 2368     		ldr	r3, [r4]
 5657 0334 1A68     		ldr	r2, [r3]
 5658 0336 12F4807F 		tst	r2, #256
 5659 033a 0ED0     		beq	.L542
3011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 5660              		.loc 1 3011 0 is_stmt 0 discriminator 1
 5661 033c 5B68     		ldr	r3, [r3, #4]
 5662 033e 13F4807F 		tst	r3, #256
 5663 0342 0AD0     		beq	.L542
3014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 5664              		.loc 1 3014 0 is_stmt 1
 5665 0344 636C     		ldr	r3, [r4, #68]
 5666 0346 43F40033 		orr	r3, r3, #131072
 5667 034a 6364     		str	r3, [r4, #68]
3017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear ADC analog watchdog flag */ 
 5668              		.loc 1 3017 0
 5669 034c 2046     		mov	r0, r4
 5670 034e FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow2Callback
 5671              	.LVL385:
3019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   } 
 5672              		.loc 1 3019 0
 5673 0352 2368     		ldr	r3, [r4]
 5674 0354 4FF48072 		mov	r2, #256
 5675 0358 1A60     		str	r2, [r3]
ARM GAS  /tmp/cc0XO8k8.s 			page 246


 5676              	.L542:
3023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 5677              		.loc 1 3023 0
 5678 035a 2368     		ldr	r3, [r4]
 5679 035c 1A68     		ldr	r2, [r3]
 5680 035e 12F4007F 		tst	r2, #512
 5681 0362 0ED0     		beq	.L543
3023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 5682              		.loc 1 3023 0 is_stmt 0 discriminator 1
 5683 0364 5B68     		ldr	r3, [r3, #4]
 5684 0366 13F4007F 		tst	r3, #512
 5685 036a 0AD0     		beq	.L543
3026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 5686              		.loc 1 3026 0 is_stmt 1
 5687 036c 636C     		ldr	r3, [r4, #68]
 5688 036e 43F48023 		orr	r3, r3, #262144
 5689 0372 6364     		str	r3, [r4, #68]
3029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear ADC analog watchdog flag */ 
 5690              		.loc 1 3029 0
 5691 0374 2046     		mov	r0, r4
 5692 0376 FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow3Callback
 5693              	.LVL386:
3031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 5694              		.loc 1 3031 0
 5695 037a 2368     		ldr	r3, [r4]
 5696 037c 4FF40072 		mov	r2, #512
 5697 0380 1A60     		str	r2, [r3]
 5698              	.L543:
3035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 5699              		.loc 1 3035 0
 5700 0382 2368     		ldr	r3, [r4]
 5701 0384 1A68     		ldr	r2, [r3]
 5702 0386 12F0100F 		tst	r2, #16
 5703 038a 36D0     		beq	.L544
3035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 5704              		.loc 1 3035 0 is_stmt 0 discriminator 1
 5705 038c 5A68     		ldr	r2, [r3, #4]
 5706 038e 12F0100F 		tst	r2, #16
 5707 0392 32D0     		beq	.L544
3043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5708              		.loc 1 3043 0 is_stmt 1
 5709 0394 A26B     		ldr	r2, [r4, #56]
 5710 0396 012A     		cmp	r2, #1
 5711 0398 1BD0     		beq	.L556
3052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 5712              		.loc 1 3052 0
 5713 039a B3F1A04F 		cmp	r3, #1342177280
 5714 039e 05D0     		beq	.L557
3052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 5715              		.loc 1 3052 0 is_stmt 0 discriminator 2
 5716 03a0 234A     		ldr	r2, .L564+4
 5717 03a2 9342     		cmp	r3, r2
 5718 03a4 04D1     		bne	.L558
3052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 5719              		.loc 1 3052 0
 5720 03a6 02F50072 		add	r2, r2, #512
 5721 03aa 02E0     		b	.L546
ARM GAS  /tmp/cc0XO8k8.s 			page 247


 5722              	.L557:
 5723 03ac 214A     		ldr	r2, .L564+8
 5724 03ae 00E0     		b	.L546
 5725              	.L558:
 5726 03b0 214A     		ldr	r2, .L564+12
 5727              	.L546:
 5728              	.LVL387:
3055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 5729              		.loc 1 3055 0 is_stmt 1 discriminator 6
 5730 03b2 9168     		ldr	r1, [r2, #8]
 5731 03b4 11F01F0F 		tst	r1, #31
 5732 03b8 05D1     		bne	.L547
3057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 5733              		.loc 1 3057 0
 5734 03ba DB68     		ldr	r3, [r3, #12]
 5735 03bc 13F0010F 		tst	r3, #1
 5736 03c0 09D1     		bne	.L559
2820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 5737              		.loc 1 2820 0
 5738 03c2 0023     		movs	r3, #0
 5739 03c4 0AE0     		b	.L545
 5740              	.L547:
3065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 5741              		.loc 1 3065 0
 5742 03c6 9368     		ldr	r3, [r2, #8]
 5743 03c8 13F4404F 		tst	r3, #49152
 5744 03cc 05D1     		bne	.L560
2820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 5745              		.loc 1 2820 0
 5746 03ce 0023     		movs	r3, #0
 5747 03d0 04E0     		b	.L545
 5748              	.LVL388:
 5749              	.L556:
3045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 5750              		.loc 1 3045 0
 5751 03d2 0123     		movs	r3, #1
 5752 03d4 02E0     		b	.L545
 5753              	.LVL389:
 5754              	.L559:
3059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 5755              		.loc 1 3059 0
 5756 03d6 0123     		movs	r3, #1
 5757 03d8 00E0     		b	.L545
 5758              	.L560:
3067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 5759              		.loc 1 3067 0
 5760 03da 0123     		movs	r3, #1
 5761              	.LVL390:
 5762              	.L545:
3072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5763              		.loc 1 3072 0
 5764 03dc 53B1     		cbz	r3, .L548
3075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 5765              		.loc 1 3075 0
 5766 03de 636C     		ldr	r3, [r4, #68]
 5767              	.LVL391:
 5768 03e0 43F48063 		orr	r3, r3, #1024
ARM GAS  /tmp/cc0XO8k8.s 			page 248


 5769 03e4 6364     		str	r3, [r4, #68]
3078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 5770              		.loc 1 3078 0
 5771 03e6 A36C     		ldr	r3, [r4, #72]
 5772 03e8 43F00203 		orr	r3, r3, #2
 5773 03ec A364     		str	r3, [r4, #72]
3081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 5774              		.loc 1 3081 0
 5775 03ee 2046     		mov	r0, r4
 5776 03f0 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 5777              	.LVL392:
 5778              	.L548:
3085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 5779              		.loc 1 3085 0
 5780 03f4 2368     		ldr	r3, [r4]
 5781 03f6 1022     		movs	r2, #16
 5782 03f8 1A60     		str	r2, [r3]
 5783              	.L544:
3091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 5784              		.loc 1 3091 0
 5785 03fa 2368     		ldr	r3, [r4]
 5786 03fc 1A68     		ldr	r2, [r3]
 5787 03fe 12F4806F 		tst	r2, #1024
 5788 0402 11D0     		beq	.L489
3091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 5789              		.loc 1 3091 0 is_stmt 0 discriminator 1
 5790 0404 5A68     		ldr	r2, [r3, #4]
 5791 0406 12F4806F 		tst	r2, #1024
 5792 040a 0DD0     		beq	.L489
3094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 5793              		.loc 1 3094 0 is_stmt 1
 5794 040c 626C     		ldr	r2, [r4, #68]
 5795 040e 42F48042 		orr	r2, r2, #16384
 5796 0412 6264     		str	r2, [r4, #68]
3097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 5797              		.loc 1 3097 0
 5798 0414 A26C     		ldr	r2, [r4, #72]
 5799 0416 42F00802 		orr	r2, r2, #8
 5800 041a A264     		str	r2, [r4, #72]
3100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 5801              		.loc 1 3100 0
 5802 041c 4FF48062 		mov	r2, #1024
 5803 0420 1A60     		str	r2, [r3]
3103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 5804              		.loc 1 3103 0
 5805 0422 2046     		mov	r0, r4
 5806 0424 FFF7FEFF 		bl	HAL_ADCEx_InjectedQueueOverflowCallback
 5807              	.LVL393:
 5808              	.L489:
 5809 0428 10BD     		pop	{r4, pc}
 5810              	.LVL394:
 5811              	.L565:
 5812 042a 00BF     		.align	2
 5813              	.L564:
 5814 042c 00040050 		.word	1342178304
 5815 0430 00010050 		.word	1342177536
 5816 0434 00030050 		.word	1342178048
ARM GAS  /tmp/cc0XO8k8.s 			page 249


 5817 0438 00070050 		.word	1342179072
 5818              		.cfi_endproc
 5819              	.LFE135:
 5821              		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 5822              		.align	2
 5823              		.global	HAL_ADC_ConfigChannel
 5824              		.thumb
 5825              		.thumb_func
 5827              	HAL_ADC_ConfigChannel:
 5828              	.LFB156:
5426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 5829              		.loc 1 5426 0
 5830              		.cfi_startproc
 5831              		@ args = 0, pretend = 0, frame = 88
 5832              		@ frame_needed = 0, uses_anonymous_args = 0
 5833              		@ link register save eliminated.
 5834              	.LVL395:
 5835 0000 70B4     		push	{r4, r5, r6}
 5836              	.LCFI65:
 5837              		.cfi_def_cfa_offset 12
 5838              		.cfi_offset 4, -12
 5839              		.cfi_offset 5, -8
 5840              		.cfi_offset 6, -4
 5841 0002 97B0     		sub	sp, sp, #92
 5842              	.LCFI66:
 5843              		.cfi_def_cfa_offset 104
 5844              	.LVL396:
5431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 5845              		.loc 1 5431 0
 5846 0004 0023     		movs	r3, #0
 5847 0006 0093     		str	r3, [sp]
5455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 5848              		.loc 1 5455 0
 5849 0008 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 5850 000c 012B     		cmp	r3, #1
 5851 000e 00F0B781 		beq	.L608
5455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 5852              		.loc 1 5455 0 is_stmt 0 discriminator 2
 5853 0012 0123     		movs	r3, #1
 5854 0014 80F84030 		strb	r3, [r0, #64]
5463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 5855              		.loc 1 5463 0 is_stmt 1 discriminator 2
 5856 0018 0268     		ldr	r2, [r0]
 5857 001a 9368     		ldr	r3, [r2, #8]
 5858 001c 13F0040F 		tst	r3, #4
 5859 0020 40F09C81 		bne	.L568
5467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5860              		.loc 1 5467 0
 5861 0024 4B68     		ldr	r3, [r1, #4]
 5862 0026 042B     		cmp	r3, #4
 5863 0028 0CD8     		bhi	.L569
5469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SQR1_RK(ADC_SQR2_SQ5, sConfig->Rank)    ,
 5864              		.loc 1 5469 0
 5865 002a 156B     		ldr	r5, [r2, #48]
 5866 002c 03EB4303 		add	r3, r3, r3, lsl #1
 5867 0030 5E00     		lsls	r6, r3, #1
 5868 0032 1F23     		movs	r3, #31
ARM GAS  /tmp/cc0XO8k8.s 			page 250


 5869 0034 B340     		lsls	r3, r3, r6
 5870 0036 25EA0304 		bic	r4, r5, r3
 5871 003a 0B68     		ldr	r3, [r1]
 5872 003c B340     		lsls	r3, r3, r6
 5873 003e 2343     		orrs	r3, r3, r4
 5874 0040 1363     		str	r3, [r2, #48]
 5875 0042 2CE0     		b	.L570
 5876              	.L569:
5474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5877              		.loc 1 5474 0
 5878 0044 092B     		cmp	r3, #9
 5879 0046 0DD8     		bhi	.L571
5476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SQR2_RK(ADC_SQR2_SQ5, sConfig->Rank)    ,
 5880              		.loc 1 5476 0
 5881 0048 566B     		ldr	r6, [r2, #52]
 5882 004a 03EB4303 		add	r3, r3, r3, lsl #1
 5883 004e 5C00     		lsls	r4, r3, #1
 5884 0050 1E3C     		subs	r4, r4, #30
 5885 0052 1F23     		movs	r3, #31
 5886 0054 A340     		lsls	r3, r3, r4
 5887 0056 26EA0305 		bic	r5, r6, r3
 5888 005a 0B68     		ldr	r3, [r1]
 5889 005c A340     		lsls	r3, r3, r4
 5890 005e 2B43     		orrs	r3, r3, r5
 5891 0060 5363     		str	r3, [r2, #52]
 5892 0062 1CE0     		b	.L570
 5893              	.L571:
5481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5894              		.loc 1 5481 0
 5895 0064 0E2B     		cmp	r3, #14
 5896 0066 0DD8     		bhi	.L572
5483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SQR3_RK(ADC_SQR3_SQ10, sConfig->Rank)   ,
 5897              		.loc 1 5483 0
 5898 0068 966B     		ldr	r6, [r2, #56]
 5899 006a 03EB4303 		add	r3, r3, r3, lsl #1
 5900 006e 5C00     		lsls	r4, r3, #1
 5901 0070 3C3C     		subs	r4, r4, #60
 5902 0072 1F23     		movs	r3, #31
 5903 0074 A340     		lsls	r3, r3, r4
 5904 0076 26EA0305 		bic	r5, r6, r3
 5905 007a 0B68     		ldr	r3, [r1]
 5906 007c A340     		lsls	r3, r3, r4
 5907 007e 2B43     		orrs	r3, r3, r5
 5908 0080 9363     		str	r3, [r2, #56]
 5909 0082 0CE0     		b	.L570
 5910              	.L572:
5490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SQR4_RK(ADC_SQR4_SQ15, sConfig->Rank)   ,
 5911              		.loc 1 5490 0
 5912 0084 D66B     		ldr	r6, [r2, #60]
 5913 0086 03EB4303 		add	r3, r3, r3, lsl #1
 5914 008a 5C00     		lsls	r4, r3, #1
 5915 008c 5A3C     		subs	r4, r4, #90
 5916 008e 1F23     		movs	r3, #31
 5917 0090 A340     		lsls	r3, r3, r4
 5918 0092 26EA0305 		bic	r5, r6, r3
 5919 0096 0B68     		ldr	r3, [r1]
 5920 0098 A340     		lsls	r3, r3, r4
ARM GAS  /tmp/cc0XO8k8.s 			page 251


 5921 009a 2B43     		orrs	r3, r3, r5
 5922 009c D363     		str	r3, [r2, #60]
 5923              	.L570:
5501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 5924              		.loc 1 5501 0
 5925 009e 0268     		ldr	r2, [r0]
 5926 00a0 9368     		ldr	r3, [r2, #8]
 5927 00a2 13F00C0F 		tst	r3, #12
 5928 00a6 40F08880 		bne	.L573
5505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5929              		.loc 1 5505 0
 5930 00aa 0B68     		ldr	r3, [r1]
 5931 00ac 092B     		cmp	r3, #9
 5932 00ae 0DD9     		bls	.L574
5507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SMPR2(ADC_SMPR2_SMP10, sConfig->Channel)      ,
 5933              		.loc 1 5507 0
 5934 00b0 9469     		ldr	r4, [r2, #24]
 5935 00b2 03EB4303 		add	r3, r3, r3, lsl #1
 5936 00b6 1E3B     		subs	r3, r3, #30
 5937 00b8 0725     		movs	r5, #7
 5938 00ba 9D40     		lsls	r5, r5, r3
 5939 00bc 24EA0505 		bic	r5, r4, r5
 5940 00c0 8C68     		ldr	r4, [r1, #8]
 5941 00c2 04FA03F3 		lsl	r3, r4, r3
 5942 00c6 2B43     		orrs	r3, r3, r5
 5943 00c8 9361     		str	r3, [r2, #24]
 5944 00ca 0BE0     		b	.L575
 5945              	.L574:
5513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SMPR1(ADC_SMPR1_SMP0, sConfig->Channel)       ,
 5946              		.loc 1 5513 0
 5947 00cc 5469     		ldr	r4, [r2, #20]
 5948 00ce 03EB4303 		add	r3, r3, r3, lsl #1
 5949 00d2 0725     		movs	r5, #7
 5950 00d4 9D40     		lsls	r5, r5, r3
 5951 00d6 24EA0505 		bic	r5, r4, r5
 5952 00da 8C68     		ldr	r4, [r1, #8]
 5953 00dc 04FA03F3 		lsl	r3, r4, r3
 5954 00e0 2B43     		orrs	r3, r3, r5
 5955 00e2 5361     		str	r3, [r2, #20]
 5956              	.L575:
5524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 5957              		.loc 1 5524 0
 5958 00e4 4A69     		ldr	r2, [r1, #20]
 5959 00e6 0468     		ldr	r4, [r0]
 5960 00e8 E368     		ldr	r3, [r4, #12]
 5961 00ea C3F3C103 		ubfx	r3, r3, #3, #2
 5962 00ee 5B00     		lsls	r3, r3, #1
 5963 00f0 02FA03F3 		lsl	r3, r2, r3
 5964              	.LVL397:
5530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5965              		.loc 1 5530 0
 5966 00f4 0A69     		ldr	r2, [r1, #16]
 5967 00f6 013A     		subs	r2, r2, #1
 5968 00f8 032A     		cmp	r2, #3
 5969 00fa 2FD8     		bhi	.L576
 5970 00fc DFE802F0 		tbb	[pc, r2]
 5971              	.L578:
ARM GAS  /tmp/cc0XO8k8.s 			page 252


 5972 0100 02       		.byte	(.L577-.L578)/2
 5973 0101 0D       		.byte	(.L579-.L578)/2
 5974 0102 18       		.byte	(.L580-.L578)/2
 5975 0103 23       		.byte	(.L581-.L578)/2
 5976              		.p2align 1
 5977              	.L577:
5534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR1_OFFSET1_CH |
 5978              		.loc 1 5534 0
 5979 0104 226E     		ldr	r2, [r4, #96]
 5980 0106 A04D     		ldr	r5, .L620
 5981 0108 1540     		ands	r5, r5, r2
 5982 010a 0A68     		ldr	r2, [r1]
 5983 010c 43EA8263 		orr	r3, r3, r2, lsl #26
 5984              	.LVL398:
 5985 0110 2B43     		orrs	r3, r3, r5
 5986 0112 43F00043 		orr	r3, r3, #-2147483648
 5987 0116 2366     		str	r3, [r4, #96]
5540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 5988              		.loc 1 5540 0
 5989 0118 4FE0     		b	.L573
 5990              	.LVL399:
 5991              	.L579:
5544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR2_OFFSET2_CH |
 5992              		.loc 1 5544 0
 5993 011a 626E     		ldr	r2, [r4, #100]
 5994 011c 9A4D     		ldr	r5, .L620
 5995 011e 1540     		ands	r5, r5, r2
 5996 0120 0A68     		ldr	r2, [r1]
 5997 0122 43EA8263 		orr	r3, r3, r2, lsl #26
 5998              	.LVL400:
 5999 0126 2B43     		orrs	r3, r3, r5
 6000 0128 43F00043 		orr	r3, r3, #-2147483648
 6001 012c 6366     		str	r3, [r4, #100]
5550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 6002              		.loc 1 5550 0
 6003 012e 44E0     		b	.L573
 6004              	.LVL401:
 6005              	.L580:
5554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR3_OFFSET3_CH |
 6006              		.loc 1 5554 0
 6007 0130 A26E     		ldr	r2, [r4, #104]
 6008 0132 954D     		ldr	r5, .L620
 6009 0134 1540     		ands	r5, r5, r2
 6010 0136 0A68     		ldr	r2, [r1]
 6011 0138 43EA8263 		orr	r3, r3, r2, lsl #26
 6012              	.LVL402:
 6013 013c 2B43     		orrs	r3, r3, r5
 6014 013e 43F00043 		orr	r3, r3, #-2147483648
 6015 0142 A366     		str	r3, [r4, #104]
5560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 6016              		.loc 1 5560 0
 6017 0144 39E0     		b	.L573
 6018              	.LVL403:
 6019              	.L581:
5564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR4_OFFSET4_CH |
 6020              		.loc 1 5564 0
 6021 0146 E56E     		ldr	r5, [r4, #108]
ARM GAS  /tmp/cc0XO8k8.s 			page 253


 6022 0148 8F4A     		ldr	r2, .L620
 6023 014a 2A40     		ands	r2, r2, r5
 6024 014c 0D68     		ldr	r5, [r1]
 6025 014e 43EA8563 		orr	r3, r3, r5, lsl #26
 6026              	.LVL404:
 6027 0152 1343     		orrs	r3, r3, r2
 6028 0154 43F00043 		orr	r3, r3, #-2147483648
 6029 0158 E366     		str	r3, [r4, #108]
5570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 6030              		.loc 1 5570 0
 6031 015a 2EE0     		b	.L573
 6032              	.LVL405:
 6033              	.L576:
5576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 6034              		.loc 1 5576 0
 6035 015c 236E     		ldr	r3, [r4, #96]
 6036              	.LVL406:
 6037 015e 03F0F843 		and	r3, r3, #2080374784
 6038 0162 0A68     		ldr	r2, [r1]
 6039 0164 B3EB826F 		cmp	r3, r2, lsl #26
 6040 0168 03D1     		bne	.L582
5579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 6041              		.loc 1 5579 0
 6042 016a 236E     		ldr	r3, [r4, #96]
 6043 016c 23F00043 		bic	r3, r3, #-2147483648
 6044 0170 2366     		str	r3, [r4, #96]
 6045              	.L582:
5581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 6046              		.loc 1 5581 0
 6047 0172 0268     		ldr	r2, [r0]
 6048 0174 536E     		ldr	r3, [r2, #100]
 6049 0176 03F0F843 		and	r3, r3, #2080374784
 6050 017a 0C68     		ldr	r4, [r1]
 6051 017c B3EB846F 		cmp	r3, r4, lsl #26
 6052 0180 03D1     		bne	.L583
5584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 6053              		.loc 1 5584 0
 6054 0182 536E     		ldr	r3, [r2, #100]
 6055 0184 23F00043 		bic	r3, r3, #-2147483648
 6056 0188 5366     		str	r3, [r2, #100]
 6057              	.L583:
5586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 6058              		.loc 1 5586 0
 6059 018a 0268     		ldr	r2, [r0]
 6060 018c 936E     		ldr	r3, [r2, #104]
 6061 018e 03F0F843 		and	r3, r3, #2080374784
 6062 0192 0C68     		ldr	r4, [r1]
 6063 0194 B3EB846F 		cmp	r3, r4, lsl #26
 6064 0198 03D1     		bne	.L584
5589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 6065              		.loc 1 5589 0
 6066 019a 936E     		ldr	r3, [r2, #104]
 6067 019c 23F00043 		bic	r3, r3, #-2147483648
 6068 01a0 9366     		str	r3, [r2, #104]
 6069              	.L584:
5591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 6070              		.loc 1 5591 0
ARM GAS  /tmp/cc0XO8k8.s 			page 254


 6071 01a2 0268     		ldr	r2, [r0]
 6072 01a4 D36E     		ldr	r3, [r2, #108]
 6073 01a6 03F0F843 		and	r3, r3, #2080374784
 6074 01aa 0C68     		ldr	r4, [r1]
 6075 01ac B3EB846F 		cmp	r3, r4, lsl #26
 6076 01b0 03D1     		bne	.L573
5594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 6077              		.loc 1 5594 0
 6078 01b2 D36E     		ldr	r3, [r2, #108]
 6079 01b4 23F00043 		bic	r3, r3, #-2147483648
 6080 01b8 D366     		str	r3, [r2, #108]
 6081              	.L573:
5606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 6082              		.loc 1 5606 0
 6083 01ba 0268     		ldr	r2, [r0]
 6084 01bc 9368     		ldr	r3, [r2, #8]
 6085 01be 03F00303 		and	r3, r3, #3
 6086 01c2 012B     		cmp	r3, #1
 6087 01c4 05D1     		bne	.L609
5606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 6088              		.loc 1 5606 0 is_stmt 0 discriminator 1
 6089 01c6 1368     		ldr	r3, [r2]
 6090 01c8 13F0010F 		tst	r3, #1
 6091 01cc 03D1     		bne	.L610
5606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 6092              		.loc 1 5606 0
 6093 01ce 0024     		movs	r4, #0
 6094 01d0 02E0     		b	.L585
 6095              	.L609:
 6096 01d2 0024     		movs	r4, #0
 6097 01d4 00E0     		b	.L585
 6098              	.L610:
 6099 01d6 0124     		movs	r4, #1
 6100              	.L585:
5606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 6101              		.loc 1 5606 0 discriminator 6
 6102 01d8 002C     		cmp	r4, #0
 6103 01da 40F0C580 		bne	.L611
5609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 6104              		.loc 1 5609 0 is_stmt 1
 6105 01de CB68     		ldr	r3, [r1, #12]
 6106 01e0 012B     		cmp	r3, #1
 6107 01e2 09D0     		beq	.L587
5612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 6108              		.loc 1 5612 0
 6109 01e4 D2F8B050 		ldr	r5, [r2, #176]
 6110 01e8 0E68     		ldr	r6, [r1]
 6111 01ea 0123     		movs	r3, #1
 6112 01ec B340     		lsls	r3, r3, r6
 6113 01ee 25EA0303 		bic	r3, r5, r3
 6114 01f2 C2F8B030 		str	r3, [r2, #176]
 6115 01f6 28E0     		b	.L588
 6116              	.L587:
5617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 6117              		.loc 1 5617 0
 6118 01f8 D2F8B060 		ldr	r6, [r2, #176]
 6119 01fc 0B68     		ldr	r3, [r1]
ARM GAS  /tmp/cc0XO8k8.s 			page 255


 6120 01fe 0125     		movs	r5, #1
 6121 0200 05FA03F3 		lsl	r3, r5, r3
 6122 0204 3343     		orrs	r3, r3, r6
 6123 0206 C2F8B030 		str	r3, [r2, #176]
5622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 6124              		.loc 1 5622 0
 6125 020a 0B68     		ldr	r3, [r1]
 6126 020c 092B     		cmp	r3, #9
 6127 020e 0ED9     		bls	.L589
5624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_SMPR2(ADC_SMPR2_SMP10, sConfig->Channel +1U)      ,
 6128              		.loc 1 5624 0
 6129 0210 0668     		ldr	r6, [r0]
 6130 0212 B269     		ldr	r2, [r6, #24]
 6131 0214 03EB4303 		add	r3, r3, r3, lsl #1
 6132 0218 1B3B     		subs	r3, r3, #27
 6133 021a 0725     		movs	r5, #7
 6134 021c 9D40     		lsls	r5, r5, r3
 6135 021e 22EA0505 		bic	r5, r2, r5
 6136 0222 8A68     		ldr	r2, [r1, #8]
 6137 0224 02FA03F3 		lsl	r3, r2, r3
 6138 0228 2B43     		orrs	r3, r3, r5
 6139 022a B361     		str	r3, [r6, #24]
 6140 022c 0DE0     		b	.L588
 6141              	.L589:
5630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_SMPR1(ADC_SMPR1_SMP0, sConfig->Channel +1U)       ,
 6142              		.loc 1 5630 0
 6143 022e 0668     		ldr	r6, [r0]
 6144 0230 7269     		ldr	r2, [r6, #20]
 6145 0232 0133     		adds	r3, r3, #1
 6146 0234 03EB4303 		add	r3, r3, r3, lsl #1
 6147 0238 0725     		movs	r5, #7
 6148 023a 9D40     		lsls	r5, r5, r3
 6149 023c 22EA0505 		bic	r5, r2, r5
 6150 0240 8A68     		ldr	r2, [r1, #8]
 6151 0242 02FA03F3 		lsl	r3, r2, r3
 6152 0246 2B43     		orrs	r3, r3, r5
 6153 0248 7361     		str	r3, [r6, #20]
 6154              	.L588:
5647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 6155              		.loc 1 5647 0
 6156 024a 0368     		ldr	r3, [r0]
 6157 024c B3F1A04F 		cmp	r3, #1342177280
 6158 0250 04D0     		beq	.L612
5647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 6159              		.loc 1 5647 0 is_stmt 0 discriminator 2
 6160 0252 4E4A     		ldr	r2, .L620+4
 6161 0254 9342     		cmp	r3, r2
 6162 0256 03D1     		bne	.L613
5647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 6163              		.loc 1 5647 0
 6164 0258 4D4D     		ldr	r5, .L620+8
 6165 025a 02E0     		b	.L590
 6166              	.L612:
 6167 025c 4C4D     		ldr	r5, .L620+8
 6168 025e 00E0     		b	.L590
 6169              	.L613:
 6170 0260 4C4D     		ldr	r5, .L620+12
ARM GAS  /tmp/cc0XO8k8.s 			page 256


 6171              	.L590:
 6172              	.LVL407:
5651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_TSEN))            ) ||
 6173              		.loc 1 5651 0 is_stmt 1 discriminator 6
 6174 0262 0A68     		ldr	r2, [r1]
 6175 0264 102A     		cmp	r2, #16
 6176 0266 03D1     		bne	.L591
5652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (sConfig->Channel == ADC_CHANNEL_VBAT)       &&
 6177              		.loc 1 5652 0 discriminator 1
 6178 0268 AE68     		ldr	r6, [r5, #8]
5651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_TSEN))            ) ||
 6179              		.loc 1 5651 0 discriminator 1
 6180 026a 16F4000F 		tst	r6, #8388608
 6181 026e 0BD0     		beq	.L592
 6182              	.L591:
5652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (sConfig->Channel == ADC_CHANNEL_VBAT)       &&
 6183              		.loc 1 5652 0
 6184 0270 112A     		cmp	r2, #17
 6185 0272 03D1     		bne	.L593
5654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (sConfig->Channel == ADC_CHANNEL_VREFINT)    &&
 6186              		.loc 1 5654 0
 6187 0274 AE68     		ldr	r6, [r5, #8]
5653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_VBATEN))          ) ||
 6188              		.loc 1 5653 0
 6189 0276 16F0807F 		tst	r6, #16777216
 6190 027a 05D0     		beq	.L592
 6191              	.L593:
5654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (sConfig->Channel == ADC_CHANNEL_VREFINT)    &&
 6192              		.loc 1 5654 0
 6193 027c 122A     		cmp	r2, #18
 6194 027e 75D1     		bne	.L614
5656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        )
 6195              		.loc 1 5656 0
 6196 0280 AA68     		ldr	r2, [r5, #8]
5655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_VREFEN)))
 6197              		.loc 1 5655 0
 6198 0282 12F4800F 		tst	r2, #4194304
 6199 0286 73D1     		bne	.L615
 6200              	.L592:
5661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 6201              		.loc 1 5661 0
 6202 0288 B3F1A04F 		cmp	r3, #1342177280
 6203 028c 03D1     		bne	.L594
5661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 6204              		.loc 1 5661 0 is_stmt 0 discriminator 1
 6205 028e 03F58073 		add	r3, r3, #256
 6206 0292 0193     		str	r3, [sp, #4]
 6207 0294 14E0     		b	.L595
 6208              	.L594:
5661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 6209              		.loc 1 5661 0 discriminator 2
 6210 0296 3D4A     		ldr	r2, .L620+4
 6211 0298 9342     		cmp	r3, r2
 6212 029a 03D1     		bne	.L596
5661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 6213              		.loc 1 5661 0 discriminator 3
 6214 029c 4FF0A043 		mov	r3, #1342177280
ARM GAS  /tmp/cc0XO8k8.s 			page 257


 6215 02a0 0193     		str	r3, [sp, #4]
 6216 02a2 0DE0     		b	.L595
 6217              	.L596:
5661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 6218              		.loc 1 5661 0 discriminator 4
 6219 02a4 3C4A     		ldr	r2, .L620+16
 6220 02a6 9342     		cmp	r3, r2
 6221 02a8 02D1     		bne	.L598
5661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 6222              		.loc 1 5661 0 discriminator 6
 6223 02aa 3C4B     		ldr	r3, .L620+20
 6224 02ac 0193     		str	r3, [sp, #4]
 6225 02ae 07E0     		b	.L595
 6226              	.L598:
5661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 6227              		.loc 1 5661 0 discriminator 7
 6228 02b0 3A4A     		ldr	r2, .L620+20
 6229 02b2 9342     		cmp	r3, r2
 6230 02b4 02D1     		bne	.L599
5661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 6231              		.loc 1 5661 0 discriminator 9
 6232 02b6 384B     		ldr	r3, .L620+16
 6233 02b8 0193     		str	r3, [sp, #4]
 6234 02ba 01E0     		b	.L595
 6235              	.L599:
5661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 6236              		.loc 1 5661 0 discriminator 10
 6237 02bc 0023     		movs	r3, #0
 6238 02be 0193     		str	r3, [sp, #4]
 6239              	.L595:
5665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ( (tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 6240              		.loc 1 5665 0 is_stmt 1
 6241 02c0 0268     		ldr	r2, [r0]
 6242 02c2 9368     		ldr	r3, [r2, #8]
 6243 02c4 03F00303 		and	r3, r3, #3
 6244 02c8 012B     		cmp	r3, #1
 6245 02ca 04D1     		bne	.L600
5665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ( (tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 6246              		.loc 1 5665 0 is_stmt 0 discriminator 1
 6247 02cc 1368     		ldr	r3, [r2]
 6248 02ce 13F0010F 		tst	r3, #1
 6249 02d2 00D0     		beq	.L600
5665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ( (tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 6250              		.loc 1 5665 0
 6251 02d4 0124     		movs	r4, #1
 6252              	.L600:
5665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ( (tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 6253              		.loc 1 5665 0 discriminator 6
 6254 02d6 002C     		cmp	r4, #0
 6255 02d8 3AD1     		bne	.L601
5666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )   )
 6256              		.loc 1 5666 0 is_stmt 1 discriminator 7
 6257 02da 019E     		ldr	r6, [sp, #4]
5665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ( (tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 6258              		.loc 1 5665 0 discriminator 7
 6259 02dc 56B1     		cbz	r6, .L602
5667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
ARM GAS  /tmp/cc0XO8k8.s 			page 258


 6260              		.loc 1 5667 0
 6261 02de B368     		ldr	r3, [r6, #8]
 6262 02e0 03F00303 		and	r3, r3, #3
 6263 02e4 012B     		cmp	r3, #1
 6264 02e6 04D1     		bne	.L603
5667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 6265              		.loc 1 5667 0 is_stmt 0 discriminator 1
 6266 02e8 3368     		ldr	r3, [r6]
 6267 02ea 13F0010F 		tst	r3, #1
 6268 02ee 00D0     		beq	.L603
5667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 6269              		.loc 1 5667 0
 6270 02f0 0124     		movs	r4, #1
 6271              	.L603:
5666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )   )
 6272              		.loc 1 5666 0 is_stmt 1
 6273 02f2 6CBB     		cbnz	r4, .L601
 6274              	.L602:
5671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 6275              		.loc 1 5671 0
 6276 02f4 0B68     		ldr	r3, [r1]
 6277 02f6 102B     		cmp	r3, #16
 6278 02f8 17D1     		bne	.L604
5671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 6279              		.loc 1 5671 0 is_stmt 0 discriminator 1
 6280 02fa B2F1A04F 		cmp	r2, #1342177280
 6281 02fe 14D1     		bne	.L604
5673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
 6282              		.loc 1 5673 0 is_stmt 1
 6283 0300 AB68     		ldr	r3, [r5, #8]
 6284 0302 43F40003 		orr	r3, r3, #8388608
 6285 0306 AB60     		str	r3, [r5, #8]
5677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           while(wait_loop_index != 0U)
 6286              		.loc 1 5677 0
 6287 0308 254B     		ldr	r3, .L620+24
 6288 030a 1B68     		ldr	r3, [r3]
 6289 030c 254A     		ldr	r2, .L620+28
 6290 030e B3FBF2F2 		udiv	r2, r3, r2
 6291 0312 0A23     		movs	r3, #10
 6292 0314 03FB02F3 		mul	r3, r3, r2
 6293 0318 0093     		str	r3, [sp]
5678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
 6294              		.loc 1 5678 0
 6295 031a 02E0     		b	.L605
 6296              	.L606:
5680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           }
 6297              		.loc 1 5680 0
 6298 031c 009B     		ldr	r3, [sp]
 6299 031e 013B     		subs	r3, r3, #1
 6300 0320 0093     		str	r3, [sp]
 6301              	.L605:
5678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
 6302              		.loc 1 5678 0
 6303 0322 009B     		ldr	r3, [sp]
 6304 0324 002B     		cmp	r3, #0
 6305 0326 F9D1     		bne	.L606
 6306 0328 25E0     		b	.L586
ARM GAS  /tmp/cc0XO8k8.s 			page 259


 6307              	.L604:
5685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 6308              		.loc 1 5685 0
 6309 032a 112B     		cmp	r3, #17
 6310 032c 08D1     		bne	.L607
5685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 6311              		.loc 1 5685 0 is_stmt 0 discriminator 1
 6312 032e B2F1A04F 		cmp	r2, #1342177280
 6313 0332 05D1     		bne	.L607
5687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 6314              		.loc 1 5687 0 is_stmt 1
 6315 0334 AB68     		ldr	r3, [r5, #8]
 6316 0336 43F08073 		orr	r3, r3, #16777216
 6317 033a AB60     		str	r3, [r5, #8]
5427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 6318              		.loc 1 5427 0
 6319 033c 0023     		movs	r3, #0
5687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 6320              		.loc 1 5687 0
 6321 033e 1AE0     		b	.L586
 6322              	.L607:
5693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 6323              		.loc 1 5693 0
 6324 0340 122B     		cmp	r3, #18
 6325 0342 17D1     		bne	.L618
5695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 6326              		.loc 1 5695 0
 6327 0344 AB68     		ldr	r3, [r5, #8]
 6328 0346 43F48003 		orr	r3, r3, #4194304
 6329 034a AB60     		str	r3, [r5, #8]
5427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 6330              		.loc 1 5427 0
 6331 034c 0023     		movs	r3, #0
 6332 034e 12E0     		b	.L586
 6333              	.L601:
5704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 6334              		.loc 1 5704 0
 6335 0350 436C     		ldr	r3, [r0, #68]
 6336 0352 43F02003 		orr	r3, r3, #32
 6337 0356 4364     		str	r3, [r0, #68]
 6338              	.LVL408:
5706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 6339              		.loc 1 5706 0
 6340 0358 0123     		movs	r3, #1
 6341 035a 0CE0     		b	.L586
 6342              	.LVL409:
 6343              	.L568:
5719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 6344              		.loc 1 5719 0
 6345 035c 436C     		ldr	r3, [r0, #68]
 6346 035e 43F02003 		orr	r3, r3, #32
 6347 0362 4364     		str	r3, [r0, #68]
 6348              	.LVL410:
5721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 6349              		.loc 1 5721 0
 6350 0364 0123     		movs	r3, #1
 6351 0366 06E0     		b	.L586
ARM GAS  /tmp/cc0XO8k8.s 			page 260


 6352              	.LVL411:
 6353              	.L611:
5427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 6354              		.loc 1 5427 0
 6355 0368 0023     		movs	r3, #0
 6356 036a 04E0     		b	.L586
 6357              	.LVL412:
 6358              	.L614:
 6359 036c 0023     		movs	r3, #0
 6360 036e 02E0     		b	.L586
 6361              	.L615:
 6362 0370 0023     		movs	r3, #0
 6363 0372 00E0     		b	.L586
 6364              	.L618:
 6365 0374 0023     		movs	r3, #0
 6366              	.LVL413:
 6367              	.L586:
5725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 6368              		.loc 1 5725 0
 6369 0376 0022     		movs	r2, #0
 6370 0378 80F84020 		strb	r2, [r0, #64]
5728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 6371              		.loc 1 5728 0
 6372 037c 1846     		mov	r0, r3
 6373              	.LVL414:
 6374 037e 00E0     		b	.L567
 6375              	.LVL415:
 6376              	.L608:
5455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 6377              		.loc 1 5455 0
 6378 0380 0220     		movs	r0, #2
 6379              	.LVL416:
 6380              	.L567:
5729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 6381              		.loc 1 5729 0
 6382 0382 17B0     		add	sp, sp, #92
 6383              	.LCFI67:
 6384              		.cfi_def_cfa_offset 12
 6385              		@ sp needed
 6386 0384 70BC     		pop	{r4, r5, r6}
 6387              	.LCFI68:
 6388              		.cfi_restore 6
 6389              		.cfi_restore 5
 6390              		.cfi_restore 4
 6391              		.cfi_def_cfa_offset 0
 6392 0386 7047     		bx	lr
 6393              	.L621:
 6394              		.align	2
 6395              	.L620:
 6396 0388 00F0FF83 		.word	-2080378880
 6397 038c 00010050 		.word	1342177536
 6398 0390 00030050 		.word	1342178048
 6399 0394 00070050 		.word	1342179072
 6400 0398 00040050 		.word	1342178304
 6401 039c 00050050 		.word	1342178560
 6402 03a0 00000000 		.word	SystemCoreClock
 6403 03a4 40420F00 		.word	1000000
ARM GAS  /tmp/cc0XO8k8.s 			page 261


 6404              		.cfi_endproc
 6405              	.LFE156:
 6407              		.section	.text.HAL_ADCEx_InjectedConfigChannel,"ax",%progbits
 6408              		.align	2
 6409              		.global	HAL_ADCEx_InjectedConfigChannel
 6410              		.thumb
 6411              		.thumb_func
 6413              	HAL_ADCEx_InjectedConfigChannel:
 6414              	.LFB157:
5892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 6415              		.loc 1 5892 0
 6416              		.cfi_startproc
 6417              		@ args = 0, pretend = 0, frame = 88
 6418              		@ frame_needed = 0, uses_anonymous_args = 0
 6419              		@ link register save eliminated.
 6420              	.LVL417:
 6421 0000 F0B4     		push	{r4, r5, r6, r7}
 6422              	.LCFI69:
 6423              		.cfi_def_cfa_offset 16
 6424              		.cfi_offset 4, -16
 6425              		.cfi_offset 5, -12
 6426              		.cfi_offset 6, -8
 6427              		.cfi_offset 7, -4
 6428 0002 96B0     		sub	sp, sp, #88
 6429              	.LCFI70:
 6430              		.cfi_def_cfa_offset 104
 6431              	.LVL418:
5897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 6432              		.loc 1 5897 0
 6433 0004 0023     		movs	r3, #0
 6434 0006 0093     		str	r3, [sp]
 6435              	.LVL419:
5934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 6436              		.loc 1 5934 0
 6437 0008 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 6438 000c 012B     		cmp	r3, #1
 6439 000e 00F02582 		beq	.L675
5934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 6440              		.loc 1 5934 0 is_stmt 0 discriminator 2
 6441 0012 0123     		movs	r3, #1
 6442 0014 80F84030 		strb	r3, [r0, #64]
5957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (sConfigInjected->InjectedNbrOfConversion == 1U)  )
 6443              		.loc 1 5957 0 is_stmt 1 discriminator 2
 6444 0018 0369     		ldr	r3, [r0, #16]
 6445 001a 13B1     		cbz	r3, .L624
5958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 6446              		.loc 1 5958 0 discriminator 1
 6447 001c 8B69     		ldr	r3, [r1, #24]
5957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (sConfigInjected->InjectedNbrOfConversion == 1U)  )
 6448              		.loc 1 5957 0 discriminator 1
 6449 001e 012B     		cmp	r3, #1
 6450 0020 35D1     		bne	.L625
 6451              	.L624:
5967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 6452              		.loc 1 5967 0
 6453 0022 4B68     		ldr	r3, [r1, #4]
 6454 0024 012B     		cmp	r3, #1
ARM GAS  /tmp/cc0XO8k8.s 			page 262


 6455 0026 2CD1     		bne	.L626
5974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 6456              		.loc 1 5974 0
 6457 0028 8A6A     		ldr	r2, [r1, #40]
 6458 002a 012A     		cmp	r2, #1
 6459 002c 18D0     		beq	.L627
5976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                                  ADC_JSQR_JEXTSEL_SET(hadc, sConfigInjected->Extern
 6460              		.loc 1 5976 0
 6461 002e 0B68     		ldr	r3, [r1]
 6462 0030 1B02     		lsls	r3, r3, #8
 6463 0032 0468     		ldr	r4, [r0]
 6464 0034 A44D     		ldr	r5, .L688
 6465 0036 AC42     		cmp	r4, r5
 6466 0038 03D0     		beq	.L628
5976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                                  ADC_JSQR_JEXTSEL_SET(hadc, sConfigInjected->Extern
 6467              		.loc 1 5976 0 is_stmt 0 discriminator 2
 6468 003a 05F58075 		add	r5, r5, #256
 6469 003e AC42     		cmp	r4, r5
 6470 0040 0AD1     		bne	.L629
 6471              	.L628:
5976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                                  ADC_JSQR_JEXTSEL_SET(hadc, sConfigInjected->Extern
 6472              		.loc 1 5976 0 discriminator 3
 6473 0042 082A     		cmp	r2, #8
 6474 0044 05D0     		beq	.L676
5976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                                  ADC_JSQR_JEXTSEL_SET(hadc, sConfigInjected->Extern
 6475              		.loc 1 5976 0 discriminator 5
 6476 0046 142A     		cmp	r2, #20
 6477 0048 05D0     		beq	.L677
5976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                                  ADC_JSQR_JEXTSEL_SET(hadc, sConfigInjected->Extern
 6478              		.loc 1 5976 0 discriminator 7
 6479 004a 1C2A     		cmp	r2, #28
 6480 004c 04D1     		bne	.L629
5976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                                  ADC_JSQR_JEXTSEL_SET(hadc, sConfigInjected->Extern
 6481              		.loc 1 5976 0
 6482 004e 1022     		movs	r2, #16
 6483 0050 02E0     		b	.L629
 6484              	.L676:
 6485 0052 3422     		movs	r2, #52
 6486 0054 00E0     		b	.L629
 6487              	.L677:
 6488 0056 1C22     		movs	r2, #28
 6489              	.L629:
5976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                                  ADC_JSQR_JEXTSEL_SET(hadc, sConfigInjected->Extern
 6490              		.loc 1 5976 0 discriminator 18
 6491 0058 1A43     		orrs	r2, r2, r3
 6492 005a CB6A     		ldr	r3, [r1, #44]
 6493 005c 1A43     		orrs	r2, r2, r3
 6494              	.LVL420:
 6495 005e 01E0     		b	.L630
 6496              	.LVL421:
 6497              	.L627:
5982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 6498              		.loc 1 5982 0 is_stmt 1
 6499 0060 0A68     		ldr	r2, [r1]
 6500 0062 1202     		lsls	r2, r2, #8
 6501              	.LVL422:
 6502              	.L630:
ARM GAS  /tmp/cc0XO8k8.s 			page 263


5986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JSQ4    |
 6503              		.loc 1 5986 0
 6504 0064 0468     		ldr	r4, [r0]
 6505 0066 E36C     		ldr	r3, [r4, #76]
 6506 0068 23F0FB43 		bic	r3, r3, #2105540608
 6507 006c 23F4EF03 		bic	r3, r3, #7831552
 6508 0070 23F4BF43 		bic	r3, r3, #24448
 6509 0074 23F07F03 		bic	r3, r3, #127
 6510 0078 1343     		orrs	r3, r3, r2
 6511 007a E364     		str	r3, [r4, #76]
5997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 6512              		.loc 1 5997 0
 6513 007c C264     		str	r2, [r0, #76]
5893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 6514              		.loc 1 5893 0
 6515 007e 0023     		movs	r3, #0
 6516 0080 4BE0     		b	.L631
 6517              	.LVL423:
 6518              	.L626:
6004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 6519              		.loc 1 6004 0
 6520 0082 436C     		ldr	r3, [r0, #68]
 6521 0084 43F02003 		orr	r3, r3, #32
 6522 0088 4364     		str	r3, [r0, #68]
 6523              	.LVL424:
6006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 6524              		.loc 1 6006 0
 6525 008a 0123     		movs	r3, #1
 6526 008c 45E0     		b	.L631
 6527              	.LVL425:
 6528              	.L625:
6019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 6529              		.loc 1 6019 0
 6530 008e 026D     		ldr	r2, [r0, #80]
 6531 0090 12BB     		cbnz	r2, .L632
6023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Initialize value that will be set into register JSQR */
 6532              		.loc 1 6023 0
 6533 0092 0365     		str	r3, [r0, #80]
6025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 6534              		.loc 1 6025 0
 6535 0094 0023     		movs	r3, #0
 6536 0096 C364     		str	r3, [r0, #76]
6037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 6537              		.loc 1 6037 0
 6538 0098 8A6A     		ldr	r2, [r1, #40]
 6539 009a 012A     		cmp	r2, #1
 6540 009c 19D0     		beq	.L633
6039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                                     ADC_JSQR_JEXTSEL_SET(hadc, sConfigInjected->Ext
 6541              		.loc 1 6039 0
 6542 009e 8B69     		ldr	r3, [r1, #24]
 6543 00a0 013B     		subs	r3, r3, #1
 6544 00a2 0468     		ldr	r4, [r0]
 6545 00a4 884D     		ldr	r5, .L688
 6546 00a6 AC42     		cmp	r4, r5
 6547 00a8 03D0     		beq	.L634
6039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                                     ADC_JSQR_JEXTSEL_SET(hadc, sConfigInjected->Ext
 6548              		.loc 1 6039 0 is_stmt 0 discriminator 2
ARM GAS  /tmp/cc0XO8k8.s 			page 264


 6549 00aa 05F58075 		add	r5, r5, #256
 6550 00ae AC42     		cmp	r4, r5
 6551 00b0 0AD1     		bne	.L635
 6552              	.L634:
6039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                                     ADC_JSQR_JEXTSEL_SET(hadc, sConfigInjected->Ext
 6553              		.loc 1 6039 0 discriminator 3
 6554 00b2 082A     		cmp	r2, #8
 6555 00b4 05D0     		beq	.L678
6039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                                     ADC_JSQR_JEXTSEL_SET(hadc, sConfigInjected->Ext
 6556              		.loc 1 6039 0 discriminator 5
 6557 00b6 142A     		cmp	r2, #20
 6558 00b8 05D0     		beq	.L679
6039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                                     ADC_JSQR_JEXTSEL_SET(hadc, sConfigInjected->Ext
 6559              		.loc 1 6039 0 discriminator 7
 6560 00ba 1C2A     		cmp	r2, #28
 6561 00bc 04D1     		bne	.L635
6039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                                     ADC_JSQR_JEXTSEL_SET(hadc, sConfigInjected->Ext
 6562              		.loc 1 6039 0
 6563 00be 1022     		movs	r2, #16
 6564 00c0 02E0     		b	.L635
 6565              	.L678:
 6566 00c2 3422     		movs	r2, #52
 6567 00c4 00E0     		b	.L635
 6568              	.L679:
 6569 00c6 1C22     		movs	r2, #28
 6570              	.L635:
6039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                                     ADC_JSQR_JEXTSEL_SET(hadc, sConfigInjected->Ext
 6571              		.loc 1 6039 0 discriminator 18
 6572 00c8 1343     		orrs	r3, r3, r2
 6573 00ca CA6A     		ldr	r2, [r1, #44]
 6574 00cc 1343     		orrs	r3, r3, r2
 6575 00ce C364     		str	r3, [r0, #76]
 6576 00d0 02E0     		b	.L632
 6577              	.L633:
6045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 6578              		.loc 1 6045 0 is_stmt 1
 6579 00d2 8B69     		ldr	r3, [r1, #24]
 6580 00d4 013B     		subs	r3, r3, #1
 6581 00d6 C364     		str	r3, [r0, #76]
 6582              	.L632:
6054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_RK(ADC_SQR3_SQ10, sConfigInjected->InjectedRank)                   ,
 6583              		.loc 1 6054 0
 6584 00d8 C56C     		ldr	r5, [r0, #76]
 6585 00da 4C68     		ldr	r4, [r1, #4]
 6586 00dc 04EB4404 		add	r4, r4, r4, lsl #1
 6587 00e0 6200     		lsls	r2, r4, #1
 6588 00e2 941C     		adds	r4, r2, #2
 6589 00e4 1F23     		movs	r3, #31
 6590 00e6 A340     		lsls	r3, r3, r4
 6591 00e8 25EA0303 		bic	r3, r5, r3
 6592 00ec 0A68     		ldr	r2, [r1]
 6593 00ee A240     		lsls	r2, r2, r4
 6594 00f0 1343     		orrs	r3, r3, r2
 6595 00f2 C364     		str	r3, [r0, #76]
6059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 6596              		.loc 1 6059 0
 6597 00f4 026D     		ldr	r2, [r0, #80]
ARM GAS  /tmp/cc0XO8k8.s 			page 265


 6598 00f6 013A     		subs	r2, r2, #1
 6599 00f8 0265     		str	r2, [r0, #80]
6063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 6600              		.loc 1 6063 0
 6601 00fa 6AB9     		cbnz	r2, .L680
6066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_JSQR_JSQ4    |
 6602              		.loc 1 6066 0
 6603 00fc 0468     		ldr	r4, [r0]
 6604 00fe E26C     		ldr	r2, [r4, #76]
 6605 0100 22F0FB42 		bic	r2, r2, #2105540608
 6606 0104 22F4EF02 		bic	r2, r2, #7831552
 6607 0108 22F4BF42 		bic	r2, r2, #24448
 6608 010c 22F07F02 		bic	r2, r2, #127
 6609 0110 1343     		orrs	r3, r3, r2
 6610 0112 E364     		str	r3, [r4, #76]
5893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 6611              		.loc 1 5893 0
 6612 0114 0023     		movs	r3, #0
 6613 0116 00E0     		b	.L631
 6614              	.L680:
 6615 0118 0023     		movs	r3, #0
 6616              	.LVL426:
 6617              	.L631:
6087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {     
 6618              		.loc 1 6087 0
 6619 011a 0268     		ldr	r2, [r0]
 6620 011c 9468     		ldr	r4, [r2, #8]
 6621 011e 14F0080F 		tst	r4, #8
 6622 0122 1BD1     		bne	.L636
6090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 6623              		.loc 1 6090 0
 6624 0124 0C6A     		ldr	r4, [r1, #32]
 6625 0126 54B9     		cbnz	r4, .L637
6092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_JQM    |
 6626              		.loc 1 6092 0
 6627 0128 D468     		ldr	r4, [r2, #12]
 6628 012a 24F44016 		bic	r6, r4, #3145728
 6629 012e 4F6A     		ldr	r7, [r1, #36]
 6630 0130 CC69     		ldr	r4, [r1, #28]
 6631 0132 2505     		lsls	r5, r4, #20
 6632 0134 45EA4754 		orr	r4, r5, r7, lsl #21
 6633 0138 3443     		orrs	r4, r4, r6
 6634 013a D460     		str	r4, [r2, #12]
 6635 013c 0EE0     		b	.L636
 6636              	.L637:
6102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_JQM    |
 6637              		.loc 1 6102 0
 6638 013e D468     		ldr	r4, [r2, #12]
 6639 0140 24F44014 		bic	r4, r4, #3145728
 6640 0144 4D6A     		ldr	r5, [r1, #36]
 6641 0146 44EA4554 		orr	r4, r4, r5, lsl #21
 6642 014a D460     		str	r4, [r2, #12]
6109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 6643              		.loc 1 6109 0
 6644 014c CA69     		ldr	r2, [r1, #28]
 6645 014e 012A     		cmp	r2, #1
 6646 0150 04D1     		bne	.L636
ARM GAS  /tmp/cc0XO8k8.s 			page 266


6112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 6647              		.loc 1 6112 0
 6648 0152 436C     		ldr	r3, [r0, #68]
 6649              	.LVL427:
 6650 0154 43F02003 		orr	r3, r3, #32
 6651 0158 4364     		str	r3, [r0, #68]
 6652              	.LVL428:
6114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 6653              		.loc 1 6114 0
 6654 015a 0123     		movs	r3, #1
 6655              	.LVL429:
 6656              	.L636:
6128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {    
 6657              		.loc 1 6128 0
 6658 015c 0268     		ldr	r2, [r0]
 6659 015e 9468     		ldr	r4, [r2, #8]
 6660 0160 14F00C0F 		tst	r4, #12
 6661 0164 40F0A180 		bne	.L638
6132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 6662              		.loc 1 6132 0
 6663 0168 8C6A     		ldr	r4, [r1, #40]
 6664 016a 012C     		cmp	r4, #1
 6665 016c 07D1     		bne	.L639
6134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_JAUTO                                                    ,
 6666              		.loc 1 6134 0
 6667 016e D468     		ldr	r4, [r2, #12]
 6668 0170 24F00074 		bic	r4, r4, #33554432
 6669 0174 0D6A     		ldr	r5, [r1, #32]
 6670 0176 44EA4564 		orr	r4, r4, r5, lsl #25
 6671 017a D460     		str	r4, [r2, #12]
 6672 017c 0BE0     		b	.L640
 6673              	.L639:
6143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 6674              		.loc 1 6143 0
 6675 017e D468     		ldr	r4, [r2, #12]
 6676 0180 24F00074 		bic	r4, r4, #33554432
 6677 0184 D460     		str	r4, [r2, #12]
6145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 6678              		.loc 1 6145 0
 6679 0186 0A6A     		ldr	r2, [r1, #32]
 6680 0188 012A     		cmp	r2, #1
 6681 018a 04D1     		bne	.L640
6148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 6682              		.loc 1 6148 0
 6683 018c 436C     		ldr	r3, [r0, #68]
 6684              	.LVL430:
 6685 018e 43F02003 		orr	r3, r3, #32
 6686 0192 4364     		str	r3, [r0, #68]
 6687              	.LVL431:
6150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 6688              		.loc 1 6150 0
 6689 0194 0123     		movs	r3, #1
 6690              	.LVL432:
 6691              	.L640:
6157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 6692              		.loc 1 6157 0
 6693 0196 0A68     		ldr	r2, [r1]
ARM GAS  /tmp/cc0XO8k8.s 			page 267


 6694 0198 092A     		cmp	r2, #9
 6695 019a 0ED9     		bls	.L641
6159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SMPR2(ADC_SMPR2_SMP10, sConfigInjected->InjectedChannel)                      
 6696              		.loc 1 6159 0
 6697 019c 0668     		ldr	r6, [r0]
 6698 019e B469     		ldr	r4, [r6, #24]
 6699 01a0 02EB4202 		add	r2, r2, r2, lsl #1
 6700 01a4 1E3A     		subs	r2, r2, #30
 6701 01a6 0725     		movs	r5, #7
 6702 01a8 9540     		lsls	r5, r5, r2
 6703 01aa 24EA0505 		bic	r5, r4, r5
 6704 01ae 8C68     		ldr	r4, [r1, #8]
 6705 01b0 04FA02F2 		lsl	r2, r4, r2
 6706 01b4 2A43     		orrs	r2, r2, r5
 6707 01b6 B261     		str	r2, [r6, #24]
 6708 01b8 0CE0     		b	.L642
 6709              	.L641:
6165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SMPR1(ADC_SMPR1_SMP0, sConfigInjected->InjectedChannel)                       
 6710              		.loc 1 6165 0
 6711 01ba 0668     		ldr	r6, [r0]
 6712 01bc 7469     		ldr	r4, [r6, #20]
 6713 01be 02EB4202 		add	r2, r2, r2, lsl #1
 6714 01c2 0725     		movs	r5, #7
 6715 01c4 9540     		lsls	r5, r5, r2
 6716 01c6 24EA0505 		bic	r5, r4, r5
 6717 01ca 8C68     		ldr	r4, [r1, #8]
 6718 01cc 04FA02F2 		lsl	r2, r4, r2
 6719 01d0 2A43     		orrs	r2, r2, r5
 6720 01d2 7261     		str	r2, [r6, #20]
 6721              	.L642:
6175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 6722              		.loc 1 6175 0
 6723 01d4 4C69     		ldr	r4, [r1, #20]
 6724 01d6 0568     		ldr	r5, [r0]
 6725 01d8 EA68     		ldr	r2, [r5, #12]
 6726 01da C2F3C102 		ubfx	r2, r2, #3, #2
 6727 01de 5200     		lsls	r2, r2, #1
 6728 01e0 04FA02F2 		lsl	r2, r4, r2
 6729              	.LVL433:
6181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 6730              		.loc 1 6181 0
 6731 01e4 0C69     		ldr	r4, [r1, #16]
 6732 01e6 013C     		subs	r4, r4, #1
 6733 01e8 032C     		cmp	r4, #3
 6734 01ea 2FD8     		bhi	.L643
 6735 01ec DFE804F0 		tbb	[pc, r4]
 6736              	.L645:
 6737 01f0 02       		.byte	(.L644-.L645)/2
 6738 01f1 0D       		.byte	(.L646-.L645)/2
 6739 01f2 18       		.byte	(.L647-.L645)/2
 6740 01f3 23       		.byte	(.L648-.L645)/2
 6741              		.p2align 1
 6742              	.L644:
6185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR1_OFFSET1_CH |
 6743              		.loc 1 6185 0
 6744 01f4 2C6E     		ldr	r4, [r5, #96]
 6745 01f6 354E     		ldr	r6, .L688+4
ARM GAS  /tmp/cc0XO8k8.s 			page 268


 6746 01f8 2640     		ands	r6, r6, r4
 6747 01fa 0C68     		ldr	r4, [r1]
 6748 01fc 42EA8462 		orr	r2, r2, r4, lsl #26
 6749              	.LVL434:
 6750 0200 3243     		orrs	r2, r2, r6
 6751 0202 42F00042 		orr	r2, r2, #-2147483648
 6752 0206 2A66     		str	r2, [r5, #96]
6191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 6753              		.loc 1 6191 0
 6754 0208 4FE0     		b	.L638
 6755              	.LVL435:
 6756              	.L646:
6195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR2_OFFSET2_CH |
 6757              		.loc 1 6195 0
 6758 020a 6C6E     		ldr	r4, [r5, #100]
 6759 020c 2F4E     		ldr	r6, .L688+4
 6760 020e 2640     		ands	r6, r6, r4
 6761 0210 0C68     		ldr	r4, [r1]
 6762 0212 42EA8462 		orr	r2, r2, r4, lsl #26
 6763              	.LVL436:
 6764 0216 3243     		orrs	r2, r2, r6
 6765 0218 42F00042 		orr	r2, r2, #-2147483648
 6766 021c 6A66     		str	r2, [r5, #100]
6201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 6767              		.loc 1 6201 0
 6768 021e 44E0     		b	.L638
 6769              	.LVL437:
 6770              	.L647:
6205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR3_OFFSET3_CH |
 6771              		.loc 1 6205 0
 6772 0220 AC6E     		ldr	r4, [r5, #104]
 6773 0222 2A4E     		ldr	r6, .L688+4
 6774 0224 2640     		ands	r6, r6, r4
 6775 0226 0C68     		ldr	r4, [r1]
 6776 0228 42EA8462 		orr	r2, r2, r4, lsl #26
 6777              	.LVL438:
 6778 022c 3243     		orrs	r2, r2, r6
 6779 022e 42F00042 		orr	r2, r2, #-2147483648
 6780 0232 AA66     		str	r2, [r5, #104]
6211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 6781              		.loc 1 6211 0
 6782 0234 39E0     		b	.L638
 6783              	.LVL439:
 6784              	.L648:
6215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR4_OFFSET4_CH |
 6785              		.loc 1 6215 0
 6786 0236 EE6E     		ldr	r6, [r5, #108]
 6787 0238 244C     		ldr	r4, .L688+4
 6788 023a 3440     		ands	r4, r4, r6
 6789 023c 0E68     		ldr	r6, [r1]
 6790 023e 42EA8662 		orr	r2, r2, r6, lsl #26
 6791              	.LVL440:
 6792 0242 2243     		orrs	r2, r2, r4
 6793 0244 42F00042 		orr	r2, r2, #-2147483648
 6794 0248 EA66     		str	r2, [r5, #108]
6221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 6795              		.loc 1 6221 0
ARM GAS  /tmp/cc0XO8k8.s 			page 269


 6796 024a 2EE0     		b	.L638
 6797              	.LVL441:
 6798              	.L643:
6227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 6799              		.loc 1 6227 0
 6800 024c 2A6E     		ldr	r2, [r5, #96]
 6801              	.LVL442:
 6802 024e 02F0F842 		and	r2, r2, #2080374784
 6803 0252 0C68     		ldr	r4, [r1]
 6804 0254 B2EB846F 		cmp	r2, r4, lsl #26
 6805 0258 03D1     		bne	.L649
6230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 6806              		.loc 1 6230 0
 6807 025a 2A6E     		ldr	r2, [r5, #96]
 6808 025c 22F00042 		bic	r2, r2, #-2147483648
 6809 0260 2A66     		str	r2, [r5, #96]
 6810              	.L649:
6232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 6811              		.loc 1 6232 0
 6812 0262 0468     		ldr	r4, [r0]
 6813 0264 626E     		ldr	r2, [r4, #100]
 6814 0266 02F0F842 		and	r2, r2, #2080374784
 6815 026a 0D68     		ldr	r5, [r1]
 6816 026c B2EB856F 		cmp	r2, r5, lsl #26
 6817 0270 03D1     		bne	.L650
6235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 6818              		.loc 1 6235 0
 6819 0272 626E     		ldr	r2, [r4, #100]
 6820 0274 22F00042 		bic	r2, r2, #-2147483648
 6821 0278 6266     		str	r2, [r4, #100]
 6822              	.L650:
6237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 6823              		.loc 1 6237 0
 6824 027a 0468     		ldr	r4, [r0]
 6825 027c A26E     		ldr	r2, [r4, #104]
 6826 027e 02F0F842 		and	r2, r2, #2080374784
 6827 0282 0D68     		ldr	r5, [r1]
 6828 0284 B2EB856F 		cmp	r2, r5, lsl #26
 6829 0288 03D1     		bne	.L651
6240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 6830              		.loc 1 6240 0
 6831 028a A26E     		ldr	r2, [r4, #104]
 6832 028c 22F00042 		bic	r2, r2, #-2147483648
 6833 0290 A266     		str	r2, [r4, #104]
 6834              	.L651:
6242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 6835              		.loc 1 6242 0
 6836 0292 0468     		ldr	r4, [r0]
 6837 0294 E26E     		ldr	r2, [r4, #108]
 6838 0296 02F0F842 		and	r2, r2, #2080374784
 6839 029a 0D68     		ldr	r5, [r1]
 6840 029c B2EB856F 		cmp	r2, r5, lsl #26
 6841 02a0 03D1     		bne	.L638
6245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 6842              		.loc 1 6245 0
 6843 02a2 E26E     		ldr	r2, [r4, #108]
 6844 02a4 22F00042 		bic	r2, r2, #-2147483648
ARM GAS  /tmp/cc0XO8k8.s 			page 270


 6845 02a8 E266     		str	r2, [r4, #108]
 6846              	.L638:
6257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 6847              		.loc 1 6257 0
 6848 02aa 0468     		ldr	r4, [r0]
 6849 02ac A268     		ldr	r2, [r4, #8]
 6850 02ae 02F00302 		and	r2, r2, #3
 6851 02b2 012A     		cmp	r2, #1
 6852 02b4 05D1     		bne	.L681
6257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 6853              		.loc 1 6257 0 is_stmt 0 discriminator 1
 6854 02b6 2268     		ldr	r2, [r4]
 6855 02b8 12F0010F 		tst	r2, #1
 6856 02bc 08D1     		bne	.L682
6257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 6857              		.loc 1 6257 0
 6858 02be 0025     		movs	r5, #0
 6859 02c0 07E0     		b	.L652
 6860              	.L681:
 6861 02c2 0025     		movs	r5, #0
 6862 02c4 05E0     		b	.L652
 6863              	.L689:
 6864 02c6 00BF     		.align	2
 6865              	.L688:
 6866 02c8 00040050 		.word	1342178304
 6867 02cc 00F0FF83 		.word	-2080378880
 6868              	.L682:
 6869 02d0 0125     		movs	r5, #1
 6870              	.L652:
6257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 6871              		.loc 1 6257 0 discriminator 6
 6872 02d2 002D     		cmp	r5, #0
 6873 02d4 40F0BD80 		bne	.L653
6260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 6874              		.loc 1 6260 0 is_stmt 1
 6875 02d8 CA68     		ldr	r2, [r1, #12]
 6876 02da 012A     		cmp	r2, #1
 6877 02dc 09D0     		beq	.L654
6263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 6878              		.loc 1 6263 0
 6879 02de D4F8B060 		ldr	r6, [r4, #176]
 6880 02e2 0F68     		ldr	r7, [r1]
 6881 02e4 0122     		movs	r2, #1
 6882 02e6 BA40     		lsls	r2, r2, r7
 6883 02e8 26EA0202 		bic	r2, r6, r2
 6884 02ec C4F8B020 		str	r2, [r4, #176]
 6885 02f0 28E0     		b	.L655
 6886              	.L654:
6268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 6887              		.loc 1 6268 0
 6888 02f2 D4F8B070 		ldr	r7, [r4, #176]
 6889 02f6 0A68     		ldr	r2, [r1]
 6890 02f8 0126     		movs	r6, #1
 6891 02fa 06FA02F2 		lsl	r2, r6, r2
 6892 02fe 3A43     		orrs	r2, r2, r7
 6893 0300 C4F8B020 		str	r2, [r4, #176]
6273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
ARM GAS  /tmp/cc0XO8k8.s 			page 271


 6894              		.loc 1 6273 0
 6895 0304 0A68     		ldr	r2, [r1]
 6896 0306 092A     		cmp	r2, #9
 6897 0308 0ED9     		bls	.L656
6275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_SMPR2(ADC_SMPR2_SMP10, sConfigInjected->InjectedChannel +1U),
 6898              		.loc 1 6275 0
 6899 030a 0768     		ldr	r7, [r0]
 6900 030c BC69     		ldr	r4, [r7, #24]
 6901 030e 02EB4202 		add	r2, r2, r2, lsl #1
 6902 0312 1B3A     		subs	r2, r2, #27
 6903 0314 0726     		movs	r6, #7
 6904 0316 9640     		lsls	r6, r6, r2
 6905 0318 24EA0606 		bic	r6, r4, r6
 6906 031c 8C68     		ldr	r4, [r1, #8]
 6907 031e 04FA02F2 		lsl	r2, r4, r2
 6908 0322 3243     		orrs	r2, r2, r6
 6909 0324 BA61     		str	r2, [r7, #24]
 6910 0326 0DE0     		b	.L655
 6911              	.L656:
6281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_SMPR1(ADC_SMPR1_SMP0, sConfigInjected->InjectedChannel +1U),
 6912              		.loc 1 6281 0
 6913 0328 0768     		ldr	r7, [r0]
 6914 032a 7C69     		ldr	r4, [r7, #20]
 6915 032c 0132     		adds	r2, r2, #1
 6916 032e 02EB4202 		add	r2, r2, r2, lsl #1
 6917 0332 0726     		movs	r6, #7
 6918 0334 9640     		lsls	r6, r6, r2
 6919 0336 24EA0606 		bic	r6, r4, r6
 6920 033a 8C68     		ldr	r4, [r1, #8]
 6921 033c 04FA02F2 		lsl	r2, r4, r2
 6922 0340 3243     		orrs	r2, r2, r6
 6923 0342 7A61     		str	r2, [r7, #20]
 6924              	.L655:
6298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 6925              		.loc 1 6298 0
 6926 0344 0268     		ldr	r2, [r0]
 6927 0346 B2F1A04F 		cmp	r2, #1342177280
 6928 034a 04D0     		beq	.L683
6298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 6929              		.loc 1 6298 0 is_stmt 0 discriminator 2
 6930 034c 454C     		ldr	r4, .L690
 6931 034e A242     		cmp	r2, r4
 6932 0350 03D1     		bne	.L684
6298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 6933              		.loc 1 6298 0
 6934 0352 454E     		ldr	r6, .L690+4
 6935 0354 02E0     		b	.L657
 6936              	.L683:
 6937 0356 444E     		ldr	r6, .L690+4
 6938 0358 00E0     		b	.L657
 6939              	.L684:
 6940 035a 444E     		ldr	r6, .L690+8
 6941              	.L657:
 6942              	.LVL443:
6302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_TSEN))            ) ||
 6943              		.loc 1 6302 0 is_stmt 1 discriminator 6
 6944 035c 0C68     		ldr	r4, [r1]
ARM GAS  /tmp/cc0XO8k8.s 			page 272


 6945 035e 102C     		cmp	r4, #16
 6946 0360 03D1     		bne	.L658
6303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (sConfigInjected->InjectedChannel == ADC_CHANNEL_VBAT)       &&
 6947              		.loc 1 6303 0 discriminator 1
 6948 0362 B768     		ldr	r7, [r6, #8]
6302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_TSEN))            ) ||
 6949              		.loc 1 6302 0 discriminator 1
 6950 0364 17F4000F 		tst	r7, #8388608
 6951 0368 0BD0     		beq	.L659
 6952              	.L658:
6303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (sConfigInjected->InjectedChannel == ADC_CHANNEL_VBAT)       &&
 6953              		.loc 1 6303 0
 6954 036a 112C     		cmp	r4, #17
 6955 036c 03D1     		bne	.L660
6305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (sConfigInjected->InjectedChannel == ADC_CHANNEL_VREFINT)    &&
 6956              		.loc 1 6305 0
 6957 036e B768     		ldr	r7, [r6, #8]
6304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_VBATEN))          ) ||
 6958              		.loc 1 6304 0
 6959 0370 17F0807F 		tst	r7, #16777216
 6960 0374 05D0     		beq	.L659
 6961              	.L660:
6305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (sConfigInjected->InjectedChannel == ADC_CHANNEL_VREFINT)    &&
 6962              		.loc 1 6305 0
 6963 0376 122C     		cmp	r4, #18
 6964 0378 6BD1     		bne	.L653
6307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        )
 6965              		.loc 1 6307 0
 6966 037a B468     		ldr	r4, [r6, #8]
6306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_VREFEN)))
 6967              		.loc 1 6306 0
 6968 037c 14F4800F 		tst	r4, #4194304
 6969 0380 67D1     		bne	.L653
 6970              	.L659:
6312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 6971              		.loc 1 6312 0
 6972 0382 B2F1A04F 		cmp	r2, #1342177280
 6973 0386 03D1     		bne	.L661
6312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 6974              		.loc 1 6312 0 is_stmt 0 discriminator 1
 6975 0388 02F58072 		add	r2, r2, #256
 6976 038c 0192     		str	r2, [sp, #4]
 6977 038e 14E0     		b	.L662
 6978              	.L661:
6312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 6979              		.loc 1 6312 0 discriminator 2
 6980 0390 344C     		ldr	r4, .L690
 6981 0392 A242     		cmp	r2, r4
 6982 0394 03D1     		bne	.L663
6312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 6983              		.loc 1 6312 0 discriminator 3
 6984 0396 4FF0A042 		mov	r2, #1342177280
 6985 039a 0192     		str	r2, [sp, #4]
 6986 039c 0DE0     		b	.L662
 6987              	.L663:
6312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 6988              		.loc 1 6312 0 discriminator 4
ARM GAS  /tmp/cc0XO8k8.s 			page 273


 6989 039e 344C     		ldr	r4, .L690+12
 6990 03a0 A242     		cmp	r2, r4
 6991 03a2 02D1     		bne	.L665
6312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 6992              		.loc 1 6312 0 discriminator 6
 6993 03a4 334A     		ldr	r2, .L690+16
 6994 03a6 0192     		str	r2, [sp, #4]
 6995 03a8 07E0     		b	.L662
 6996              	.L665:
6312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 6997              		.loc 1 6312 0 discriminator 7
 6998 03aa 324C     		ldr	r4, .L690+16
 6999 03ac A242     		cmp	r2, r4
 7000 03ae 02D1     		bne	.L666
6312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 7001              		.loc 1 6312 0 discriminator 9
 7002 03b0 2F4A     		ldr	r2, .L690+12
 7003 03b2 0192     		str	r2, [sp, #4]
 7004 03b4 01E0     		b	.L662
 7005              	.L666:
6312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 7006              		.loc 1 6312 0 discriminator 10
 7007 03b6 0022     		movs	r2, #0
 7008 03b8 0192     		str	r2, [sp, #4]
 7009              	.L662:
6316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ( (tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 7010              		.loc 1 6316 0 is_stmt 1
 7011 03ba 0468     		ldr	r4, [r0]
 7012 03bc A268     		ldr	r2, [r4, #8]
 7013 03be 02F00302 		and	r2, r2, #3
 7014 03c2 012A     		cmp	r2, #1
 7015 03c4 04D1     		bne	.L667
6316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ( (tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 7016              		.loc 1 6316 0 is_stmt 0 discriminator 1
 7017 03c6 2268     		ldr	r2, [r4]
 7018 03c8 12F0010F 		tst	r2, #1
 7019 03cc 00D0     		beq	.L667
6316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ( (tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 7020              		.loc 1 6316 0
 7021 03ce 0125     		movs	r5, #1
 7022              	.L667:
6316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ( (tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 7023              		.loc 1 6316 0 discriminator 6
 7024 03d0 002D     		cmp	r5, #0
 7025 03d2 39D1     		bne	.L668
6317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )   )
 7026              		.loc 1 6317 0 is_stmt 1 discriminator 7
 7027 03d4 019F     		ldr	r7, [sp, #4]
6316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ( (tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 7028              		.loc 1 6316 0 discriminator 7
 7029 03d6 57B1     		cbz	r7, .L669
6318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 7030              		.loc 1 6318 0
 7031 03d8 BA68     		ldr	r2, [r7, #8]
 7032 03da 02F00302 		and	r2, r2, #3
 7033 03de 012A     		cmp	r2, #1
 7034 03e0 04D1     		bne	.L670
ARM GAS  /tmp/cc0XO8k8.s 			page 274


6318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 7035              		.loc 1 6318 0 is_stmt 0 discriminator 1
 7036 03e2 3A68     		ldr	r2, [r7]
 7037 03e4 12F0010F 		tst	r2, #1
 7038 03e8 00D0     		beq	.L670
6318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 7039              		.loc 1 6318 0
 7040 03ea 0125     		movs	r5, #1
 7041              	.L670:
6317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )   )
 7042              		.loc 1 6317 0 is_stmt 1
 7043 03ec 65BB     		cbnz	r5, .L668
 7044              	.L669:
6322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 7045              		.loc 1 6322 0
 7046 03ee 0A68     		ldr	r2, [r1]
 7047 03f0 102A     		cmp	r2, #16
 7048 03f2 18D1     		bne	.L671
6322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 7049              		.loc 1 6322 0 is_stmt 0 discriminator 1
 7050 03f4 B4F1A04F 		cmp	r4, #1342177280
 7051 03f8 15D1     		bne	.L671
6324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
 7052              		.loc 1 6324 0 is_stmt 1
 7053 03fa B268     		ldr	r2, [r6, #8]
 7054 03fc 42F40002 		orr	r2, r2, #8388608
 7055 0400 B260     		str	r2, [r6, #8]
6328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           while(wait_loop_index != 0U)
 7056              		.loc 1 6328 0
 7057 0402 1D4A     		ldr	r2, .L690+20
 7058 0404 1268     		ldr	r2, [r2]
 7059 0406 1D49     		ldr	r1, .L690+24
 7060              	.LVL444:
 7061 0408 A1FB0212 		umull	r1, r2, r1, r2
 7062 040c 920C     		lsrs	r2, r2, #18
 7063 040e 02EB8202 		add	r2, r2, r2, lsl #2
 7064 0412 5100     		lsls	r1, r2, #1
 7065 0414 0091     		str	r1, [sp]
6329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
 7066              		.loc 1 6329 0
 7067 0416 02E0     		b	.L672
 7068              	.L673:
6331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           }
 7069              		.loc 1 6331 0
 7070 0418 009A     		ldr	r2, [sp]
 7071 041a 013A     		subs	r2, r2, #1
 7072 041c 0092     		str	r2, [sp]
 7073              	.L672:
6329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
 7074              		.loc 1 6329 0
 7075 041e 009A     		ldr	r2, [sp]
 7076 0420 002A     		cmp	r2, #0
 7077 0422 F9D1     		bne	.L673
 7078 0424 15E0     		b	.L653
 7079              	.LVL445:
 7080              	.L671:
6336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
ARM GAS  /tmp/cc0XO8k8.s 			page 275


 7081              		.loc 1 6336 0
 7082 0426 112A     		cmp	r2, #17
 7083 0428 07D1     		bne	.L674
6336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 7084              		.loc 1 6336 0 is_stmt 0 discriminator 1
 7085 042a B4F1A04F 		cmp	r4, #1342177280
 7086 042e 04D1     		bne	.L674
6338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 7087              		.loc 1 6338 0 is_stmt 1
 7088 0430 B268     		ldr	r2, [r6, #8]
 7089 0432 42F08072 		orr	r2, r2, #16777216
 7090 0436 B260     		str	r2, [r6, #8]
 7091 0438 0BE0     		b	.L653
 7092              	.L674:
6344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 7093              		.loc 1 6344 0
 7094 043a 122A     		cmp	r2, #18
 7095 043c 09D1     		bne	.L653
6346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 7096              		.loc 1 6346 0
 7097 043e B268     		ldr	r2, [r6, #8]
 7098 0440 42F48002 		orr	r2, r2, #4194304
 7099 0444 B260     		str	r2, [r6, #8]
 7100 0446 04E0     		b	.L653
 7101              	.L668:
6355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 7102              		.loc 1 6355 0
 7103 0448 436C     		ldr	r3, [r0, #68]
 7104              	.LVL446:
 7105 044a 43F02003 		orr	r3, r3, #32
 7106 044e 4364     		str	r3, [r0, #68]
 7107              	.LVL447:
6357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 7108              		.loc 1 6357 0
 7109 0450 0123     		movs	r3, #1
 7110              	.LVL448:
 7111              	.L653:
6364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 7112              		.loc 1 6364 0
 7113 0452 0022     		movs	r2, #0
 7114 0454 80F84020 		strb	r2, [r0, #64]
6367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 7115              		.loc 1 6367 0
 7116 0458 1846     		mov	r0, r3
 7117              	.LVL449:
 7118 045a 00E0     		b	.L623
 7119              	.LVL450:
 7120              	.L675:
5934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 7121              		.loc 1 5934 0
 7122 045c 0220     		movs	r0, #2
 7123              	.LVL451:
 7124              	.L623:
6368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 7125              		.loc 1 6368 0
 7126 045e 16B0     		add	sp, sp, #88
 7127              	.LCFI71:
ARM GAS  /tmp/cc0XO8k8.s 			page 276


 7128              		.cfi_def_cfa_offset 16
 7129              		@ sp needed
 7130 0460 F0BC     		pop	{r4, r5, r6, r7}
 7131              	.LCFI72:
 7132              		.cfi_restore 7
 7133              		.cfi_restore 6
 7134              		.cfi_restore 5
 7135              		.cfi_restore 4
 7136              		.cfi_def_cfa_offset 0
 7137 0462 7047     		bx	lr
 7138              	.L691:
 7139              		.align	2
 7140              	.L690:
 7141 0464 00010050 		.word	1342177536
 7142 0468 00030050 		.word	1342178048
 7143 046c 00070050 		.word	1342179072
 7144 0470 00040050 		.word	1342178304
 7145 0474 00050050 		.word	1342178560
 7146 0478 00000000 		.word	SystemCoreClock
 7147 047c 83DE1B43 		.word	1125899907
 7148              		.cfi_endproc
 7149              	.LFE157:
 7151              		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 7152              		.align	2
 7153              		.global	HAL_ADC_AnalogWDGConfig
 7154              		.thumb
 7155              		.thumb_func
 7157              	HAL_ADC_AnalogWDGConfig:
 7158              	.LFB158:
6644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 7159              		.loc 1 6644 0
 7160              		.cfi_startproc
 7161              		@ args = 0, pretend = 0, frame = 0
 7162              		@ frame_needed = 0, uses_anonymous_args = 0
 7163              	.LVL452:
6671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 7164              		.loc 1 6671 0
 7165 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 7166 0004 012B     		cmp	r3, #1
 7167 0006 00F0D380 		beq	.L707
6671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 7168              		.loc 1 6671 0 is_stmt 0 discriminator 2
 7169 000a 0123     		movs	r3, #1
 7170 000c 80F84030 		strb	r3, [r0, #64]
6678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 7171              		.loc 1 6678 0 is_stmt 1 discriminator 2
 7172 0010 0368     		ldr	r3, [r0]
 7173 0012 9A68     		ldr	r2, [r3, #8]
 7174 0014 12F00C0F 		tst	r2, #12
 7175 0018 40F0BB80 		bne	.L694
6644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 7176              		.loc 1 6644 0
 7177 001c F0B5     		push	{r4, r5, r6, r7, lr}
 7178              	.LCFI73:
 7179              		.cfi_def_cfa_offset 20
 7180              		.cfi_offset 4, -20
 7181              		.cfi_offset 5, -16
ARM GAS  /tmp/cc0XO8k8.s 			page 277


 7182              		.cfi_offset 6, -12
 7183              		.cfi_offset 7, -8
 7184              		.cfi_offset 14, -4
6682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 7185              		.loc 1 6682 0
 7186 001e 0D68     		ldr	r5, [r1]
 7187 0020 012D     		cmp	r5, #1
 7188 0022 34D1     		bne	.L695
6689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_AWD1SGL |
 7189              		.loc 1 6689 0
 7190 0024 DA68     		ldr	r2, [r3, #12]
 7191 0026 22F0FB44 		bic	r4, r2, #2105540608
 7192 002a 24F48004 		bic	r4, r4, #4194304
 7193 002e 4A68     		ldr	r2, [r1, #4]
 7194 0030 8D68     		ldr	r5, [r1, #8]
 7195 0032 42EA8562 		orr	r2, r2, r5, lsl #26
 7196 0036 2243     		orrs	r2, r2, r4
 7197 0038 DA60     		str	r2, [r3, #12]
6700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
 7198              		.loc 1 6700 0
 7199 003a 0A69     		ldr	r2, [r1, #16]
 7200 003c 0468     		ldr	r4, [r0]
 7201 003e E368     		ldr	r3, [r4, #12]
 7202 0040 C3F3C103 		ubfx	r3, r3, #3, #2
 7203 0044 5B00     		lsls	r3, r3, #1
 7204 0046 02FA03F6 		lsl	r6, r2, r3
 7205              	.LVL453:
6701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 7206              		.loc 1 6701 0
 7207 004a 4B69     		ldr	r3, [r1, #20]
 7208 004c E268     		ldr	r2, [r4, #12]
 7209 004e C2F3C102 		ubfx	r2, r2, #3, #2
 7210 0052 5200     		lsls	r2, r2, #1
 7211 0054 03FA02F2 		lsl	r2, r3, r2
 7212              	.LVL454:
6704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_TR1_HT1 |
 7213              		.loc 1 6704 0
 7214 0058 256A     		ldr	r5, [r4, #32]
 7215 005a 05F0F025 		and	r5, r5, #-268374016
 7216 005e 42EA0643 		orr	r3, r2, r6, lsl #16
 7217 0062 2B43     		orrs	r3, r3, r5
 7218 0064 2362     		str	r3, [r4, #32]
6713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 7219              		.loc 1 6713 0
 7220 0066 0368     		ldr	r3, [r0]
 7221 0068 8022     		movs	r2, #128
 7222              	.LVL455:
 7223 006a 1A60     		str	r2, [r3]
6716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 7224              		.loc 1 6716 0
 7225 006c CB68     		ldr	r3, [r1, #12]
 7226 006e 012B     		cmp	r3, #1
 7227 0070 06D1     		bne	.L696
6719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 7228              		.loc 1 6719 0
 7229 0072 0268     		ldr	r2, [r0]
 7230 0074 5368     		ldr	r3, [r2, #4]
ARM GAS  /tmp/cc0XO8k8.s 			page 278


 7231 0076 43F08003 		orr	r3, r3, #128
 7232 007a 5360     		str	r3, [r2, #4]
6645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 7233              		.loc 1 6645 0
 7234 007c 0023     		movs	r3, #0
 7235 007e 92E0     		b	.L697
 7236              	.L696:
6724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 7237              		.loc 1 6724 0
 7238 0080 0268     		ldr	r2, [r0]
 7239 0082 5368     		ldr	r3, [r2, #4]
 7240 0084 23F08003 		bic	r3, r3, #128
 7241 0088 5360     		str	r3, [r2, #4]
6645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 7242              		.loc 1 6645 0
 7243 008a 0023     		movs	r3, #0
 7244 008c 8BE0     		b	.L697
 7245              	.LVL456:
 7246              	.L695:
6733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 7247              		.loc 1 6733 0
 7248 008e DA68     		ldr	r2, [r3, #12]
 7249 0090 02F01802 		and	r2, r2, #24
 7250 0094 182A     		cmp	r2, #24
 7251 0096 0CD0     		beq	.L698
6733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 7252              		.loc 1 6733 0 is_stmt 0 discriminator 1
 7253 0098 0A69     		ldr	r2, [r1, #16]
 7254 009a DC68     		ldr	r4, [r3, #12]
 7255 009c C4F3C106 		ubfx	r6, r4, #3, #2
 7256 00a0 F407     		lsls	r4, r6, #31
 7257 00a2 A41B     		subs	r4, r4, r6
 7258 00a4 4FEA440E 		lsl	lr, r4, #1
 7259 00a8 0EF1040E 		add	lr, lr, #4
 7260 00ac 22FA0EFE 		lsr	lr, r2, lr
 7261 00b0 02E0     		b	.L699
 7262              	.L698:
6733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 7263              		.loc 1 6733 0 discriminator 2
 7264 00b2 0A69     		ldr	r2, [r1, #16]
 7265 00b4 4FEA820E 		lsl	lr, r2, #2
 7266              	.L699:
 7267              	.LVL457:
6734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 7268              		.loc 1 6734 0 is_stmt 1 discriminator 4
 7269 00b8 DC68     		ldr	r4, [r3, #12]
 7270 00ba 04F01804 		and	r4, r4, #24
 7271 00be 182C     		cmp	r4, #24
 7272 00c0 0AD0     		beq	.L700
6734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 7273              		.loc 1 6734 0 is_stmt 0 discriminator 1
 7274 00c2 4C69     		ldr	r4, [r1, #20]
 7275 00c4 DF68     		ldr	r7, [r3, #12]
 7276 00c6 C7F3C107 		ubfx	r7, r7, #3, #2
 7277 00ca FE07     		lsls	r6, r7, #31
 7278 00cc F71B     		subs	r7, r6, r7
 7279 00ce 7E00     		lsls	r6, r7, #1
ARM GAS  /tmp/cc0XO8k8.s 			page 279


 7280 00d0 0436     		adds	r6, r6, #4
 7281 00d2 24FA06F2 		lsr	r2, r4, r6
 7282 00d6 01E0     		b	.L701
 7283              	.L700:
6734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 7284              		.loc 1 6734 0 discriminator 2
 7285 00d8 4C69     		ldr	r4, [r1, #20]
 7286 00da A200     		lsls	r2, r4, #2
 7287              	.L701:
 7288              	.LVL458:
6736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 7289              		.loc 1 6736 0 is_stmt 1 discriminator 4
 7290 00dc 022D     		cmp	r5, #2
 7291 00de 23D1     		bne	.L702
6742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 7292              		.loc 1 6742 0
 7293 00e0 4C68     		ldr	r4, [r1, #4]
 7294 00e2 9CB1     		cbz	r4, .L703
6745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      ADC_TR2_HT2 |
 7295              		.loc 1 6745 0
 7296 00e4 5C6A     		ldr	r4, [r3, #36]
 7297 00e6 04F0FF24 		and	r4, r4, #-16711936
 7298 00ea 42EA0E42 		orr	r2, r2, lr, lsl #16
 7299              	.LVL459:
 7300 00ee 2243     		orrs	r2, r2, r4
 7301 00f0 5A62     		str	r2, [r3, #36]
6751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 7302              		.loc 1 6751 0
 7303 00f2 0468     		ldr	r4, [r0]
 7304 00f4 D4F8A050 		ldr	r5, [r4, #160]
 7305 00f8 8B68     		ldr	r3, [r1, #8]
 7306 00fa 0122     		movs	r2, #1
 7307 00fc 02FA03F3 		lsl	r3, r2, r3
 7308 0100 2B43     		orrs	r3, r3, r5
 7309 0102 C4F8A030 		str	r3, [r4, #160]
6761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmpADCITAWD2orAWD3 = ADC_IT_AWD2;
 7310              		.loc 1 6761 0
 7311 0106 4FF48073 		mov	r3, #256
 7312 010a 30E0     		b	.L704
 7313              	.LVL460:
 7314              	.L703:
6755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           CLEAR_BIT(hadc->Instance->AWD2CR, ADC_AWD2CR_AWD2CH);
 7315              		.loc 1 6755 0
 7316 010c 5A6A     		ldr	r2, [r3, #36]
 7317              	.LVL461:
 7318 010e 02F0FF22 		and	r2, r2, #-16711936
 7319 0112 5A62     		str	r2, [r3, #36]
6756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 7320              		.loc 1 6756 0
 7321 0114 0268     		ldr	r2, [r0]
 7322 0116 D2F8A030 		ldr	r3, [r2, #160]
 7323 011a DB0C     		lsrs	r3, r3, #19
 7324 011c DB04     		lsls	r3, r3, #19
 7325 011e C2F8A030 		str	r3, [r2, #160]
6761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmpADCITAWD2orAWD3 = ADC_IT_AWD2;
 7326              		.loc 1 6761 0
 7327 0122 4FF48073 		mov	r3, #256
ARM GAS  /tmp/cc0XO8k8.s 			page 280


 7328 0126 22E0     		b	.L704
 7329              	.LVL462:
 7330              	.L702:
6771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 7331              		.loc 1 6771 0
 7332 0128 4C68     		ldr	r4, [r1, #4]
 7333 012a 9CB1     		cbz	r4, .L705
6774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      ADC_TR3_HT3 |
 7334              		.loc 1 6774 0
 7335 012c 9C6A     		ldr	r4, [r3, #40]
 7336 012e 04F0FF24 		and	r4, r4, #-16711936
 7337 0132 42EA0E42 		orr	r2, r2, lr, lsl #16
 7338              	.LVL463:
 7339 0136 2243     		orrs	r2, r2, r4
 7340 0138 9A62     		str	r2, [r3, #40]
6780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 7341              		.loc 1 6780 0
 7342 013a 0468     		ldr	r4, [r0]
 7343 013c D4F8A450 		ldr	r5, [r4, #164]
 7344 0140 8B68     		ldr	r3, [r1, #8]
 7345 0142 0122     		movs	r2, #1
 7346 0144 02FA03F3 		lsl	r3, r2, r3
 7347 0148 2B43     		orrs	r3, r3, r5
 7348 014a C4F8A430 		str	r3, [r4, #164]
6790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmpADCITAWD2orAWD3 = ADC_IT_AWD3;
 7349              		.loc 1 6790 0
 7350 014e 4FF40073 		mov	r3, #512
 7351 0152 0CE0     		b	.L704
 7352              	.LVL464:
 7353              	.L705:
6784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           CLEAR_BIT(hadc->Instance->AWD3CR, ADC_AWD3CR_AWD3CH);
 7354              		.loc 1 6784 0
 7355 0154 9A6A     		ldr	r2, [r3, #40]
 7356              	.LVL465:
 7357 0156 02F0FF22 		and	r2, r2, #-16711936
 7358 015a 9A62     		str	r2, [r3, #40]
6785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 7359              		.loc 1 6785 0
 7360 015c 0268     		ldr	r2, [r0]
 7361 015e D2F8A430 		ldr	r3, [r2, #164]
 7362 0162 DB0C     		lsrs	r3, r3, #19
 7363 0164 DB04     		lsls	r3, r3, #19
 7364 0166 C2F8A430 		str	r3, [r2, #164]
6790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmpADCITAWD2orAWD3 = ADC_IT_AWD3;
 7365              		.loc 1 6790 0
 7366 016a 4FF40073 		mov	r3, #512
 7367              	.L704:
 7368              	.LVL466:
6797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 7369              		.loc 1 6797 0
 7370 016e 0268     		ldr	r2, [r0]
 7371 0170 1360     		str	r3, [r2]
6800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 7372              		.loc 1 6800 0
 7373 0172 CA68     		ldr	r2, [r1, #12]
 7374 0174 012A     		cmp	r2, #1
 7375 0176 05D1     		bne	.L706
ARM GAS  /tmp/cc0XO8k8.s 			page 281


6802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 7376              		.loc 1 6802 0
 7377 0178 0168     		ldr	r1, [r0]
 7378              	.LVL467:
 7379 017a 4A68     		ldr	r2, [r1, #4]
 7380 017c 1343     		orrs	r3, r3, r2
 7381              	.LVL468:
 7382 017e 4B60     		str	r3, [r1, #4]
6645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 7383              		.loc 1 6645 0
 7384 0180 0023     		movs	r3, #0
 7385 0182 10E0     		b	.L697
 7386              	.LVL469:
 7387              	.L706:
6806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 7388              		.loc 1 6806 0
 7389 0184 0168     		ldr	r1, [r0]
 7390              	.LVL470:
 7391 0186 4A68     		ldr	r2, [r1, #4]
 7392 0188 22EA0303 		bic	r3, r2, r3
 7393              	.LVL471:
 7394 018c 4B60     		str	r3, [r1, #4]
6645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 7395              		.loc 1 6645 0
 7396 018e 0023     		movs	r3, #0
 7397 0190 09E0     		b	.L697
 7398              	.LVL472:
 7399              	.L694:
 7400              	.LCFI74:
 7401              		.cfi_def_cfa_offset 0
 7402              		.cfi_restore 4
 7403              		.cfi_restore 5
 7404              		.cfi_restore 6
 7405              		.cfi_restore 7
 7406              		.cfi_restore 14
6816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 7407              		.loc 1 6816 0
 7408 0192 436C     		ldr	r3, [r0, #68]
 7409 0194 43F02003 		orr	r3, r3, #32
 7410 0198 4364     		str	r3, [r0, #68]
 7411              	.LVL473:
6818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 7412              		.loc 1 6818 0
 7413 019a 0123     		movs	r3, #1
 7414              	.LVL474:
6823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 7415              		.loc 1 6823 0
 7416 019c 0022     		movs	r2, #0
 7417 019e 80F84020 		strb	r2, [r0, #64]
6826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 7418              		.loc 1 6826 0
 7419 01a2 1846     		mov	r0, r3
 7420              	.LVL475:
6827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 7421              		.loc 1 6827 0
 7422 01a4 7047     		bx	lr
 7423              	.LVL476:
ARM GAS  /tmp/cc0XO8k8.s 			page 282


 7424              	.L697:
 7425              	.LCFI75:
 7426              		.cfi_def_cfa_offset 20
 7427              		.cfi_offset 4, -20
 7428              		.cfi_offset 5, -16
 7429              		.cfi_offset 6, -12
 7430              		.cfi_offset 7, -8
 7431              		.cfi_offset 14, -4
6823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 7432              		.loc 1 6823 0
 7433 01a6 0022     		movs	r2, #0
 7434 01a8 80F84020 		strb	r2, [r0, #64]
6826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 7435              		.loc 1 6826 0
 7436 01ac 1846     		mov	r0, r3
 7437              	.LVL477:
 7438 01ae F0BD     		pop	{r4, r5, r6, r7, pc}
 7439              	.LVL478:
 7440              	.L707:
 7441              	.LCFI76:
 7442              		.cfi_def_cfa_offset 0
 7443              		.cfi_restore 4
 7444              		.cfi_restore 5
 7445              		.cfi_restore 6
 7446              		.cfi_restore 7
 7447              		.cfi_restore 14
6671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 7448              		.loc 1 6671 0
 7449 01b0 0220     		movs	r0, #2
 7450              	.LVL479:
 7451 01b2 7047     		bx	lr
 7452              		.cfi_endproc
 7453              	.LFE158:
 7455              		.section	.text.HAL_ADCEx_MultiModeConfigChannel,"ax",%progbits
 7456              		.align	2
 7457              		.global	HAL_ADCEx_MultiModeConfigChannel
 7458              		.thumb
 7459              		.thumb_func
 7461              	HAL_ADCEx_MultiModeConfigChannel:
 7462              	.LFB159:
6929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 7463              		.loc 1 6929 0
 7464              		.cfi_startproc
 7465              		@ args = 0, pretend = 0, frame = 88
 7466              		@ frame_needed = 0, uses_anonymous_args = 0
 7467              		@ link register save eliminated.
 7468              	.LVL480:
 7469 0000 70B4     		push	{r4, r5, r6}
 7470              	.LCFI77:
 7471              		.cfi_def_cfa_offset 12
 7472              		.cfi_offset 4, -12
 7473              		.cfi_offset 5, -8
 7474              		.cfi_offset 6, -4
 7475 0002 97B0     		sub	sp, sp, #92
 7476              	.LCFI78:
 7477              		.cfi_def_cfa_offset 104
 7478              	.LVL481:
ARM GAS  /tmp/cc0XO8k8.s 			page 283


6944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmphadcSharingSameCommonRegister.Instance == NULL)
 7479              		.loc 1 6944 0
 7480 0004 0368     		ldr	r3, [r0]
 7481 0006 B3F1A04F 		cmp	r3, #1342177280
 7482 000a 03D1     		bne	.L712
6944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmphadcSharingSameCommonRegister.Instance == NULL)
 7483              		.loc 1 6944 0 is_stmt 0 discriminator 1
 7484 000c 03F58073 		add	r3, r3, #256
 7485 0010 0193     		str	r3, [sp, #4]
 7486 0012 14E0     		b	.L713
 7487              	.L712:
6944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmphadcSharingSameCommonRegister.Instance == NULL)
 7488              		.loc 1 6944 0 discriminator 2
 7489 0014 544A     		ldr	r2, .L742
 7490 0016 9342     		cmp	r3, r2
 7491 0018 03D1     		bne	.L714
6944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmphadcSharingSameCommonRegister.Instance == NULL)
 7492              		.loc 1 6944 0 discriminator 3
 7493 001a 4FF0A043 		mov	r3, #1342177280
 7494 001e 0193     		str	r3, [sp, #4]
 7495 0020 0DE0     		b	.L713
 7496              	.L714:
6944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmphadcSharingSameCommonRegister.Instance == NULL)
 7497              		.loc 1 6944 0 discriminator 4
 7498 0022 524A     		ldr	r2, .L742+4
 7499 0024 9342     		cmp	r3, r2
 7500 0026 02D1     		bne	.L716
6944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmphadcSharingSameCommonRegister.Instance == NULL)
 7501              		.loc 1 6944 0 discriminator 6
 7502 0028 514B     		ldr	r3, .L742+8
 7503 002a 0193     		str	r3, [sp, #4]
 7504 002c 07E0     		b	.L713
 7505              	.L716:
6944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmphadcSharingSameCommonRegister.Instance == NULL)
 7506              		.loc 1 6944 0 discriminator 7
 7507 002e 504A     		ldr	r2, .L742+8
 7508 0030 9342     		cmp	r3, r2
 7509 0032 02D1     		bne	.L717
6944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmphadcSharingSameCommonRegister.Instance == NULL)
 7510              		.loc 1 6944 0 discriminator 9
 7511 0034 4D4B     		ldr	r3, .L742+4
 7512 0036 0193     		str	r3, [sp, #4]
 7513 0038 01E0     		b	.L713
 7514              	.L717:
6944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmphadcSharingSameCommonRegister.Instance == NULL)
 7515              		.loc 1 6944 0 discriminator 10
 7516 003a 0023     		movs	r3, #0
 7517 003c 0193     		str	r3, [sp, #4]
 7518              	.L713:
6945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 7519              		.loc 1 6945 0 is_stmt 1
 7520 003e 019B     		ldr	r3, [sp, #4]
 7521 0040 002B     		cmp	r3, #0
 7522 0042 00F08A80 		beq	.L727
6952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 7523              		.loc 1 6952 0
 7524 0046 90F84020 		ldrb	r2, [r0, #64]	@ zero_extendqisi2
ARM GAS  /tmp/cc0XO8k8.s 			page 284


 7525 004a 012A     		cmp	r2, #1
 7526 004c 00F08780 		beq	.L728
6952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 7527              		.loc 1 6952 0 is_stmt 0 discriminator 2
 7528 0050 0122     		movs	r2, #1
 7529 0052 80F84020 		strb	r2, [r0, #64]
6959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     && (ADC_IS_CONVERSION_ONGOING_REGULAR(&tmphadcSharingSameCommonRegister) == RESET) )
 7530              		.loc 1 6959 0 is_stmt 1 discriminator 2
 7531 0056 0268     		ldr	r2, [r0]
 7532 0058 9468     		ldr	r4, [r2, #8]
 7533 005a 14F0040F 		tst	r4, #4
 7534 005e 6AD1     		bne	.L719
6960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 7535              		.loc 1 6960 0
 7536 0060 9C68     		ldr	r4, [r3, #8]
 7537 0062 14F0040F 		tst	r4, #4
 7538 0066 66D1     		bne	.L719
6965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 7539              		.loc 1 6965 0
 7540 0068 B2F1A04F 		cmp	r2, #1342177280
 7541 006c 04D0     		beq	.L729
6965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 7542              		.loc 1 6965 0 is_stmt 0 discriminator 2
 7543 006e 3E4C     		ldr	r4, .L742
 7544 0070 A242     		cmp	r2, r4
 7545 0072 03D1     		bne	.L730
6965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 7546              		.loc 1 6965 0
 7547 0074 3F4A     		ldr	r2, .L742+12
 7548 0076 02E0     		b	.L720
 7549              	.L729:
 7550 0078 3E4A     		ldr	r2, .L742+12
 7551 007a 00E0     		b	.L720
 7552              	.L730:
 7553 007c 3E4A     		ldr	r2, .L742+16
 7554              	.L720:
 7555              	.LVL482:
6970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 7556              		.loc 1 6970 0 is_stmt 1 discriminator 6
 7557 007e 0C68     		ldr	r4, [r1]
 7558 0080 002C     		cmp	r4, #0
 7559 0082 31D0     		beq	.L721
6975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CCR_MDMA  |
 7560              		.loc 1 6975 0
 7561 0084 9468     		ldr	r4, [r2, #8]
 7562 0086 24F46045 		bic	r5, r4, #57344
 7563 008a 4C68     		ldr	r4, [r1, #4]
 7564 008c 466B     		ldr	r6, [r0, #52]
 7565 008e 44EA4634 		orr	r4, r4, r6, lsl #13
 7566 0092 2C43     		orrs	r4, r4, r5
 7567 0094 9460     		str	r4, [r2, #8]
6997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )
 7568              		.loc 1 6997 0
 7569 0096 0568     		ldr	r5, [r0]
 7570 0098 AC68     		ldr	r4, [r5, #8]
 7571 009a 04F00304 		and	r4, r4, #3
 7572 009e 012C     		cmp	r4, #1
ARM GAS  /tmp/cc0XO8k8.s 			page 285


 7573 00a0 05D1     		bne	.L731
6997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )
 7574              		.loc 1 6997 0 is_stmt 0 discriminator 1
 7575 00a2 2C68     		ldr	r4, [r5]
 7576 00a4 14F0010F 		tst	r4, #1
 7577 00a8 03D1     		bne	.L732
6997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )
 7578              		.loc 1 6997 0
 7579 00aa 0024     		movs	r4, #0
 7580 00ac 02E0     		b	.L722
 7581              	.L731:
 7582 00ae 0024     		movs	r4, #0
 7583 00b0 00E0     		b	.L722
 7584              	.L732:
 7585 00b2 0124     		movs	r4, #1
 7586              	.L722:
6997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )
 7587              		.loc 1 6997 0 discriminator 6
 7588 00b4 002C     		cmp	r4, #0
 7589 00b6 44D1     		bne	.L733
6998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 7590              		.loc 1 6998 0 is_stmt 1
 7591 00b8 9D68     		ldr	r5, [r3, #8]
 7592 00ba 05F00305 		and	r5, r5, #3
 7593 00be 012D     		cmp	r5, #1
 7594 00c0 04D1     		bne	.L724
6998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 7595              		.loc 1 6998 0 is_stmt 0 discriminator 1
 7596 00c2 1B68     		ldr	r3, [r3]
 7597 00c4 13F0010F 		tst	r3, #1
 7598 00c8 00D0     		beq	.L724
6998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 7599              		.loc 1 6998 0
 7600 00ca 0124     		movs	r4, #1
 7601              	.L724:
6997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )
 7602              		.loc 1 6997 0 is_stmt 1
 7603 00cc 002C     		cmp	r4, #0
 7604 00ce 3AD1     		bne	.L735
7000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_CCR_MULTI |
 7605              		.loc 1 7000 0
 7606 00d0 9368     		ldr	r3, [r2, #8]
 7607 00d2 23F47164 		bic	r4, r3, #3856
 7608 00d6 24F00F04 		bic	r4, r4, #15
 7609 00da 0B68     		ldr	r3, [r1]
 7610 00dc 8968     		ldr	r1, [r1, #8]
 7611              	.LVL483:
 7612 00de 0B43     		orrs	r3, r3, r1
 7613 00e0 2343     		orrs	r3, r3, r4
 7614 00e2 9360     		str	r3, [r2, #8]
6930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 7615              		.loc 1 6930 0
 7616 00e4 0023     		movs	r3, #0
 7617 00e6 33E0     		b	.L723
 7618              	.LVL484:
 7619              	.L721:
7009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
ARM GAS  /tmp/cc0XO8k8.s 			page 286


 7620              		.loc 1 7009 0
 7621 00e8 9168     		ldr	r1, [r2, #8]
 7622              	.LVL485:
 7623 00ea 21F46041 		bic	r1, r1, #57344
 7624 00ee 9160     		str	r1, [r2, #8]
7014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )
 7625              		.loc 1 7014 0
 7626 00f0 0468     		ldr	r4, [r0]
 7627 00f2 A168     		ldr	r1, [r4, #8]
 7628 00f4 01F00301 		and	r1, r1, #3
 7629 00f8 0129     		cmp	r1, #1
 7630 00fa 05D1     		bne	.L736
7014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )
 7631              		.loc 1 7014 0 is_stmt 0 discriminator 1
 7632 00fc 2168     		ldr	r1, [r4]
 7633 00fe 11F0010F 		tst	r1, #1
 7634 0102 03D1     		bne	.L737
7014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )
 7635              		.loc 1 7014 0
 7636 0104 0021     		movs	r1, #0
 7637 0106 02E0     		b	.L725
 7638              	.L736:
 7639 0108 0021     		movs	r1, #0
 7640 010a 00E0     		b	.L725
 7641              	.L737:
 7642 010c 0121     		movs	r1, #1
 7643              	.L725:
7014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )
 7644              		.loc 1 7014 0 discriminator 6
 7645 010e E1B9     		cbnz	r1, .L738
7015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 7646              		.loc 1 7015 0 is_stmt 1
 7647 0110 9C68     		ldr	r4, [r3, #8]
 7648 0112 04F00304 		and	r4, r4, #3
 7649 0116 012C     		cmp	r4, #1
 7650 0118 04D1     		bne	.L726
7015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 7651              		.loc 1 7015 0 is_stmt 0 discriminator 1
 7652 011a 1B68     		ldr	r3, [r3]
 7653 011c 13F0010F 		tst	r3, #1
 7654 0120 00D0     		beq	.L726
7015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 7655              		.loc 1 7015 0
 7656 0122 0121     		movs	r1, #1
 7657              	.L726:
7014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )
 7658              		.loc 1 7014 0 is_stmt 1
 7659 0124 99B9     		cbnz	r1, .L740
7017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 7660              		.loc 1 7017 0
 7661 0126 9368     		ldr	r3, [r2, #8]
 7662 0128 23F47163 		bic	r3, r3, #3856
 7663 012c 23F00F03 		bic	r3, r3, #15
 7664 0130 9360     		str	r3, [r2, #8]
6930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 7665              		.loc 1 6930 0
 7666 0132 0023     		movs	r3, #0
ARM GAS  /tmp/cc0XO8k8.s 			page 287


 7667 0134 0CE0     		b	.L723
 7668              	.LVL486:
 7669              	.L719:
7026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 7670              		.loc 1 7026 0
 7671 0136 436C     		ldr	r3, [r0, #68]
 7672 0138 43F02003 		orr	r3, r3, #32
 7673 013c 4364     		str	r3, [r0, #68]
 7674              	.LVL487:
7028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 7675              		.loc 1 7028 0
 7676 013e 0123     		movs	r3, #1
 7677 0140 06E0     		b	.L723
 7678              	.LVL488:
 7679              	.L733:
6930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 7680              		.loc 1 6930 0
 7681 0142 0023     		movs	r3, #0
 7682 0144 04E0     		b	.L723
 7683              	.L735:
 7684 0146 0023     		movs	r3, #0
 7685 0148 02E0     		b	.L723
 7686              	.LVL489:
 7687              	.L738:
 7688 014a 0023     		movs	r3, #0
 7689 014c 00E0     		b	.L723
 7690              	.L740:
 7691 014e 0023     		movs	r3, #0
 7692              	.LVL490:
 7693              	.L723:
7033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 7694              		.loc 1 7033 0
 7695 0150 0022     		movs	r2, #0
 7696 0152 80F84020 		strb	r2, [r0, #64]
7036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** } 
 7697              		.loc 1 7036 0
 7698 0156 1846     		mov	r0, r3
 7699              	.LVL491:
 7700 0158 02E0     		b	.L718
 7701              	.LVL492:
 7702              	.L727:
6948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 7703              		.loc 1 6948 0
 7704 015a 0120     		movs	r0, #1
 7705              	.LVL493:
 7706 015c 00E0     		b	.L718
 7707              	.LVL494:
 7708              	.L728:
6952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 7709              		.loc 1 6952 0
 7710 015e 0220     		movs	r0, #2
 7711              	.LVL495:
 7712              	.L718:
7037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 7713              		.loc 1 7037 0
 7714 0160 17B0     		add	sp, sp, #92
 7715              	.LCFI79:
ARM GAS  /tmp/cc0XO8k8.s 			page 288


 7716              		.cfi_def_cfa_offset 12
 7717              		@ sp needed
 7718 0162 70BC     		pop	{r4, r5, r6}
 7719              	.LCFI80:
 7720              		.cfi_restore 6
 7721              		.cfi_restore 5
 7722              		.cfi_restore 4
 7723              		.cfi_def_cfa_offset 0
 7724 0164 7047     		bx	lr
 7725              	.L743:
 7726 0166 00BF     		.align	2
 7727              	.L742:
 7728 0168 00010050 		.word	1342177536
 7729 016c 00040050 		.word	1342178304
 7730 0170 00050050 		.word	1342178560
 7731 0174 00030050 		.word	1342178048
 7732 0178 00070050 		.word	1342179072
 7733              		.cfi_endproc
 7734              	.LFE159:
 7736              		.text
 7737              	.Letext0:
 7738              		.file 2 "/opt/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_types.h"
 7739              		.file 3 "/opt/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 7740              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xc.h"
 7741              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 7742              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 7743              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 7744              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 7745              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 7746              		.file 10 "Drivers/CMSIS/Include/core_cm4.h"
 7747              		.file 11 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 7748              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  /tmp/cc0XO8k8.s 			page 289


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f3xx_hal_adc_ex.c
     /tmp/cc0XO8k8.s:22     .text.ADC_Disable:00000000 $t
     /tmp/cc0XO8k8.s:26     .text.ADC_Disable:00000000 ADC_Disable
     /tmp/cc0XO8k8.s:137    .text.ADC_ConversionStop:00000000 $t
     /tmp/cc0XO8k8.s:141    .text.ADC_ConversionStop:00000000 ADC_ConversionStop
     /tmp/cc0XO8k8.s:324    .text.ADC_ConversionStop:000000d8 $d
     /tmp/cc0XO8k8.s:329    .text.ADC_Enable:00000000 $t
     /tmp/cc0XO8k8.s:333    .text.ADC_Enable:00000000 ADC_Enable
     /tmp/cc0XO8k8.s:438    .text.ADC_Enable:00000080 $d
     /tmp/cc0XO8k8.s:443    .text.ADC_DMAError:00000000 $t
     /tmp/cc0XO8k8.s:447    .text.ADC_DMAError:00000000 ADC_DMAError
     /tmp/cc0XO8k8.s:478    .text.ADC_DMAHalfConvCplt:00000000 $t
     /tmp/cc0XO8k8.s:482    .text.ADC_DMAHalfConvCplt:00000000 ADC_DMAHalfConvCplt
     /tmp/cc0XO8k8.s:505    .text.ADC_DMAConvCplt:00000000 $t
     /tmp/cc0XO8k8.s:509    .text.ADC_DMAConvCplt:00000000 ADC_DMAConvCplt
     /tmp/cc0XO8k8.s:573    .text.HAL_ADC_Init:00000000 $t
     /tmp/cc0XO8k8.s:578    .text.HAL_ADC_Init:00000000 HAL_ADC_Init
     /tmp/cc0XO8k8.s:997    .text.HAL_ADC_Init:00000278 $d
     /tmp/cc0XO8k8.s:1009   .text.HAL_ADC_DeInit:00000000 $t
     /tmp/cc0XO8k8.s:1014   .text.HAL_ADC_DeInit:00000000 HAL_ADC_DeInit
     /tmp/cc0XO8k8.s:1339   .text.HAL_ADC_DeInit:000001e8 $d
     /tmp/cc0XO8k8.s:1353   .text.HAL_ADC_Start:00000000 $t
     /tmp/cc0XO8k8.s:1358   .text.HAL_ADC_Start:00000000 HAL_ADC_Start
     /tmp/cc0XO8k8.s:1615   .text.HAL_ADC_Start:0000017c $d
     /tmp/cc0XO8k8.s:1623   .text.HAL_ADC_Stop:00000000 $t
     /tmp/cc0XO8k8.s:1628   .text.HAL_ADC_Stop:00000000 HAL_ADC_Stop
     /tmp/cc0XO8k8.s:1692   .text.HAL_ADC_PollForConversion:00000000 $t
     /tmp/cc0XO8k8.s:1697   .text.HAL_ADC_PollForConversion:00000000 HAL_ADC_PollForConversion
     /tmp/cc0XO8k8.s:1938   .text.HAL_ADC_PollForConversion:00000158 $d
     /tmp/cc0XO8k8.s:1946   .text.HAL_ADC_PollForEvent:00000000 $t
     /tmp/cc0XO8k8.s:1951   .text.HAL_ADC_PollForEvent:00000000 HAL_ADC_PollForEvent
     /tmp/cc0XO8k8.s:2102   .text.HAL_ADC_Start_IT:00000000 $t
     /tmp/cc0XO8k8.s:2107   .text.HAL_ADC_Start_IT:00000000 HAL_ADC_Start_IT
     /tmp/cc0XO8k8.s:2397   .text.HAL_ADC_Start_IT:000001b4 $d
     /tmp/cc0XO8k8.s:2405   .text.HAL_ADC_Stop_IT:00000000 $t
     /tmp/cc0XO8k8.s:2410   .text.HAL_ADC_Stop_IT:00000000 HAL_ADC_Stop_IT
     /tmp/cc0XO8k8.s:2479   .text.HAL_ADC_Start_DMA:00000000 $t
     /tmp/cc0XO8k8.s:2484   .text.HAL_ADC_Start_DMA:00000000 HAL_ADC_Start_DMA
     /tmp/cc0XO8k8.s:2723   .text.HAL_ADC_Start_DMA:00000170 $d
     /tmp/cc0XO8k8.s:2734   .text.HAL_ADC_Stop_DMA:00000000 $t
     /tmp/cc0XO8k8.s:2739   .text.HAL_ADC_Stop_DMA:00000000 HAL_ADC_Stop_DMA
     /tmp/cc0XO8k8.s:2837   .text.HAL_ADC_GetValue:00000000 $t
     /tmp/cc0XO8k8.s:2842   .text.HAL_ADC_GetValue:00000000 HAL_ADC_GetValue
     /tmp/cc0XO8k8.s:2860   .text.HAL_ADCEx_Calibration_Start:00000000 $t
     /tmp/cc0XO8k8.s:2865   .text.HAL_ADCEx_Calibration_Start:00000000 HAL_ADCEx_Calibration_Start
     /tmp/cc0XO8k8.s:2980   .text.HAL_ADCEx_Calibration_GetValue:00000000 $t
     /tmp/cc0XO8k8.s:2985   .text.HAL_ADCEx_Calibration_GetValue:00000000 HAL_ADCEx_Calibration_GetValue
     /tmp/cc0XO8k8.s:3015   .text.HAL_ADCEx_Calibration_SetValue:00000000 $t
     /tmp/cc0XO8k8.s:3020   .text.HAL_ADCEx_Calibration_SetValue:00000000 HAL_ADCEx_Calibration_SetValue
     /tmp/cc0XO8k8.s:3128   .text.HAL_ADCEx_InjectedStart:00000000 $t
     /tmp/cc0XO8k8.s:3133   .text.HAL_ADCEx_InjectedStart:00000000 HAL_ADCEx_InjectedStart
     /tmp/cc0XO8k8.s:3359   .text.HAL_ADCEx_InjectedStart:0000013c $d
     /tmp/cc0XO8k8.s:3367   .text.HAL_ADCEx_InjectedStop:00000000 $t
     /tmp/cc0XO8k8.s:3372   .text.HAL_ADCEx_InjectedStop:00000000 HAL_ADCEx_InjectedStop
     /tmp/cc0XO8k8.s:3467   .text.HAL_ADCEx_InjectedPollForConversion:00000000 $t
     /tmp/cc0XO8k8.s:3472   .text.HAL_ADCEx_InjectedPollForConversion:00000000 HAL_ADCEx_InjectedPollForConversion
ARM GAS  /tmp/cc0XO8k8.s 			page 290


     /tmp/cc0XO8k8.s:3644   .text.HAL_ADCEx_InjectedPollForConversion:000000e8 $d
     /tmp/cc0XO8k8.s:3652   .text.HAL_ADCEx_InjectedStart_IT:00000000 $t
     /tmp/cc0XO8k8.s:3657   .text.HAL_ADCEx_InjectedStart_IT:00000000 HAL_ADCEx_InjectedStart_IT
     /tmp/cc0XO8k8.s:3916   .text.HAL_ADCEx_InjectedStart_IT:00000174 $d
     /tmp/cc0XO8k8.s:3924   .text.HAL_ADCEx_InjectedStop_IT:00000000 $t
     /tmp/cc0XO8k8.s:3929   .text.HAL_ADCEx_InjectedStop_IT:00000000 HAL_ADCEx_InjectedStop_IT
     /tmp/cc0XO8k8.s:4029   .text.HAL_ADCEx_MultiModeStart_DMA:00000000 $t
     /tmp/cc0XO8k8.s:4034   .text.HAL_ADCEx_MultiModeStart_DMA:00000000 HAL_ADCEx_MultiModeStart_DMA
     /tmp/cc0XO8k8.s:4224   .text.HAL_ADCEx_MultiModeStart_DMA:000000fc $d
     /tmp/cc0XO8k8.s:4236   .text.HAL_ADCEx_MultiModeStop_DMA:00000000 $t
     /tmp/cc0XO8k8.s:4241   .text.HAL_ADCEx_MultiModeStop_DMA:00000000 HAL_ADCEx_MultiModeStop_DMA
     /tmp/cc0XO8k8.s:4442   .text.HAL_ADCEx_MultiModeStop_DMA:000000f8 $d
     /tmp/cc0XO8k8.s:4448   .text.HAL_ADCEx_MultiModeGetValue:00000000 $t
     /tmp/cc0XO8k8.s:4453   .text.HAL_ADCEx_MultiModeGetValue:00000000 HAL_ADCEx_MultiModeGetValue
     /tmp/cc0XO8k8.s:4487   .text.HAL_ADCEx_MultiModeGetValue:0000001c $d
     /tmp/cc0XO8k8.s:4494   .text.HAL_ADCEx_InjectedGetValue:00000000 $t
     /tmp/cc0XO8k8.s:4499   .text.HAL_ADCEx_InjectedGetValue:00000000 HAL_ADCEx_InjectedGetValue
     /tmp/cc0XO8k8.s:4550   .text.HAL_ADCEx_RegularStop:00000000 $t
     /tmp/cc0XO8k8.s:4555   .text.HAL_ADCEx_RegularStop:00000000 HAL_ADCEx_RegularStop
     /tmp/cc0XO8k8.s:4634   .text.HAL_ADCEx_RegularStop_IT:00000000 $t
     /tmp/cc0XO8k8.s:4639   .text.HAL_ADCEx_RegularStop_IT:00000000 HAL_ADCEx_RegularStop_IT
     /tmp/cc0XO8k8.s:4723   .text.HAL_ADCEx_RegularStop_DMA:00000000 $t
     /tmp/cc0XO8k8.s:4728   .text.HAL_ADCEx_RegularStop_DMA:00000000 HAL_ADCEx_RegularStop_DMA
     /tmp/cc0XO8k8.s:4838   .text.HAL_ADCEx_RegularMultiModeStop_DMA:00000000 $t
     /tmp/cc0XO8k8.s:4843   .text.HAL_ADCEx_RegularMultiModeStop_DMA:00000000 HAL_ADCEx_RegularMultiModeStop_DMA
     /tmp/cc0XO8k8.s:5056   .text.HAL_ADCEx_RegularMultiModeStop_DMA:00000110 $d
     /tmp/cc0XO8k8.s:5062   .text.HAL_ADCEx_InjectedConvCpltCallback:00000000 $t
     /tmp/cc0XO8k8.s:5067   .text.HAL_ADCEx_InjectedConvCpltCallback:00000000 HAL_ADCEx_InjectedConvCpltCallback
     /tmp/cc0XO8k8.s:5080   .text.HAL_ADCEx_InjectedQueueOverflowCallback:00000000 $t
     /tmp/cc0XO8k8.s:5085   .text.HAL_ADCEx_InjectedQueueOverflowCallback:00000000 HAL_ADCEx_InjectedQueueOverflowCallback
     /tmp/cc0XO8k8.s:5098   .text.HAL_ADCEx_LevelOutOfWindow2Callback:00000000 $t
     /tmp/cc0XO8k8.s:5103   .text.HAL_ADCEx_LevelOutOfWindow2Callback:00000000 HAL_ADCEx_LevelOutOfWindow2Callback
     /tmp/cc0XO8k8.s:5116   .text.HAL_ADCEx_LevelOutOfWindow3Callback:00000000 $t
     /tmp/cc0XO8k8.s:5121   .text.HAL_ADCEx_LevelOutOfWindow3Callback:00000000 HAL_ADCEx_LevelOutOfWindow3Callback
     /tmp/cc0XO8k8.s:5134   .text.HAL_ADC_IRQHandler:00000000 $t
     /tmp/cc0XO8k8.s:5139   .text.HAL_ADC_IRQHandler:00000000 HAL_ADC_IRQHandler
     /tmp/cc0XO8k8.s:5578   .text.HAL_ADC_IRQHandler:000002ac $d
     /tmp/cc0XO8k8.s:5583   .text.HAL_ADC_IRQHandler:000002bc $t
     /tmp/cc0XO8k8.s:5814   .text.HAL_ADC_IRQHandler:0000042c $d
     /tmp/cc0XO8k8.s:5822   .text.HAL_ADC_ConfigChannel:00000000 $t
     /tmp/cc0XO8k8.s:5827   .text.HAL_ADC_ConfigChannel:00000000 HAL_ADC_ConfigChannel
     /tmp/cc0XO8k8.s:5972   .text.HAL_ADC_ConfigChannel:00000100 $d
     /tmp/cc0XO8k8.s:5976   .text.HAL_ADC_ConfigChannel:00000104 $t
     /tmp/cc0XO8k8.s:6396   .text.HAL_ADC_ConfigChannel:00000388 $d
     /tmp/cc0XO8k8.s:6408   .text.HAL_ADCEx_InjectedConfigChannel:00000000 $t
     /tmp/cc0XO8k8.s:6413   .text.HAL_ADCEx_InjectedConfigChannel:00000000 HAL_ADCEx_InjectedConfigChannel
     /tmp/cc0XO8k8.s:6737   .text.HAL_ADCEx_InjectedConfigChannel:000001f0 $d
     /tmp/cc0XO8k8.s:6741   .text.HAL_ADCEx_InjectedConfigChannel:000001f4 $t
     /tmp/cc0XO8k8.s:6866   .text.HAL_ADCEx_InjectedConfigChannel:000002c8 $d
     /tmp/cc0XO8k8.s:6869   .text.HAL_ADCEx_InjectedConfigChannel:000002d0 $t
     /tmp/cc0XO8k8.s:7141   .text.HAL_ADCEx_InjectedConfigChannel:00000464 $d
     /tmp/cc0XO8k8.s:7152   .text.HAL_ADC_AnalogWDGConfig:00000000 $t
     /tmp/cc0XO8k8.s:7157   .text.HAL_ADC_AnalogWDGConfig:00000000 HAL_ADC_AnalogWDGConfig
     /tmp/cc0XO8k8.s:7456   .text.HAL_ADCEx_MultiModeConfigChannel:00000000 $t
     /tmp/cc0XO8k8.s:7461   .text.HAL_ADCEx_MultiModeConfigChannel:00000000 HAL_ADCEx_MultiModeConfigChannel
     /tmp/cc0XO8k8.s:7728   .text.HAL_ADCEx_MultiModeConfigChannel:00000168 $d
                     .debug_frame:00000010 $d
ARM GAS  /tmp/cc0XO8k8.s 			page 291



UNDEFINED SYMBOLS
HAL_GetTick
HAL_ADC_ErrorCallback
HAL_ADC_ConvHalfCpltCallback
HAL_ADC_ConvCpltCallback
HAL_ADC_MspInit
SystemCoreClock
HAL_ADC_MspDeInit
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_ADC_LevelOutOfWindowCallback
