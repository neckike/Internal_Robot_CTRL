ARM GAS  /tmp/ccofRh1B.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"stm32f3xx_hal_can.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.HAL_CAN_ConfigFilter,"ax",%progbits
  22              		.align	2
  23              		.global	HAL_CAN_ConfigFilter
  24              		.thumb
  25              		.thumb_func
  27              	HAL_CAN_ConfigFilter:
  28              	.LFB125:
  29              		.file 1 "Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c"
   1:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
   2:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ******************************************************************************
   3:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @file    stm32f3xx_hal_can.c
   4:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @author  MCD Application Team
   5:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief   CAN HAL module driver.
   6:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *          functionalities of the Controller Area Network (CAN) peripheral:
   8:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           + Initialization and de-initialization functions 
   9:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           + IO operation functions
  10:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *           + Peripheral State and Error functions
  12:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *
  13:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   @verbatim
  14:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ==============================================================================    
  15:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ==============================================================================
  17:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     [..]            
  18:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) Enable the CAN controller interface clock using __HAL_RCC_CAN1_CLK_ENABLE(); 
  19:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****        
  20:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) CAN pins configuration
  21:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         (++) Enable the clock for the CAN GPIOs using the following function:
  22:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****              __HAL_RCC_GPIOx_CLK_ENABLE();   
  23:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         (++) Connect and configure the involved CAN pins to AF9 using the 
  24:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****               following function HAL_GPIO_Init(); 
  25:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****               
  26:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) Initialise and configure the CAN using HAL_CAN_Init() function.   
  27:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                  
  28:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) Transmit the desired CAN frame using HAL_CAN_Transmit() function.
  29:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
ARM GAS  /tmp/ccofRh1B.s 			page 2


  30:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) Or transmit the desired CAN frame using HAL_CAN_Transmit_IT() function.
  31:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
  32:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) Receive a CAN frame using HAL_CAN_Receive() function.
  33:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
  34:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (#) Or receive a CAN frame using HAL_CAN_Receive_IT() function.
  35:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
  36:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      *** Polling mode IO operation ***
  37:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      =================================
  38:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      [..]    
  39:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****        (+) Start the CAN peripheral transmission and wait the end of this operation 
  40:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****            using HAL_CAN_Transmit(), at this stage user can specify the value of timeout
  41:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****            according to his end application
  42:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****        (+) Start the CAN peripheral reception and wait the end of this operation 
  43:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****            using HAL_CAN_Receive(), at this stage user can specify the value of timeout
  44:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****            according to his end application 
  45:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****        
  46:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      *** Interrupt mode IO operation ***    
  47:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      ===================================
  48:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      [..]    
  49:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****        (+) Start the CAN peripheral transmission using HAL_CAN_Transmit_IT()
  50:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****        (+) Start the CAN peripheral reception using HAL_CAN_Receive_IT()         
  51:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****        (+) Use HAL_CAN_IRQHandler() called under the used CAN Interrupt subroutine
  52:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****        (+) At CAN end of transmission HAL_CAN_TxCpltCallback() function is executed and user can 
  53:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             add his own code by customization of function pointer HAL_CAN_TxCpltCallback 
  54:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****        (+) In case of CAN Error, HAL_CAN_ErrorCallback() function is executed and user can 
  55:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             add his own code by customization of function pointer HAL_CAN_ErrorCallback
  56:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****  
  57:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      *** CAN HAL driver macros list ***
  58:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      ============================================= 
  59:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      [..]
  60:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****        Below the list of most used macros in CAN HAL driver.
  61:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****        
  62:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) __HAL_CAN_ENABLE_IT: Enable the specified CAN interrupts
  63:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) __HAL_CAN_DISABLE_IT: Disable the specified CAN interrupts
  64:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) __HAL_CAN_GET_IT_SOURCE: Check if the specified CAN interrupt source is enabled or disabl
  65:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) __HAL_CAN_CLEAR_FLAG: Clear the CAN's pending flags
  66:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) __HAL_CAN_GET_FLAG: Get the selected CAN's flag status
  67:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       
  68:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      [..] 
  69:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (@) You can refer to the CAN HAL driver header file for more useful macros 
  70:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                 
  71:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   @endverbatim
  72:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****            
  73:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ******************************************************************************
  74:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @attention
  75:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *
  76:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  77:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *
  78:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * Redistribution and use in source and binary forms, with or without modification,
  79:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * are permitted provided that the following conditions are met:
  80:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  81:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *      this list of conditions and the following disclaimer.
  82:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  83:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *      this list of conditions and the following disclaimer in the documentation
  84:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *      and/or other materials provided with the distribution.
  85:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  86:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *      may be used to endorse or promote products derived from this software
ARM GAS  /tmp/ccofRh1B.s 			page 3


  87:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *      without specific prior written permission.
  88:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *
  89:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  90:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  91:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  92:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  93:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  94:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  95:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  96:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  97:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  98:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  99:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *
 100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ******************************************************************************  
 101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /* Includes ------------------------------------------------------------------*/
 104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #include "stm32f3xx_hal.h"
 105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /** @addtogroup STM32F3xx_HAL_Driver
 107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @{
 108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /** @defgroup CAN CAN
 111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief CAN driver modules
 112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @{
 113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */ 
 114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
 115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #ifdef HAL_CAN_MODULE_ENABLED  
 116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
 117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
 118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
 119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
 120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     defined(STM32F302x8)                                                 || \
 121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     defined(STM32F373xC) || defined(STM32F378xx)
 122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
 123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /* Private typedef -----------------------------------------------------------*/
 124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /* Private define ------------------------------------------------------------*/
 125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /** @defgroup CAN_Private_Constants CAN Private Constants
 126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @{
 127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** #define CAN_TIMEOUT_VALUE 10U
 129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
 130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @}
 131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /* Private macro -------------------------------------------------------------*/
 133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /* Private variables ---------------------------------------------------------*/
 134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /* Private function prototypes -----------------------------------------------*/
 135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /** @defgroup CAN_Private_Functions CAN Private Functions
 136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @{
 137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** static HAL_StatusTypeDef CAN_Receive_IT(CAN_HandleTypeDef* hcan, uint8_t FIFONumber);
 139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** static HAL_StatusTypeDef CAN_Transmit_IT(CAN_HandleTypeDef* hcan);
 140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
 141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @}
 142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
ARM GAS  /tmp/ccofRh1B.s 			page 4


 144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /* Exported functions ---------------------------------------------------------*/
 145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /** @defgroup CAN_Exported_Functions CAN Exported Functions
 147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @{
 148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group1 Initialization and de-initialization functions 
 151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****  *  @brief    Initialization and Configuration functions 
 152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****  *
 153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** @verbatim    
 154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ==============================================================================
 155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****               ##### Initialization and de-initialization functions #####
 156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ==============================================================================
 157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     [..]  This section provides functions allowing to:
 158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) Initialize and configure the CAN. 
 159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) De-initialize the CAN. 
 160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****          
 161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** @endverbatim
 162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @{
 163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
 165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
 166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief Initializes the CAN peripheral according to the specified
 167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *        parameters in the CAN_InitStruct.
 168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *             the configuration information for the specified CAN.  
 170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval HAL status
 171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Init(CAN_HandleTypeDef* hcan)
 173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t status = CAN_INITSTATUS_FAILED;  /* Default init status */
 175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t tickstart = 0U;
 176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
 177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check CAN handle */
 178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if(hcan == NULL)
 179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      return HAL_ERROR;
 181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check the parameters */
 184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_ALL_INSTANCE(hcan->Instance));
 185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TTCM));
 186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.ABOM));
 187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AWUM));
 188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.NART));
 189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.RFLM));
 190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TXFP));
 191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_MODE(hcan->Init.Mode));
 192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_SJW(hcan->Init.SJW));
 193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_BS1(hcan->Init.BS1));
 194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_BS2(hcan->Init.BS2));
 195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_PRESCALER(hcan->Init.Prescaler));
 196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
 197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if(hcan->State == HAL_CAN_STATE_RESET)
 198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Allocate lock resource and initialize it */
 200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->Lock = HAL_UNLOCKED;
ARM GAS  /tmp/ccofRh1B.s 			page 5


 201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Init the low level hardware */
 202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     HAL_CAN_MspInit(hcan);
 203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
 205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Initialize the CAN state*/
 206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_BUSY;
 207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
 208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Exit from sleep mode */
 209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Request initialisation */
 212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   SET_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
 213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Get tick */
 215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   tickstart = HAL_GetTick();   
 216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
 217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Wait the acknowledge */
 218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   while(HAL_IS_BIT_CLR(hcan->Instance->MSR, CAN_MSR_INAK))
 219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if((HAL_GetTick()-tickstart) > CAN_TIMEOUT_VALUE)
 221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       hcan->State= HAL_CAN_STATE_TIMEOUT;
 223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Process unlocked */
 224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       __HAL_UNLOCK(hcan);
 225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       return HAL_TIMEOUT;
 226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check acknowledge */
 230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_INAK))
 231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Set the time triggered communication mode */
 233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if (hcan->Init.TTCM == ENABLE)
 234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       SET_BIT(hcan->Instance->MCR, CAN_MCR_TTCM);
 236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     else
 238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_TTCM);
 240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Set the automatic bus-off management */
 243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if (hcan->Init.ABOM == ENABLE)
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       SET_BIT(hcan->Instance->MCR, CAN_MCR_ABOM);
 246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     else
 248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_ABOM);
 250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Set the automatic wake-up mode */
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if (hcan->Init.AWUM == ENABLE)
 254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       SET_BIT(hcan->Instance->MCR, CAN_MCR_AWUM);
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     else
ARM GAS  /tmp/ccofRh1B.s 			page 6


 258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_AWUM);
 260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Set the no automatic retransmission */
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if (hcan->Init.NART == ENABLE)
 264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       SET_BIT(hcan->Instance->MCR, CAN_MCR_NART);
 266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     else
 268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_NART);
 270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Set the receive FIFO locked mode */
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if (hcan->Init.RFLM == ENABLE)
 274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       SET_BIT(hcan->Instance->MCR, CAN_MCR_RFLM);
 276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     else
 278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_RFLM);
 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Set the transmit FIFO priority */
 283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if (hcan->Init.TXFP == ENABLE)
 284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       SET_BIT(hcan->Instance->MCR, CAN_MCR_TXFP);
 286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     else
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_TXFP);
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Set the bit timing register */
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     WRITE_REG(hcan->Instance->BTR, (uint32_t)(hcan->Init.Mode           |
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                               hcan->Init.SJW            |
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                               hcan->Init.BS1            |
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                               hcan->Init.BS2            |
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                               (hcan->Init.Prescaler - 1U) ));
 298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Request leave initialisation */
 300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Get tick */
 303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     tickstart = HAL_GetTick();   
 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****    
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Wait the acknowledge */
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     while(HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_INAK))
 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       if((HAL_GetTick()-tickstart) > CAN_TIMEOUT_VALUE)
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****          hcan->State= HAL_CAN_STATE_TIMEOUT;
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****        /* Process unlocked */
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****        __HAL_UNLOCK(hcan);
 314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
ARM GAS  /tmp/ccofRh1B.s 			page 7


 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****        return HAL_TIMEOUT;
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
 317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Check acknowledged */
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if(HAL_IS_BIT_CLR(hcan->Instance->MSR, CAN_MSR_INAK))
 321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       status = CAN_INITSTATUS_SUCCESS;
 323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****  
 326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if(status == CAN_INITSTATUS_SUCCESS)
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Set CAN error code to none */
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     
 331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Initialize the CAN state */
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_READY;
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Return function status */
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_OK;
 336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
 338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Initialize the CAN state */
 340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_ERROR;
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Return function status */
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_ERROR;
 344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Configures the CAN reception filter according to the specified
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         parameters in the CAN_FilterInitStruct.
 350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  sFilterConfig pointer to a CAN_FilterConfTypeDef structure that
 353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         contains the filter configuration information.
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ConfigFilter(CAN_HandleTypeDef* hcan, CAN_FilterConfTypeDef* sFilterConfi
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
  30              		.loc 1 357 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LVL0:
  36 0000 F0B4     		push	{r4, r5, r6, r7}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 16
  39              		.cfi_offset 4, -16
  40              		.cfi_offset 5, -12
  41              		.cfi_offset 6, -8
  42              		.cfi_offset 7, -4
  43              	.LVL1:
ARM GAS  /tmp/ccofRh1B.s 			page 8


 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t filternbrbitpos = 0U;
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check the parameters */
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_FILTER_NUMBER(sFilterConfig->FilterNumber));
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_FILTER_MODE(sFilterConfig->FilterMode));
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_FILTER_SCALE(sFilterConfig->FilterScale));
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_FILTER_FIFO(sFilterConfig->FilterFIFOAssignment));
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(sFilterConfig->FilterActivation));
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   filternbrbitpos = (1U) << sFilterConfig->FilterNumber;
  44              		.loc 1 367 0
  45 0002 4B69     		ldr	r3, [r1, #20]
  46 0004 0122     		movs	r2, #1
  47 0006 02FA03F3 		lsl	r3, r2, r3
  48              	.LVL2:
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Initialisation mode for the filter */
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   SET_BIT(hcan->Instance->FMR, CAN_FMR_FINIT);
  49              		.loc 1 370 0
  50 000a 0468     		ldr	r4, [r0]
  51 000c D4F80022 		ldr	r2, [r4, #512]
  52 0010 42F00102 		orr	r2, r2, #1
  53 0014 C4F80022 		str	r2, [r4, #512]
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Filter Deactivation */
 373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   CLEAR_BIT(hcan->Instance->FA1R, filternbrbitpos);
  54              		.loc 1 373 0
  55 0018 0568     		ldr	r5, [r0]
  56 001a D5F81C22 		ldr	r2, [r5, #540]
  57 001e DC43     		mvns	r4, r3
  58 0020 2240     		ands	r2, r2, r4
  59 0022 C5F81C22 		str	r2, [r5, #540]
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Filter Scale */
 376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (sFilterConfig->FilterScale == CAN_FILTERSCALE_16BIT)
  60              		.loc 1 376 0
  61 0026 CA69     		ldr	r2, [r1, #28]
  62 0028 C2B9     		cbnz	r2, .L2
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* 16-bit scale for the filter */
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->FS1R, filternbrbitpos);
  63              		.loc 1 379 0
  64 002a 0568     		ldr	r5, [r0]
  65 002c D5F80C22 		ldr	r2, [r5, #524]
  66 0030 2240     		ands	r2, r2, r4
  67 0032 C5F80C22 		str	r2, [r5, #524]
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* First 16-bit identifier and First 16-bit mask */
 382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Or First 16-bit identifier and Second 16-bit identifier */
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->Instance->sFilterRegister[sFilterConfig->FilterNumber].FR1 = 
  68              		.loc 1 383 0
  69 0036 0668     		ldr	r6, [r0]
  70 0038 4A69     		ldr	r2, [r1, #20]
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
  71              		.loc 1 384 0
  72 003a CF68     		ldr	r7, [r1, #12]
 385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
ARM GAS  /tmp/ccofRh1B.s 			page 9


  73              		.loc 1 385 0
  74 003c 8D88     		ldrh	r5, [r1, #4]
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
  75              		.loc 1 384 0
  76 003e 45EA0745 		orr	r5, r5, r7, lsl #16
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
  77              		.loc 1 383 0
  78 0042 4832     		adds	r2, r2, #72
  79 0044 46F83250 		str	r5, [r6, r2, lsl #3]
 386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Second 16-bit identifier and Second 16-bit mask */
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Or Third 16-bit identifier and Fourth 16-bit identifier */
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->Instance->sFilterRegister[sFilterConfig->FilterNumber].FR2 = 
  80              		.loc 1 389 0
  81 0048 0268     		ldr	r2, [r0]
  82 004a 4E69     		ldr	r6, [r1, #20]
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
  83              		.loc 1 390 0
  84 004c 8F68     		ldr	r7, [r1, #8]
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
  85              		.loc 1 391 0
  86 004e 0D88     		ldrh	r5, [r1]
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
  87              		.loc 1 390 0
  88 0050 45EA0745 		orr	r5, r5, r7, lsl #16
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
  89              		.loc 1 389 0
  90 0054 4836     		adds	r6, r6, #72
  91 0056 02EBC602 		add	r2, r2, r6, lsl #3
  92 005a 5560     		str	r5, [r2, #4]
  93              	.L2:
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (sFilterConfig->FilterScale == CAN_FILTERSCALE_32BIT)
  94              		.loc 1 394 0
  95 005c CA69     		ldr	r2, [r1, #28]
  96 005e 012A     		cmp	r2, #1
  97 0060 18D1     		bne	.L3
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* 32-bit scale for the filter */
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     SET_BIT(hcan->Instance->FS1R, filternbrbitpos);
  98              		.loc 1 397 0
  99 0062 0568     		ldr	r5, [r0]
 100 0064 D5F80C22 		ldr	r2, [r5, #524]
 101 0068 1A43     		orrs	r2, r2, r3
 102 006a C5F80C22 		str	r2, [r5, #524]
 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* 32-bit identifier or First 32-bit identifier */
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->Instance->sFilterRegister[sFilterConfig->FilterNumber].FR1 = 
 103              		.loc 1 400 0
 104 006e 0668     		ldr	r6, [r0]
 105 0070 4A69     		ldr	r2, [r1, #20]
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 106              		.loc 1 401 0
 107 0072 0F68     		ldr	r7, [r1]
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 108              		.loc 1 402 0
ARM GAS  /tmp/ccofRh1B.s 			page 10


 109 0074 8D88     		ldrh	r5, [r1, #4]
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 110              		.loc 1 401 0
 111 0076 45EA0745 		orr	r5, r5, r7, lsl #16
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 112              		.loc 1 400 0
 113 007a 4832     		adds	r2, r2, #72
 114 007c 46F83250 		str	r5, [r6, r2, lsl #3]
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* 32-bit mask or Second 32-bit identifier */
 405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->Instance->sFilterRegister[sFilterConfig->FilterNumber].FR2 = 
 115              		.loc 1 405 0
 116 0080 0268     		ldr	r2, [r0]
 117 0082 4E69     		ldr	r6, [r1, #20]
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 118              		.loc 1 406 0
 119 0084 8F68     		ldr	r7, [r1, #8]
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 120              		.loc 1 407 0
 121 0086 8D89     		ldrh	r5, [r1, #12]
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 122              		.loc 1 406 0
 123 0088 45EA0745 		orr	r5, r5, r7, lsl #16
 405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 124              		.loc 1 405 0
 125 008c 4836     		adds	r6, r6, #72
 126 008e 02EBC602 		add	r2, r2, r6, lsl #3
 127 0092 5560     		str	r5, [r2, #4]
 128              	.L3:
 408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Filter Mode */
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (sFilterConfig->FilterMode == CAN_FILTERMODE_IDMASK)
 129              		.loc 1 411 0
 130 0094 8A69     		ldr	r2, [r1, #24]
 131 0096 32B9     		cbnz	r2, .L4
 412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /*Id/Mask mode for the filter*/
 414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->FM1R, filternbrbitpos);
 132              		.loc 1 414 0
 133 0098 0568     		ldr	r5, [r0]
 134 009a D5F80422 		ldr	r2, [r5, #516]
 135 009e 2240     		ands	r2, r2, r4
 136 00a0 C5F80422 		str	r2, [r5, #516]
 137 00a4 05E0     		b	.L5
 138              	.L4:
 415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else /* CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdList */
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /*Identifier list mode for the filter*/
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     SET_BIT(hcan->Instance->FM1R, filternbrbitpos);
 139              		.loc 1 419 0
 140 00a6 0568     		ldr	r5, [r0]
 141 00a8 D5F80422 		ldr	r2, [r5, #516]
 142 00ac 1A43     		orrs	r2, r2, r3
 143 00ae C5F80422 		str	r2, [r5, #516]
 144              	.L5:
ARM GAS  /tmp/ccofRh1B.s 			page 11


 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Filter FIFO assignment */
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (sFilterConfig->FilterFIFOAssignment == CAN_FILTER_FIFO0)
 145              		.loc 1 423 0
 146 00b2 0A69     		ldr	r2, [r1, #16]
 147 00b4 32B9     		cbnz	r2, .L6
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* FIFO 0 assignation for the filter */
 426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->FFA1R, filternbrbitpos);
 148              		.loc 1 426 0
 149 00b6 0568     		ldr	r5, [r0]
 150 00b8 D5F81422 		ldr	r2, [r5, #532]
 151 00bc 1440     		ands	r4, r4, r2
 152 00be C5F81442 		str	r4, [r5, #532]
 153 00c2 05E0     		b	.L7
 154              	.L6:
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* FIFO 1 assignation for the filter */
 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     SET_BIT(hcan->Instance->FFA1R, filternbrbitpos);
 155              		.loc 1 431 0
 156 00c4 0468     		ldr	r4, [r0]
 157 00c6 D4F81422 		ldr	r2, [r4, #532]
 158 00ca 1A43     		orrs	r2, r2, r3
 159 00cc C4F81422 		str	r2, [r4, #532]
 160              	.L7:
 432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Filter activation */
 435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (sFilterConfig->FilterActivation == ENABLE)
 161              		.loc 1 435 0
 162 00d0 0A6A     		ldr	r2, [r1, #32]
 163 00d2 012A     		cmp	r2, #1
 164 00d4 05D1     		bne	.L8
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     SET_BIT(hcan->Instance->FA1R, filternbrbitpos);
 165              		.loc 1 437 0
 166 00d6 0168     		ldr	r1, [r0]
 167              	.LVL3:
 168 00d8 D1F81C22 		ldr	r2, [r1, #540]
 169 00dc 1343     		orrs	r3, r3, r2
 170              	.LVL4:
 171 00de C1F81C32 		str	r3, [r1, #540]
 172              	.L8:
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Leave the initialisation mode for the filter */
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   CLEAR_BIT(hcan->Instance->FMR, ((uint32_t)CAN_FMR_FINIT));
 173              		.loc 1 441 0
 174 00e2 0268     		ldr	r2, [r0]
 175 00e4 D2F80032 		ldr	r3, [r2, #512]
 176 00e8 23F00103 		bic	r3, r3, #1
 177 00ec C2F80032 		str	r3, [r2, #512]
 442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
 443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Return function status */
ARM GAS  /tmp/ccofRh1B.s 			page 12


 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   return HAL_OK;
 445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 178              		.loc 1 445 0
 179 00f0 0020     		movs	r0, #0
 180              	.LVL5:
 181 00f2 F0BC     		pop	{r4, r5, r6, r7}
 182              	.LCFI1:
 183              		.cfi_restore 7
 184              		.cfi_restore 6
 185              		.cfi_restore 5
 186              		.cfi_restore 4
 187              		.cfi_def_cfa_offset 0
 188 00f4 7047     		bx	lr
 189              		.cfi_endproc
 190              	.LFE125:
 192 00f6 00BF     		.section	.text.HAL_CAN_MspInit,"ax",%progbits
 193              		.align	2
 194              		.weak	HAL_CAN_MspInit
 195              		.thumb
 196              		.thumb_func
 198              	HAL_CAN_MspInit:
 199              	.LFB127:
 446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
 448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Deinitializes the CANx peripheral registers to their default reset values. 
 449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.  
 451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval HAL status
 452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_DeInit(CAN_HandleTypeDef* hcan)
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check CAN handle */
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if(hcan == NULL)
 457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      return HAL_ERROR;
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
 461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check the parameters */
 462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_ALL_INSTANCE(hcan->Instance));
 463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Change CAN state */
 465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_BUSY;
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
 467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* DeInit the low level hardware */
 468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_MspDeInit(hcan);
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Change CAN state */
 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_RESET;
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Release Lock */
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   __HAL_UNLOCK(hcan);
 475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Return function status */
 477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   return HAL_OK;
 478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
ARM GAS  /tmp/ccofRh1B.s 			page 13


 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Initializes the CAN MSP.
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.  
 484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** __weak void HAL_CAN_MspInit(CAN_HandleTypeDef* hcan)
 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 200              		.loc 1 487 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 0, uses_anonymous_args = 0
 204              		@ link register save eliminated.
 205              	.LVL6:
 206 0000 7047     		bx	lr
 207              		.cfi_endproc
 208              	.LFE127:
 210 0002 00BF     		.section	.text.HAL_CAN_Init,"ax",%progbits
 211              		.align	2
 212              		.global	HAL_CAN_Init
 213              		.thumb
 214              		.thumb_func
 216              	HAL_CAN_Init:
 217              	.LFB124:
 173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t status = CAN_INITSTATUS_FAILED;  /* Default init status */
 218              		.loc 1 173 0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222              	.LVL7:
 178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 223              		.loc 1 178 0
 224 0000 0028     		cmp	r0, #0
 225 0002 00F0BF80 		beq	.L32
 173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t status = CAN_INITSTATUS_FAILED;  /* Default init status */
 226              		.loc 1 173 0
 227 0006 38B5     		push	{r3, r4, r5, lr}
 228              	.LCFI2:
 229              		.cfi_def_cfa_offset 16
 230              		.cfi_offset 3, -16
 231              		.cfi_offset 4, -12
 232              		.cfi_offset 5, -8
 233              		.cfi_offset 14, -4
 234 0008 0446     		mov	r4, r0
 197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 235              		.loc 1 197 0
 236 000a 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 237 000e 13F0FF0F 		tst	r3, #255
 238 0012 04D1     		bne	.L13
 200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Init the low level hardware */
 239              		.loc 1 200 0
 240 0014 0023     		movs	r3, #0
 241 0016 80F83C30 		strb	r3, [r0, #60]
 202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 242              		.loc 1 202 0
 243 001a FFF7FEFF 		bl	HAL_CAN_MspInit
 244              	.LVL8:
 245              	.L13:
ARM GAS  /tmp/ccofRh1B.s 			page 14


 206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
 246              		.loc 1 206 0
 247 001e 0223     		movs	r3, #2
 248 0020 84F83D30 		strb	r3, [r4, #61]
 209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 249              		.loc 1 209 0
 250 0024 2268     		ldr	r2, [r4]
 251 0026 1368     		ldr	r3, [r2]
 252 0028 23F00203 		bic	r3, r3, #2
 253 002c 1360     		str	r3, [r2]
 212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 254              		.loc 1 212 0
 255 002e 2268     		ldr	r2, [r4]
 256 0030 1368     		ldr	r3, [r2]
 257 0032 43F00103 		orr	r3, r3, #1
 258 0036 1360     		str	r3, [r2]
 215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
 259              		.loc 1 215 0
 260 0038 FFF7FEFF 		bl	HAL_GetTick
 261              	.LVL9:
 262 003c 0546     		mov	r5, r0
 263              	.LVL10:
 218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 264              		.loc 1 218 0
 265 003e 0BE0     		b	.L14
 266              	.LVL11:
 267              	.L15:
 220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 268              		.loc 1 220 0
 269 0040 FFF7FEFF 		bl	HAL_GetTick
 270              	.LVL12:
 271 0044 401B     		subs	r0, r0, r5
 272 0046 0A28     		cmp	r0, #10
 273 0048 06D9     		bls	.L14
 222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Process unlocked */
 274              		.loc 1 222 0
 275 004a 0320     		movs	r0, #3
 276 004c 84F83D00 		strb	r0, [r4, #61]
 224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       return HAL_TIMEOUT;
 277              		.loc 1 224 0
 278 0050 0023     		movs	r3, #0
 279 0052 84F83C30 		strb	r3, [r4, #60]
 225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 280              		.loc 1 225 0
 281 0056 38BD     		pop	{r3, r4, r5, pc}
 282              	.LVL13:
 283              	.L14:
 218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 284              		.loc 1 218 0
 285 0058 2368     		ldr	r3, [r4]
 286 005a 5A68     		ldr	r2, [r3, #4]
 287 005c 12F0010F 		tst	r2, #1
 288 0060 EED0     		beq	.L15
 230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 289              		.loc 1 230 0
 290 0062 5A68     		ldr	r2, [r3, #4]
 291 0064 12F0010F 		tst	r2, #1
ARM GAS  /tmp/ccofRh1B.s 			page 15


 292 0068 7DD0     		beq	.L33
 233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 293              		.loc 1 233 0
 294 006a A269     		ldr	r2, [r4, #24]
 295 006c 012A     		cmp	r2, #1
 296 006e 04D1     		bne	.L17
 235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 297              		.loc 1 235 0
 298 0070 1A68     		ldr	r2, [r3]
 299 0072 42F08002 		orr	r2, r2, #128
 300 0076 1A60     		str	r2, [r3]
 301 0078 03E0     		b	.L18
 302              	.L17:
 239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 303              		.loc 1 239 0
 304 007a 1A68     		ldr	r2, [r3]
 305 007c 22F08002 		bic	r2, r2, #128
 306 0080 1A60     		str	r2, [r3]
 307              	.L18:
 243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 308              		.loc 1 243 0
 309 0082 E369     		ldr	r3, [r4, #28]
 310 0084 012B     		cmp	r3, #1
 311 0086 05D1     		bne	.L19
 245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 312              		.loc 1 245 0
 313 0088 2268     		ldr	r2, [r4]
 314 008a 1368     		ldr	r3, [r2]
 315 008c 43F04003 		orr	r3, r3, #64
 316 0090 1360     		str	r3, [r2]
 317 0092 04E0     		b	.L20
 318              	.L19:
 249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 319              		.loc 1 249 0
 320 0094 2268     		ldr	r2, [r4]
 321 0096 1368     		ldr	r3, [r2]
 322 0098 23F04003 		bic	r3, r3, #64
 323 009c 1360     		str	r3, [r2]
 324              	.L20:
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 325              		.loc 1 253 0
 326 009e 236A     		ldr	r3, [r4, #32]
 327 00a0 012B     		cmp	r3, #1
 328 00a2 05D1     		bne	.L21
 255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 329              		.loc 1 255 0
 330 00a4 2268     		ldr	r2, [r4]
 331 00a6 1368     		ldr	r3, [r2]
 332 00a8 43F02003 		orr	r3, r3, #32
 333 00ac 1360     		str	r3, [r2]
 334 00ae 04E0     		b	.L22
 335              	.L21:
 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 336              		.loc 1 259 0
 337 00b0 2268     		ldr	r2, [r4]
 338 00b2 1368     		ldr	r3, [r2]
 339 00b4 23F02003 		bic	r3, r3, #32
ARM GAS  /tmp/ccofRh1B.s 			page 16


 340 00b8 1360     		str	r3, [r2]
 341              	.L22:
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 342              		.loc 1 263 0
 343 00ba 636A     		ldr	r3, [r4, #36]
 344 00bc 012B     		cmp	r3, #1
 345 00be 05D1     		bne	.L23
 265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 346              		.loc 1 265 0
 347 00c0 2268     		ldr	r2, [r4]
 348 00c2 1368     		ldr	r3, [r2]
 349 00c4 43F01003 		orr	r3, r3, #16
 350 00c8 1360     		str	r3, [r2]
 351 00ca 04E0     		b	.L24
 352              	.L23:
 269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 353              		.loc 1 269 0
 354 00cc 2268     		ldr	r2, [r4]
 355 00ce 1368     		ldr	r3, [r2]
 356 00d0 23F01003 		bic	r3, r3, #16
 357 00d4 1360     		str	r3, [r2]
 358              	.L24:
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 359              		.loc 1 273 0
 360 00d6 A36A     		ldr	r3, [r4, #40]
 361 00d8 012B     		cmp	r3, #1
 362 00da 05D1     		bne	.L25
 275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 363              		.loc 1 275 0
 364 00dc 2268     		ldr	r2, [r4]
 365 00de 1368     		ldr	r3, [r2]
 366 00e0 43F00803 		orr	r3, r3, #8
 367 00e4 1360     		str	r3, [r2]
 368 00e6 04E0     		b	.L26
 369              	.L25:
 279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 370              		.loc 1 279 0
 371 00e8 2268     		ldr	r2, [r4]
 372 00ea 1368     		ldr	r3, [r2]
 373 00ec 23F00803 		bic	r3, r3, #8
 374 00f0 1360     		str	r3, [r2]
 375              	.L26:
 283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 376              		.loc 1 283 0
 377 00f2 E36A     		ldr	r3, [r4, #44]
 378 00f4 012B     		cmp	r3, #1
 379 00f6 05D1     		bne	.L27
 285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 380              		.loc 1 285 0
 381 00f8 2268     		ldr	r2, [r4]
 382 00fa 1368     		ldr	r3, [r2]
 383 00fc 43F00403 		orr	r3, r3, #4
 384 0100 1360     		str	r3, [r2]
 385 0102 04E0     		b	.L28
 386              	.L27:
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 387              		.loc 1 289 0
ARM GAS  /tmp/ccofRh1B.s 			page 17


 388 0104 2268     		ldr	r2, [r4]
 389 0106 1368     		ldr	r3, [r2]
 390 0108 23F00403 		bic	r3, r3, #4
 391 010c 1360     		str	r3, [r2]
 392              	.L28:
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                               hcan->Init.SJW            |
 393              		.loc 1 293 0
 394 010e 2168     		ldr	r1, [r4]
 395 0110 A268     		ldr	r2, [r4, #8]
 396 0112 E368     		ldr	r3, [r4, #12]
 397 0114 1A43     		orrs	r2, r2, r3
 398 0116 2369     		ldr	r3, [r4, #16]
 399 0118 1A43     		orrs	r2, r2, r3
 400 011a 6369     		ldr	r3, [r4, #20]
 401 011c 1A43     		orrs	r2, r2, r3
 402 011e 6368     		ldr	r3, [r4, #4]
 403 0120 013B     		subs	r3, r3, #1
 404 0122 1343     		orrs	r3, r3, r2
 405 0124 CB61     		str	r3, [r1, #28]
 300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 406              		.loc 1 300 0
 407 0126 2268     		ldr	r2, [r4]
 408 0128 1368     		ldr	r3, [r2]
 409 012a 23F00103 		bic	r3, r3, #1
 410 012e 1360     		str	r3, [r2]
 303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****    
 411              		.loc 1 303 0
 412 0130 FFF7FEFF 		bl	HAL_GetTick
 413              	.LVL14:
 414 0134 0546     		mov	r5, r0
 415              	.LVL15:
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 416              		.loc 1 306 0
 417 0136 0BE0     		b	.L29
 418              	.LVL16:
 419              	.L30:
 308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
 420              		.loc 1 308 0
 421 0138 FFF7FEFF 		bl	HAL_GetTick
 422              	.LVL17:
 423 013c 401B     		subs	r0, r0, r5
 424 013e 0A28     		cmp	r0, #10
 425 0140 06D9     		bls	.L29
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 426              		.loc 1 310 0
 427 0142 0320     		movs	r0, #3
 428 0144 84F83D00 		strb	r0, [r4, #61]
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 429              		.loc 1 313 0
 430 0148 0023     		movs	r3, #0
 431 014a 84F83C30 		strb	r3, [r4, #60]
 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
 432              		.loc 1 315 0
 433 014e 38BD     		pop	{r3, r4, r5, pc}
 434              	.LVL18:
 435              	.L29:
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
ARM GAS  /tmp/ccofRh1B.s 			page 18


 436              		.loc 1 306 0
 437 0150 2368     		ldr	r3, [r4]
 438 0152 5A68     		ldr	r2, [r3, #4]
 439 0154 12F0010F 		tst	r2, #1
 440 0158 EED1     		bne	.L30
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 441              		.loc 1 320 0
 442 015a 5B68     		ldr	r3, [r3, #4]
 443 015c 13F0010F 		tst	r3, #1
 444 0160 03D0     		beq	.L34
 174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t tickstart = 0U;
 445              		.loc 1 174 0
 446 0162 0023     		movs	r3, #0
 447 0164 02E0     		b	.L16
 448              	.L33:
 449 0166 0023     		movs	r3, #0
 450 0168 00E0     		b	.L16
 451              	.L34:
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 452              		.loc 1 322 0
 453 016a 0123     		movs	r3, #1
 454              	.L16:
 455              	.LVL19:
 326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 456              		.loc 1 326 0
 457 016c 2BB1     		cbz	r3, .L31
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     
 458              		.loc 1 329 0
 459 016e 0020     		movs	r0, #0
 460 0170 2064     		str	r0, [r4, #64]
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
 461              		.loc 1 332 0
 462 0172 0123     		movs	r3, #1
 463              	.LVL20:
 464 0174 84F83D30 		strb	r3, [r4, #61]
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 465              		.loc 1 335 0
 466 0178 38BD     		pop	{r3, r4, r5, pc}
 467              	.LVL21:
 468              	.L31:
 340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 469              		.loc 1 340 0
 470 017a 0423     		movs	r3, #4
 471              	.LVL22:
 472 017c 84F83D30 		strb	r3, [r4, #61]
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 473              		.loc 1 343 0
 474 0180 0120     		movs	r0, #1
 475 0182 38BD     		pop	{r3, r4, r5, pc}
 476              	.LVL23:
 477              	.L32:
 478              	.LCFI3:
 479              		.cfi_def_cfa_offset 0
 480              		.cfi_restore 3
 481              		.cfi_restore 4
 482              		.cfi_restore 5
 483              		.cfi_restore 14
ARM GAS  /tmp/ccofRh1B.s 			page 19


 180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 484              		.loc 1 180 0
 485 0184 0120     		movs	r0, #1
 486              	.LVL24:
 487 0186 7047     		bx	lr
 488              		.cfi_endproc
 489              	.LFE124:
 491              		.section	.text.HAL_CAN_MspDeInit,"ax",%progbits
 492              		.align	2
 493              		.weak	HAL_CAN_MspDeInit
 494              		.thumb
 495              		.thumb_func
 497              	HAL_CAN_MspDeInit:
 498              	.LFB128:
 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   UNUSED(hcan);
 490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             the HAL_CAN_MspInit could be implemented in the user file
 493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****    */ 
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
 497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  DeInitializes the CAN MSP.
 498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.  
 500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
 501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** __weak void HAL_CAN_MspDeInit(CAN_HandleTypeDef* hcan)
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 499              		.loc 1 503 0
 500              		.cfi_startproc
 501              		@ args = 0, pretend = 0, frame = 0
 502              		@ frame_needed = 0, uses_anonymous_args = 0
 503              		@ link register save eliminated.
 504              	.LVL25:
 505 0000 7047     		bx	lr
 506              		.cfi_endproc
 507              	.LFE128:
 509 0002 00BF     		.section	.text.HAL_CAN_DeInit,"ax",%progbits
 510              		.align	2
 511              		.global	HAL_CAN_DeInit
 512              		.thumb
 513              		.thumb_func
 515              	HAL_CAN_DeInit:
 516              	.LFB126:
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check CAN handle */
 517              		.loc 1 454 0
 518              		.cfi_startproc
 519              		@ args = 0, pretend = 0, frame = 0
 520              		@ frame_needed = 0, uses_anonymous_args = 0
 521              	.LVL26:
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 522              		.loc 1 456 0
 523 0000 60B1     		cbz	r0, .L40
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check CAN handle */
 524              		.loc 1 454 0
ARM GAS  /tmp/ccofRh1B.s 			page 20


 525 0002 10B5     		push	{r4, lr}
 526              	.LCFI4:
 527              		.cfi_def_cfa_offset 8
 528              		.cfi_offset 4, -8
 529              		.cfi_offset 14, -4
 530 0004 0446     		mov	r4, r0
 465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
 531              		.loc 1 465 0
 532 0006 0223     		movs	r3, #2
 533 0008 80F83D30 		strb	r3, [r0, #61]
 468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
 534              		.loc 1 468 0
 535 000c FFF7FEFF 		bl	HAL_CAN_MspDeInit
 536              	.LVL27:
 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 537              		.loc 1 471 0
 538 0010 0020     		movs	r0, #0
 539 0012 84F83D00 		strb	r0, [r4, #61]
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 540              		.loc 1 474 0
 541 0016 84F83C00 		strb	r0, [r4, #60]
 477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 542              		.loc 1 477 0
 543 001a 10BD     		pop	{r4, pc}
 544              	.LVL28:
 545              	.L40:
 546              	.LCFI5:
 547              		.cfi_def_cfa_offset 0
 548              		.cfi_restore 4
 549              		.cfi_restore 14
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 550              		.loc 1 458 0
 551 001c 0120     		movs	r0, #1
 552              	.LVL29:
 553 001e 7047     		bx	lr
 554              		.cfi_endproc
 555              	.LFE126:
 557              		.section	.text.HAL_CAN_Transmit,"ax",%progbits
 558              		.align	2
 559              		.global	HAL_CAN_Transmit
 560              		.thumb
 561              		.thumb_func
 563              	HAL_CAN_Transmit:
 564              	.LFB129:
 504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   UNUSED(hcan);
 506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             the HAL_CAN_MspDeInit could be implemented in the user file
 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****    */ 
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @}
 514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group2 Input and Output operation functions
ARM GAS  /tmp/ccofRh1B.s 			page 21


 517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****  *  @brief    IO operation functions 
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****  *
 519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** @verbatim   
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ==============================================================================
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                       ##### IO operation functions #####
 522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ==============================================================================
 523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     [..]  This section provides functions allowing to:
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) Transmit a CAN frame message.
 525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) Receive a CAN frame message.
 526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) Enter CAN peripheral in sleep mode. 
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) Wake up the CAN peripheral from sleep mode.
 528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                
 529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** @endverbatim
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @{
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
 534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Initiates and transmits a CAN frame message.
 535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.  
 537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  Timeout Timeout duration.
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval HAL status
 539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Transmit(CAN_HandleTypeDef* hcan, uint32_t Timeout)
 541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 565              		.loc 1 541 0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 0, uses_anonymous_args = 0
 569              	.LVL30:
 570 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 571              	.LCFI6:
 572              		.cfi_def_cfa_offset 24
 573              		.cfi_offset 3, -24
 574              		.cfi_offset 4, -20
 575              		.cfi_offset 5, -16
 576              		.cfi_offset 6, -12
 577              		.cfi_offset 7, -8
 578              		.cfi_offset 14, -4
 579              	.LVL31:
 542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t transmitmailbox = CAN_TXSTATUS_NOMAILBOX;
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t tickstart = 0U;
 544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check the parameters */
 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_IDTYPE(hcan->pTxMsg->IDE));
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_RTR(hcan->pTxMsg->RTR));
 548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_DLC(hcan->pTxMsg->DLC));
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if(((hcan->Instance->TSR&CAN_TSR_TME0) == CAN_TSR_TME0) || \
 580              		.loc 1 550 0
 581 0002 0368     		ldr	r3, [r0]
 582 0004 9A68     		ldr	r2, [r3, #8]
 583 0006 12F0806F 		tst	r2, #67108864
 584 000a 08D1     		bne	.L44
 551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME1) == CAN_TSR_TME1) || \
 585              		.loc 1 551 0 discriminator 1
 586 000c 9A68     		ldr	r2, [r3, #8]
ARM GAS  /tmp/ccofRh1B.s 			page 22


 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME1) == CAN_TSR_TME1) || \
 587              		.loc 1 550 0 discriminator 1
 588 000e 12F0006F 		tst	r2, #134217728
 589 0012 04D1     		bne	.L44
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME2) == CAN_TSR_TME2))
 590              		.loc 1 552 0
 591 0014 9A68     		ldr	r2, [r3, #8]
 551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME1) == CAN_TSR_TME1) || \
 592              		.loc 1 551 0
 593 0016 12F0805F 		tst	r2, #268435456
 594 001a 00F0F180 		beq	.L45
 595              	.L44:
 553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Process locked */
 555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     __HAL_LOCK(hcan);
 596              		.loc 1 555 0
 597 001e 90F83C20 		ldrb	r2, [r0, #60]	@ zero_extendqisi2
 598 0022 012A     		cmp	r2, #1
 599 0024 00F0F180 		beq	.L71
 600              		.loc 1 555 0 is_stmt 0 discriminator 2
 601 0028 0122     		movs	r2, #1
 602 002a 80F83C20 		strb	r2, [r0, #60]
 556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Change CAN state */
 558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     switch(hcan->State)
 603              		.loc 1 558 0 is_stmt 1 discriminator 2
 604 002e 90F83D20 		ldrb	r2, [r0, #61]	@ zero_extendqisi2
 605 0032 D2B2     		uxtb	r2, r2
 606 0034 322A     		cmp	r2, #50
 607 0036 07D0     		beq	.L48
 608 0038 622A     		cmp	r2, #98
 609 003a 09D0     		beq	.L49
 610 003c 222A     		cmp	r2, #34
 611 003e 0BD1     		bne	.L74
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0):
 561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX_RX0;
 612              		.loc 1 561 0
 613 0040 4222     		movs	r2, #66
 614 0042 80F83D20 		strb	r2, [r0, #61]
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           break;
 615              		.loc 1 562 0
 616 0046 0AE0     		b	.L51
 617              	.L48:
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX1):
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX_RX1;
 618              		.loc 1 564 0
 619 0048 5222     		movs	r2, #82
 620 004a 80F83D20 		strb	r2, [r0, #61]
 565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           break;
 621              		.loc 1 565 0
 622 004e 06E0     		b	.L51
 623              	.L49:
 566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
 567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX_RX0_RX1;
 624              		.loc 1 567 0
 625 0050 7222     		movs	r2, #114
ARM GAS  /tmp/ccofRh1B.s 			page 23


 626 0052 80F83D20 		strb	r2, [r0, #61]
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           break;
 627              		.loc 1 568 0
 628 0056 02E0     		b	.L51
 629              	.L74:
 569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX;
 630              		.loc 1 570 0
 631 0058 1222     		movs	r2, #18
 632 005a 80F83D20 		strb	r2, [r0, #61]
 633              	.L51:
 571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           break;
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Select one empty transmit mailbox */
 575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if (HAL_IS_BIT_SET(hcan->Instance->TSR, CAN_TSR_TME0))
 634              		.loc 1 575 0
 635 005e 9A68     		ldr	r2, [r3, #8]
 636 0060 12F0806F 		tst	r2, #67108864
 637 0064 05D1     		bne	.L72
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       transmitmailbox = CAN_TXMAILBOX_0;
 578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     else if (HAL_IS_BIT_SET(hcan->Instance->TSR, CAN_TSR_TME1))
 638              		.loc 1 579 0
 639 0066 9A68     		ldr	r2, [r3, #8]
 640 0068 12F0006F 		tst	r2, #134217728
 641 006c 03D0     		beq	.L73
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       transmitmailbox = CAN_TXMAILBOX_1;
 642              		.loc 1 581 0
 643 006e 0125     		movs	r5, #1
 644 0070 02E0     		b	.L52
 645              	.L72:
 577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 646              		.loc 1 577 0
 647 0072 0025     		movs	r5, #0
 648 0074 00E0     		b	.L52
 649              	.L73:
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     else
 584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       transmitmailbox = CAN_TXMAILBOX_2;
 650              		.loc 1 585 0
 651 0076 0225     		movs	r5, #2
 652              	.L52:
 653              	.LVL32:
 586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Set up the Id */
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TIR &= CAN_TI0R_TXRQ;
 654              		.loc 1 589 0
 655 0078 05F11802 		add	r2, r5, #24
 656 007c 1201     		lsls	r2, r2, #4
 657 007e 9C58     		ldr	r4, [r3, r2]
 658 0080 04F00104 		and	r4, r4, #1
 659 0084 9C50     		str	r4, [r3, r2]
ARM GAS  /tmp/ccofRh1B.s 			page 24


 590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if (hcan->pTxMsg->IDE == CAN_ID_STD)
 660              		.loc 1 590 0
 661 0086 036B     		ldr	r3, [r0, #48]
 662 0088 9A68     		ldr	r2, [r3, #8]
 663 008a 62B9     		cbnz	r2, .L53
 591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       assert_param(IS_CAN_STDID(hcan->pTxMsg->StdId));  
 593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       hcan->Instance->sTxMailBox[transmitmailbox].TIR |= ((hcan->pTxMsg->StdId << CAN_TI0R_STID_Pos
 664              		.loc 1 593 0
 665 008c 0668     		ldr	r6, [r0]
 666 008e 05F11804 		add	r4, r5, #24
 667 0092 2401     		lsls	r4, r4, #4
 668 0094 3759     		ldr	r7, [r6, r4]
 669 0096 D3F800E0 		ldr	lr, [r3]
 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                            hcan->pTxMsg->RTR);
 670              		.loc 1 594 0
 671 009a DA68     		ldr	r2, [r3, #12]
 593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                            hcan->pTxMsg->RTR);
 672              		.loc 1 593 0
 673 009c 42EA4E53 		orr	r3, r2, lr, lsl #21
 674 00a0 3B43     		orrs	r3, r3, r7
 675 00a2 3351     		str	r3, [r6, r4]
 676 00a4 0EE0     		b	.L54
 677              	.L53:
 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     else
 597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       assert_param(IS_CAN_EXTID(hcan->pTxMsg->ExtId));
 599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       hcan->Instance->sTxMailBox[transmitmailbox].TIR |= ((hcan->pTxMsg->ExtId << CAN_TI0R_EXID_Pos
 678              		.loc 1 599 0
 679 00a6 D0F800E0 		ldr	lr, [r0]
 680 00aa 05F11804 		add	r4, r5, #24
 681 00ae 2401     		lsls	r4, r4, #4
 682 00b0 5EF80470 		ldr	r7, [lr, r4]
 683 00b4 5E68     		ldr	r6, [r3, #4]
 684 00b6 42EAC602 		orr	r2, r2, r6, lsl #3
 600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                            hcan->pTxMsg->IDE | \
 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                            hcan->pTxMsg->RTR);
 685              		.loc 1 601 0
 686 00ba DB68     		ldr	r3, [r3, #12]
 600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                            hcan->pTxMsg->IDE | \
 687              		.loc 1 600 0
 688 00bc 1A43     		orrs	r2, r2, r3
 599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                            hcan->pTxMsg->IDE | \
 689              		.loc 1 599 0
 690 00be 3A43     		orrs	r2, r2, r7
 691 00c0 4EF80420 		str	r2, [lr, r4]
 692              	.L54:
 693 00c4 0E46     		mov	r6, r1
 694 00c6 0446     		mov	r4, r0
 602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     
 604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Set up the DLC */
 605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->pTxMsg->DLC &= (uint8_t)0x0000000FU;
 695              		.loc 1 605 0
 696 00c8 026B     		ldr	r2, [r0, #48]
 697 00ca 1369     		ldr	r3, [r2, #16]
ARM GAS  /tmp/ccofRh1B.s 			page 25


 698 00cc 03F00F03 		and	r3, r3, #15
 699 00d0 1361     		str	r3, [r2, #16]
 606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TDTR &= 0xFFFFFFF0U;
 700              		.loc 1 606 0
 701 00d2 0368     		ldr	r3, [r0]
 702 00d4 05F11801 		add	r1, r5, #24
 703              	.LVL33:
 704 00d8 0901     		lsls	r1, r1, #4
 705 00da 0B44     		add	r3, r3, r1
 706 00dc 5A68     		ldr	r2, [r3, #4]
 707 00de 22F00F02 		bic	r2, r2, #15
 708 00e2 5A60     		str	r2, [r3, #4]
 607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TDTR |= hcan->pTxMsg->DLC;
 709              		.loc 1 607 0
 710 00e4 0368     		ldr	r3, [r0]
 711 00e6 0B44     		add	r3, r3, r1
 712 00e8 5868     		ldr	r0, [r3, #4]
 713              	.LVL34:
 714 00ea 226B     		ldr	r2, [r4, #48]
 715 00ec 1269     		ldr	r2, [r2, #16]
 716 00ee 0243     		orrs	r2, r2, r0
 717 00f0 5A60     		str	r2, [r3, #4]
 608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Set up the data field */
 610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDLR, ((uint32_t)hcan->pTxMsg->Data[3] <<
 718              		.loc 1 610 0
 719 00f2 2268     		ldr	r2, [r4]
 720 00f4 206B     		ldr	r0, [r4, #48]
 721 00f6 C77D     		ldrb	r7, [r0, #23]	@ zero_extendqisi2
 722 00f8 837D     		ldrb	r3, [r0, #22]	@ zero_extendqisi2
 723 00fa 1B04     		lsls	r3, r3, #16
 724 00fc 43EA0763 		orr	r3, r3, r7, lsl #24
 725 0100 477D     		ldrb	r7, [r0, #21]	@ zero_extendqisi2
 726 0102 43EA0723 		orr	r3, r3, r7, lsl #8
 727 0106 007D     		ldrb	r0, [r0, #20]	@ zero_extendqisi2
 728 0108 0343     		orrs	r3, r3, r0
 729 010a 2801     		lsls	r0, r5, #4
 730 010c 0244     		add	r2, r2, r0
 731 010e C2F88831 		str	r3, [r2, #392]
 611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[2] <<
 612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[1] <<
 613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[0] <<
 614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDHR, ((uint32_t)hcan->pTxMsg->Data[7] <<
 732              		.loc 1 614 0
 733 0112 2268     		ldr	r2, [r4]
 734 0114 276B     		ldr	r7, [r4, #48]
 735 0116 97F81BE0 		ldrb	lr, [r7, #27]	@ zero_extendqisi2
 736 011a BB7E     		ldrb	r3, [r7, #26]	@ zero_extendqisi2
 737 011c 1B04     		lsls	r3, r3, #16
 738 011e 43EA0E63 		orr	r3, r3, lr, lsl #24
 739 0122 97F819E0 		ldrb	lr, [r7, #25]	@ zero_extendqisi2
 740 0126 43EA0E23 		orr	r3, r3, lr, lsl #8
 741 012a 3F7E     		ldrb	r7, [r7, #24]	@ zero_extendqisi2
 742 012c 3B43     		orrs	r3, r3, r7
 743 012e 0244     		add	r2, r2, r0
 744 0130 C2F88C31 		str	r3, [r2, #396]
 615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[6] <<
ARM GAS  /tmp/ccofRh1B.s 			page 26


 616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[5] <<
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[4] <<
 618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Request transmission */
 620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     SET_BIT(hcan->Instance->sTxMailBox[transmitmailbox].TIR, CAN_TI0R_TXRQ);
 745              		.loc 1 620 0
 746 0134 2268     		ldr	r2, [r4]
 747 0136 5358     		ldr	r3, [r2, r1]
 748 0138 43F00103 		orr	r3, r3, #1
 749 013c 5350     		str	r3, [r2, r1]
 621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
 622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Get tick */
 623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     tickstart = HAL_GetTick();   
 750              		.loc 1 623 0
 751 013e FFF7FEFF 		bl	HAL_GetTick
 752              	.LVL35:
 753 0142 0746     		mov	r7, r0
 754              	.LVL36:
 624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
 625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Check End of transmission flag */
 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     while(!(__HAL_CAN_TRANSMIT_STATUS(hcan, transmitmailbox)))
 755              		.loc 1 626 0
 756 0144 24E0     		b	.L56
 757              	.LVL37:
 758              	.L65:
 627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Check for the Timeout */
 629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       if(Timeout != HAL_MAX_DELAY)
 759              		.loc 1 629 0
 760 0146 B6F1FF3F 		cmp	r6, #-1
 761 014a 21D0     		beq	.L56
 630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
 631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         if((Timeout == 0U) || ((HAL_GetTick()-tickstart) > Timeout))
 762              		.loc 1 631 0
 763 014c 26B1     		cbz	r6, .L57
 764              		.loc 1 631 0 is_stmt 0 discriminator 1
 765 014e FFF7FEFF 		bl	HAL_GetTick
 766              	.LVL38:
 767 0152 C01B     		subs	r0, r0, r7
 768 0154 8642     		cmp	r6, r0
 769 0156 1BD2     		bcs	.L56
 770              	.L57:
 632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         {
 633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_TIMEOUT;
 771              		.loc 1 633 0 is_stmt 1
 772 0158 0323     		movs	r3, #3
 773 015a 84F83D30 		strb	r3, [r4, #61]
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           /* Cancel transmission */
 636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           __HAL_CAN_CANCEL_TRANSMIT(hcan, transmitmailbox);
 774              		.loc 1 636 0
 775 015e 2DB9     		cbnz	r5, .L58
 776              		.loc 1 636 0 is_stmt 0 discriminator 1
 777 0160 2268     		ldr	r2, [r4]
 778 0162 9368     		ldr	r3, [r2, #8]
 779 0164 43F08003 		orr	r3, r3, #128
 780 0168 9360     		str	r3, [r2, #8]
ARM GAS  /tmp/ccofRh1B.s 			page 27


 781 016a 0CE0     		b	.L59
 782              	.L58:
 783              		.loc 1 636 0 discriminator 2
 784 016c 012D     		cmp	r5, #1
 785 016e 05D1     		bne	.L60
 786              		.loc 1 636 0 discriminator 3
 787 0170 2268     		ldr	r2, [r4]
 788 0172 9368     		ldr	r3, [r2, #8]
 789 0174 43F40043 		orr	r3, r3, #32768
 790 0178 9360     		str	r3, [r2, #8]
 791 017a 04E0     		b	.L59
 792              	.L60:
 793              		.loc 1 636 0 discriminator 4
 794 017c 2268     		ldr	r2, [r4]
 795 017e 9368     		ldr	r3, [r2, #8]
 796 0180 43F40003 		orr	r3, r3, #8388608
 797 0184 9360     		str	r3, [r2, #8]
 798              	.L59:
 637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           /* Process unlocked */
 639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           __HAL_UNLOCK(hcan);
 799              		.loc 1 639 0 is_stmt 1
 800 0186 0023     		movs	r3, #0
 801 0188 84F83C30 		strb	r3, [r4, #60]
 640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           //hcan->Instance->TSR |= (((uint32_t) 1 << (7 + transmitmailbox * 8))); // TODO: try to s
 642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           return HAL_TIMEOUT;
 802              		.loc 1 643 0
 803 018c 0320     		movs	r0, #3
 804 018e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 805              	.LVL39:
 806              	.L56:
 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 807              		.loc 1 626 0
 808 0190 3DB9     		cbnz	r5, .L62
 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 809              		.loc 1 626 0 is_stmt 0 discriminator 1
 810 0192 2368     		ldr	r3, [r4]
 811 0194 9A68     		ldr	r2, [r3, #8]
 812 0196 1E4B     		ldr	r3, .L77
 813 0198 9343     		bics	r3, r3, r2
 814 019a 14BF     		ite	ne
 815 019c 0123     		movne	r3, #1
 816 019e 0023     		moveq	r3, #0
 817 01a0 10E0     		b	.L63
 818              	.L62:
 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 819              		.loc 1 626 0 discriminator 2
 820 01a2 012D     		cmp	r5, #1
 821 01a4 07D1     		bne	.L64
 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 822              		.loc 1 626 0 discriminator 4
 823 01a6 2368     		ldr	r3, [r4]
 824 01a8 9A68     		ldr	r2, [r3, #8]
 825 01aa 1A4B     		ldr	r3, .L77+4
 826 01ac 9343     		bics	r3, r3, r2
ARM GAS  /tmp/ccofRh1B.s 			page 28


 827 01ae 14BF     		ite	ne
 828 01b0 0123     		movne	r3, #1
 829 01b2 0023     		moveq	r3, #0
 830 01b4 06E0     		b	.L63
 831              	.L64:
 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 832              		.loc 1 626 0 discriminator 5
 833 01b6 2368     		ldr	r3, [r4]
 834 01b8 9A68     		ldr	r2, [r3, #8]
 835 01ba 174B     		ldr	r3, .L77+8
 836 01bc 9343     		bics	r3, r3, r2
 837 01be 14BF     		ite	ne
 838 01c0 0123     		movne	r3, #1
 839 01c2 0023     		moveq	r3, #0
 840              	.L63:
 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 841              		.loc 1 626 0 discriminator 8
 842 01c4 002B     		cmp	r3, #0
 843 01c6 BED1     		bne	.L65
 644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         }
 645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
 646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Change CAN state */
 649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     switch(hcan->State)
 844              		.loc 1 649 0 is_stmt 1
 845 01c8 94F83D30 		ldrb	r3, [r4, #61]	@ zero_extendqisi2
 846 01cc DBB2     		uxtb	r3, r3
 847 01ce 522B     		cmp	r3, #82
 848 01d0 07D0     		beq	.L67
 849 01d2 722B     		cmp	r3, #114
 850 01d4 09D0     		beq	.L68
 851 01d6 422B     		cmp	r3, #66
 852 01d8 0BD1     		bne	.L75
 650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0):
 652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_RX0;
 853              		.loc 1 652 0
 854 01da 2223     		movs	r3, #34
 855 01dc 84F83D30 		strb	r3, [r4, #61]
 653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           break;
 856              		.loc 1 653 0
 857 01e0 0AE0     		b	.L70
 858              	.L67:
 654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX1):
 655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_RX1;
 859              		.loc 1 655 0
 860 01e2 3223     		movs	r3, #50
 861 01e4 84F83D30 		strb	r3, [r4, #61]
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           break;
 862              		.loc 1 656 0
 863 01e8 06E0     		b	.L70
 864              	.L68:
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
 658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_RX0_RX1;
 865              		.loc 1 658 0
 866 01ea 6223     		movs	r3, #98
ARM GAS  /tmp/ccofRh1B.s 			page 29


 867 01ec 84F83D30 		strb	r3, [r4, #61]
 659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           break;
 868              		.loc 1 659 0
 869 01f0 02E0     		b	.L70
 870              	.L75:
 660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_TX */
 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_READY;
 871              		.loc 1 661 0
 872 01f2 0123     		movs	r3, #1
 873 01f4 84F83D30 		strb	r3, [r4, #61]
 874              	.L70:
 662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           break;
 663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Process unlocked */
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     __HAL_UNLOCK(hcan);
 875              		.loc 1 666 0
 876 01f8 0020     		movs	r0, #0
 877 01fa 84F83C00 		strb	r0, [r4, #60]
 667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     
 668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Return function status */
 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_OK;
 878              		.loc 1 669 0
 879 01fe F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 880              	.LVL40:
 881              	.L45:
 670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
 672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Change CAN state */
 674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_ERROR; 
 882              		.loc 1 674 0
 883 0200 0423     		movs	r3, #4
 884 0202 80F83D30 		strb	r3, [r0, #61]
 675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Return function status */
 677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_ERROR;
 885              		.loc 1 677 0
 886 0206 0120     		movs	r0, #1
 887              	.LVL41:
 888 0208 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 889              	.LVL42:
 890              	.L71:
 555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 891              		.loc 1 555 0
 892 020a 0220     		movs	r0, #2
 893              	.LVL43:
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 894              		.loc 1 679 0
 895 020c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 896              	.L78:
 897 020e 00BF     		.align	2
 898              	.L77:
 899 0210 01000004 		.word	67108865
 900 0214 00010008 		.word	134217984
 901 0218 00000110 		.word	268500992
ARM GAS  /tmp/ccofRh1B.s 			page 30


 902              		.cfi_endproc
 903              	.LFE129:
 905              		.section	.text.HAL_CAN_Transmit_IT,"ax",%progbits
 906              		.align	2
 907              		.global	HAL_CAN_Transmit_IT
 908              		.thumb
 909              		.thumb_func
 911              	HAL_CAN_Transmit_IT:
 912              	.LFB130:
 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
 682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Initiates and transmits a CAN frame message.
 683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.  
 685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval HAL status
 686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Transmit_IT(CAN_HandleTypeDef* hcan)
 688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 913              		.loc 1 688 0
 914              		.cfi_startproc
 915              		@ args = 0, pretend = 0, frame = 0
 916              		@ frame_needed = 0, uses_anonymous_args = 0
 917              		@ link register save eliminated.
 918              	.LVL44:
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t transmitmailbox = CAN_TXSTATUS_NOMAILBOX;
 690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check the parameters */
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_IDTYPE(hcan->pTxMsg->IDE));
 693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_RTR(hcan->pTxMsg->RTR));
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_DLC(hcan->pTxMsg->DLC));
 695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if(((hcan->Instance->TSR&CAN_TSR_TME0) == CAN_TSR_TME0) || \
 919              		.loc 1 696 0
 920 0000 0268     		ldr	r2, [r0]
 921 0002 9368     		ldr	r3, [r2, #8]
 922 0004 13F0806F 		tst	r3, #67108864
 923 0008 08D1     		bne	.L80
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME1) == CAN_TSR_TME1) || \
 924              		.loc 1 697 0 discriminator 1
 925 000a 9368     		ldr	r3, [r2, #8]
 696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME1) == CAN_TSR_TME1) || \
 926              		.loc 1 696 0 discriminator 1
 927 000c 13F0006F 		tst	r3, #134217728
 928 0010 04D1     		bne	.L80
 698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME2) == CAN_TSR_TME2))
 929              		.loc 1 698 0
 930 0012 9368     		ldr	r3, [r2, #8]
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME1) == CAN_TSR_TME1) || \
 931              		.loc 1 697 0
 932 0014 13F0805F 		tst	r3, #268435456
 933 0018 00F09880 		beq	.L81
 934              	.L80:
 699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Process Locked */
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     __HAL_LOCK(hcan);
 935              		.loc 1 701 0
 936 001c 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
ARM GAS  /tmp/ccofRh1B.s 			page 31


 937 0020 012B     		cmp	r3, #1
 938 0022 00F09880 		beq	.L91
 688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t transmitmailbox = CAN_TXSTATUS_NOMAILBOX;
 939              		.loc 1 688 0 discriminator 2
 940 0026 F0B4     		push	{r4, r5, r6, r7}
 941              	.LCFI7:
 942              		.cfi_def_cfa_offset 16
 943              		.cfi_offset 4, -16
 944              		.cfi_offset 5, -12
 945              		.cfi_offset 6, -8
 946              		.cfi_offset 7, -4
 947              		.loc 1 701 0 discriminator 2
 948 0028 0123     		movs	r3, #1
 949 002a 80F83C30 		strb	r3, [r0, #60]
 702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Select one empty transmit mailbox */
 704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if(HAL_IS_BIT_SET(hcan->Instance->TSR, CAN_TSR_TME0))
 950              		.loc 1 704 0 discriminator 2
 951 002e 9368     		ldr	r3, [r2, #8]
 952 0030 13F0806F 		tst	r3, #67108864
 953 0034 05D1     		bne	.L92
 705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       transmitmailbox = CAN_TXMAILBOX_0;
 707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     else if(HAL_IS_BIT_SET(hcan->Instance->TSR, CAN_TSR_TME1))
 954              		.loc 1 708 0
 955 0036 9368     		ldr	r3, [r2, #8]
 956 0038 13F0006F 		tst	r3, #134217728
 957 003c 03D0     		beq	.L93
 709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       transmitmailbox = CAN_TXMAILBOX_1;
 958              		.loc 1 710 0
 959 003e 0123     		movs	r3, #1
 960 0040 02E0     		b	.L83
 961              	.L92:
 706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 962              		.loc 1 706 0
 963 0042 0023     		movs	r3, #0
 964 0044 00E0     		b	.L83
 965              	.L93:
 711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     else
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       transmitmailbox = CAN_TXMAILBOX_2;
 966              		.loc 1 714 0
 967 0046 0223     		movs	r3, #2
 968              	.L83:
 969              	.LVL45:
 715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Set up the Id */
 718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TIR &= CAN_TI0R_TXRQ;
 970              		.loc 1 718 0
 971 0048 03F11801 		add	r1, r3, #24
 972 004c 0901     		lsls	r1, r1, #4
 973 004e 5458     		ldr	r4, [r2, r1]
 974 0050 04F00104 		and	r4, r4, #1
ARM GAS  /tmp/ccofRh1B.s 			page 32


 975 0054 5450     		str	r4, [r2, r1]
 719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if(hcan->pTxMsg->IDE == CAN_ID_STD)
 976              		.loc 1 719 0
 977 0056 026B     		ldr	r2, [r0, #48]
 978 0058 9168     		ldr	r1, [r2, #8]
 979 005a 59B9     		cbnz	r1, .L84
 720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       assert_param(IS_CAN_STDID(hcan->pTxMsg->StdId));
 722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       hcan->Instance->sTxMailBox[transmitmailbox].TIR |= ((hcan->pTxMsg->StdId << CAN_TI0R_STID_Pos
 980              		.loc 1 722 0
 981 005c 0568     		ldr	r5, [r0]
 982 005e 03F11804 		add	r4, r3, #24
 983 0062 2401     		lsls	r4, r4, #4
 984 0064 2E59     		ldr	r6, [r5, r4]
 985 0066 1768     		ldr	r7, [r2]
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                            hcan->pTxMsg->RTR);
 986              		.loc 1 723 0
 987 0068 D168     		ldr	r1, [r2, #12]
 722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                            hcan->pTxMsg->RTR);
 988              		.loc 1 722 0
 989 006a 41EA4752 		orr	r2, r1, r7, lsl #21
 990 006e 3243     		orrs	r2, r2, r6
 991 0070 2A51     		str	r2, [r5, r4]
 992 0072 0BE0     		b	.L85
 993              	.L84:
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     else
 726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       assert_param(IS_CAN_EXTID(hcan->pTxMsg->ExtId));
 728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       hcan->Instance->sTxMailBox[transmitmailbox].TIR |= ((hcan->pTxMsg->ExtId << CAN_TI0R_EXID_Pos
 994              		.loc 1 728 0
 995 0074 0568     		ldr	r5, [r0]
 996 0076 03F11804 		add	r4, r3, #24
 997 007a 2401     		lsls	r4, r4, #4
 998 007c 2E59     		ldr	r6, [r5, r4]
 999 007e 5768     		ldr	r7, [r2, #4]
 1000 0080 41EAC701 		orr	r1, r1, r7, lsl #3
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                            hcan->pTxMsg->IDE |                     
 730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                            hcan->pTxMsg->RTR);
 1001              		.loc 1 730 0
 1002 0084 D268     		ldr	r2, [r2, #12]
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                            hcan->pTxMsg->IDE |                     
 1003              		.loc 1 729 0
 1004 0086 1143     		orrs	r1, r1, r2
 728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                            hcan->pTxMsg->IDE |                     
 1005              		.loc 1 728 0
 1006 0088 3143     		orrs	r1, r1, r6
 1007 008a 2951     		str	r1, [r5, r4]
 1008              	.L85:
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Set up the DLC */
 734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->pTxMsg->DLC &= (uint8_t)0x0000000FU;
 1009              		.loc 1 734 0
 1010 008c 016B     		ldr	r1, [r0, #48]
 1011 008e 0A69     		ldr	r2, [r1, #16]
 1012 0090 02F00F02 		and	r2, r2, #15
ARM GAS  /tmp/ccofRh1B.s 			page 33


 1013 0094 0A61     		str	r2, [r1, #16]
 735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TDTR &= 0xFFFFFFF0U;
 1014              		.loc 1 735 0
 1015 0096 0168     		ldr	r1, [r0]
 1016 0098 03F11802 		add	r2, r3, #24
 1017 009c 1201     		lsls	r2, r2, #4
 1018 009e 1144     		add	r1, r1, r2
 1019 00a0 4C68     		ldr	r4, [r1, #4]
 1020 00a2 24F00F04 		bic	r4, r4, #15
 1021 00a6 4C60     		str	r4, [r1, #4]
 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TDTR |= hcan->pTxMsg->DLC;
 1022              		.loc 1 736 0
 1023 00a8 0168     		ldr	r1, [r0]
 1024 00aa 0A44     		add	r2, r2, r1
 1025 00ac 5468     		ldr	r4, [r2, #4]
 1026 00ae 016B     		ldr	r1, [r0, #48]
 1027 00b0 0969     		ldr	r1, [r1, #16]
 1028 00b2 2143     		orrs	r1, r1, r4
 1029 00b4 5160     		str	r1, [r2, #4]
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Set up the data field */
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDLR, ((uint32_t)hcan->pTxMsg->Data[3] <<
 1030              		.loc 1 739 0
 1031 00b6 0468     		ldr	r4, [r0]
 1032 00b8 016B     		ldr	r1, [r0, #48]
 1033 00ba CD7D     		ldrb	r5, [r1, #23]	@ zero_extendqisi2
 1034 00bc 8A7D     		ldrb	r2, [r1, #22]	@ zero_extendqisi2
 1035 00be 1204     		lsls	r2, r2, #16
 1036 00c0 42EA0562 		orr	r2, r2, r5, lsl #24
 1037 00c4 4D7D     		ldrb	r5, [r1, #21]	@ zero_extendqisi2
 1038 00c6 42EA0522 		orr	r2, r2, r5, lsl #8
 1039 00ca 097D     		ldrb	r1, [r1, #20]	@ zero_extendqisi2
 1040 00cc 0A43     		orrs	r2, r2, r1
 1041 00ce 1901     		lsls	r1, r3, #4
 1042 00d0 0C44     		add	r4, r4, r1
 1043 00d2 C4F88821 		str	r2, [r4, #392]
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[2] <<
 741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[1] <<
 742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[0] <<
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDHR, ((uint32_t)hcan->pTxMsg->Data[7] <<
 1044              		.loc 1 743 0
 1045 00d6 0468     		ldr	r4, [r0]
 1046 00d8 056B     		ldr	r5, [r0, #48]
 1047 00da EE7E     		ldrb	r6, [r5, #27]	@ zero_extendqisi2
 1048 00dc AA7E     		ldrb	r2, [r5, #26]	@ zero_extendqisi2
 1049 00de 1204     		lsls	r2, r2, #16
 1050 00e0 42EA0662 		orr	r2, r2, r6, lsl #24
 1051 00e4 6E7E     		ldrb	r6, [r5, #25]	@ zero_extendqisi2
 1052 00e6 42EA0622 		orr	r2, r2, r6, lsl #8
 1053 00ea 2D7E     		ldrb	r5, [r5, #24]	@ zero_extendqisi2
 1054 00ec 2A43     		orrs	r2, r2, r5
 1055 00ee 2144     		add	r1, r1, r4
 1056 00f0 C1F88C21 		str	r2, [r1, #396]
 744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[6] <<
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[5] <<
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[4] <<
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
ARM GAS  /tmp/ccofRh1B.s 			page 34


 748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Change CAN state */
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     switch(hcan->State)
 1057              		.loc 1 749 0
 1058 00f4 90F83D20 		ldrb	r2, [r0, #61]	@ zero_extendqisi2
 1059 00f8 D2B2     		uxtb	r2, r2
 1060 00fa 322A     		cmp	r2, #50
 1061 00fc 07D0     		beq	.L87
 1062 00fe 622A     		cmp	r2, #98
 1063 0100 09D0     		beq	.L88
 1064 0102 222A     		cmp	r2, #34
 1065 0104 0BD1     		bne	.L94
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0):
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX_RX0;
 1066              		.loc 1 752 0
 1067 0106 4222     		movs	r2, #66
 1068 0108 80F83D20 		strb	r2, [r0, #61]
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           break;
 1069              		.loc 1 753 0
 1070 010c 0AE0     		b	.L90
 1071              	.L87:
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX1):
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX_RX1;
 1072              		.loc 1 755 0
 1073 010e 5222     		movs	r2, #82
 1074 0110 80F83D20 		strb	r2, [r0, #61]
 756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           break;
 1075              		.loc 1 756 0
 1076 0114 06E0     		b	.L90
 1077              	.L88:
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX_RX0_RX1;
 1078              		.loc 1 758 0
 1079 0116 7222     		movs	r2, #114
 1080 0118 80F83D20 		strb	r2, [r0, #61]
 759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           break;
 1081              		.loc 1 759 0
 1082 011c 02E0     		b	.L90
 1083              	.L94:
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX;
 1084              		.loc 1 761 0
 1085 011e 1222     		movs	r2, #18
 1086 0120 80F83D20 		strb	r2, [r0, #61]
 1087              	.L90:
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           break;
 763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Set CAN error code to none */
 766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 1088              		.loc 1 766 0
 1089 0124 0022     		movs	r2, #0
 1090 0126 0264     		str	r2, [r0, #64]
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Process Unlocked */
 769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     __HAL_UNLOCK(hcan);
 1091              		.loc 1 769 0
ARM GAS  /tmp/ccofRh1B.s 			page 35


 1092 0128 80F83C20 		strb	r2, [r0, #60]
 770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Request transmission */
 772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TIR |= CAN_TI0R_TXRQ;
 1093              		.loc 1 772 0
 1094 012c 0468     		ldr	r4, [r0]
 1095 012e 1833     		adds	r3, r3, #24
 1096              	.LVL46:
 1097 0130 1B01     		lsls	r3, r3, #4
 1098              	.LVL47:
 1099 0132 E158     		ldr	r1, [r4, r3]
 1100 0134 41F00101 		orr	r1, r1, #1
 1101 0138 E150     		str	r1, [r4, r3]
 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Enable interrupts: */
 775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /*  - Enable Error warning Interrupt */
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /*  - Enable Error passive Interrupt */
 777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /*  - Enable Bus-off Interrupt */
 778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /*  - Enable Last error code Interrupt */
 779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /*  - Enable Error Interrupt */
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /*  - Enable Transmit mailbox empty Interrupt */
 781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     __HAL_CAN_ENABLE_IT(hcan, CAN_IT_EWG |
 1102              		.loc 1 781 0
 1103 013a 0168     		ldr	r1, [r0]
 1104 013c 4B69     		ldr	r3, [r1, #20]
 1105 013e 43F40F43 		orr	r3, r3, #36608
 1106 0142 43F00103 		orr	r3, r3, #1
 1107 0146 4B61     		str	r3, [r1, #20]
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                               CAN_IT_EPV |
 783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                               CAN_IT_BOF |
 784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                               CAN_IT_LEC |
 785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                               CAN_IT_ERR |
 786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                               CAN_IT_TME  );
 787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
 789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Change CAN state */
 791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_ERROR;
 792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Return function status */
 794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_ERROR;
 795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
 797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   return HAL_OK;
 1108              		.loc 1 797 0
 1109 0148 1046     		mov	r0, r2
 1110              	.LVL48:
 1111 014a 06E0     		b	.L82
 1112              	.LVL49:
 1113              	.L81:
 1114              	.LCFI8:
 1115              		.cfi_def_cfa_offset 0
 1116              		.cfi_restore 4
 1117              		.cfi_restore 5
 1118              		.cfi_restore 6
 1119              		.cfi_restore 7
 791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
ARM GAS  /tmp/ccofRh1B.s 			page 36


 1120              		.loc 1 791 0
 1121 014c 0423     		movs	r3, #4
 1122 014e 80F83D30 		strb	r3, [r0, #61]
 794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 1123              		.loc 1 794 0
 1124 0152 0120     		movs	r0, #1
 1125              	.LVL50:
 1126 0154 7047     		bx	lr
 1127              	.LVL51:
 1128              	.L91:
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     
 1129              		.loc 1 701 0
 1130 0156 0220     		movs	r0, #2
 1131              	.LVL52:
 1132 0158 7047     		bx	lr
 1133              	.LVL53:
 1134              	.L82:
 1135              	.LCFI9:
 1136              		.cfi_def_cfa_offset 16
 1137              		.cfi_offset 4, -16
 1138              		.cfi_offset 5, -12
 1139              		.cfi_offset 6, -8
 1140              		.cfi_offset 7, -4
 798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 1141              		.loc 1 798 0
 1142 015a F0BC     		pop	{r4, r5, r6, r7}
 1143              	.LCFI10:
 1144              		.cfi_restore 7
 1145              		.cfi_restore 6
 1146              		.cfi_restore 5
 1147              		.cfi_restore 4
 1148              		.cfi_def_cfa_offset 0
 1149 015c 7047     		bx	lr
 1150              		.cfi_endproc
 1151              	.LFE130:
 1153 015e 00BF     		.section	.text.HAL_CAN_Receive,"ax",%progbits
 1154              		.align	2
 1155              		.global	HAL_CAN_Receive
 1156              		.thumb
 1157              		.thumb_func
 1159              	HAL_CAN_Receive:
 1160              	.LFB131:
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Receives a correct CAN frame.
 802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.  
 804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  FIFONumber    FIFO number.
 805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  Timeout       Timeout duration.
 806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval HAL status
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
 808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Receive(CAN_HandleTypeDef* hcan, uint8_t FIFONumber, uint32_t Timeout)
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 1161              		.loc 1 809 0
 1162              		.cfi_startproc
 1163              		@ args = 0, pretend = 0, frame = 0
 1164              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccofRh1B.s 			page 37


 1165              	.LVL54:
 1166 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1167              	.LCFI11:
 1168              		.cfi_def_cfa_offset 24
 1169              		.cfi_offset 3, -24
 1170              		.cfi_offset 4, -20
 1171              		.cfi_offset 5, -16
 1172              		.cfi_offset 6, -12
 1173              		.cfi_offset 7, -8
 1174              		.cfi_offset 14, -4
 1175              	.LVL55:
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t tickstart = 0U;
 811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   CanRxMsgTypeDef* pRxMsg = NULL;
 812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check the parameters */
 814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Process locked */
 817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   __HAL_LOCK(hcan);
 1176              		.loc 1 817 0
 1177 0002 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1178 0006 012B     		cmp	r3, #1
 1179 0008 00F03581 		beq	.L135
 1180              		.loc 1 817 0 is_stmt 0 discriminator 2
 1181 000c 0123     		movs	r3, #1
 1182 000e 80F83C30 		strb	r3, [r0, #60]
 818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check if CAN state is not busy for RX FIFO0 */
 820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((FIFONumber == CAN_FIFO0) && ((hcan->State == HAL_CAN_STATE_BUSY_RX0) ||         \
 1183              		.loc 1 820 0 is_stmt 1 discriminator 2
 1184 0012 C1B9     		cbnz	r1, .L99
 1185              		.loc 1 820 0 is_stmt 0 discriminator 1
 1186 0014 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 1187 0018 DBB2     		uxtb	r3, r3
 1188 001a 222B     		cmp	r3, #34
 1189 001c 0ED0     		beq	.L100
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0) ||      \
 1190              		.loc 1 821 0 is_stmt 1 discriminator 2
 1191 001e 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 1192 0022 DBB2     		uxtb	r3, r3
 820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0) ||      \
 1193              		.loc 1 820 0 discriminator 2
 1194 0024 422B     		cmp	r3, #66
 1195 0026 09D0     		beq	.L100
 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 1196              		.loc 1 822 0
 1197 0028 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 1198 002c DBB2     		uxtb	r3, r3
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0) ||      \
 1199              		.loc 1 821 0
 1200 002e 622B     		cmp	r3, #98
 1201 0030 04D0     		beq	.L100
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0_RX1)))
 1202              		.loc 1 823 0
 1203 0032 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 1204 0036 DBB2     		uxtb	r3, r3
 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
ARM GAS  /tmp/ccofRh1B.s 			page 38


 1205              		.loc 1 822 0
 1206 0038 722B     		cmp	r3, #114
 1207 003a 04D1     		bne	.L99
 1208              	.L100:
 824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Process unlocked */
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     __HAL_UNLOCK(hcan);
 1209              		.loc 1 826 0
 1210 003c 0023     		movs	r3, #0
 1211 003e 80F83C30 		strb	r3, [r0, #60]
 827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_BUSY;
 1212              		.loc 1 828 0
 1213 0042 0220     		movs	r0, #2
 1214              	.LVL56:
 1215 0044 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1216              	.LVL57:
 1217              	.L99:
 829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check if CAN state is not busy for RX FIFO1 */
 832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((FIFONumber == CAN_FIFO1) && ((hcan->State == HAL_CAN_STATE_BUSY_RX1) ||         \
 1218              		.loc 1 832 0
 1219 0046 0129     		cmp	r1, #1
 1220 0048 18D1     		bne	.L101
 1221              		.loc 1 832 0 is_stmt 0 discriminator 1
 1222 004a 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 1223 004e DBB2     		uxtb	r3, r3
 1224 0050 322B     		cmp	r3, #50
 1225 0052 0ED0     		beq	.L102
 833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX1) ||      \
 1226              		.loc 1 833 0 is_stmt 1 discriminator 2
 1227 0054 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 1228 0058 DBB2     		uxtb	r3, r3
 832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX1) ||      \
 1229              		.loc 1 832 0 discriminator 2
 1230 005a 522B     		cmp	r3, #82
 1231 005c 09D0     		beq	.L102
 834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 1232              		.loc 1 834 0
 1233 005e 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 1234 0062 DBB2     		uxtb	r3, r3
 833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX1) ||      \
 1235              		.loc 1 833 0
 1236 0064 622B     		cmp	r3, #98
 1237 0066 04D0     		beq	.L102
 835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0_RX1)))
 1238              		.loc 1 835 0
 1239 0068 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 1240 006c DBB2     		uxtb	r3, r3
 834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 1241              		.loc 1 834 0
 1242 006e 722B     		cmp	r3, #114
 1243 0070 04D1     		bne	.L101
 1244              	.L102:
 836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Process unlocked */
ARM GAS  /tmp/ccofRh1B.s 			page 39


 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     __HAL_UNLOCK(hcan);
 1245              		.loc 1 838 0
 1246 0072 0023     		movs	r3, #0
 1247 0074 80F83C30 		strb	r3, [r0, #60]
 839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_BUSY;
 1248              		.loc 1 840 0
 1249 0078 0220     		movs	r0, #2
 1250              	.LVL58:
 1251 007a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1252              	.LVL59:
 1253              	.L101:
 841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Change CAN state */
 844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (FIFONumber == CAN_FIFO0)
 1254              		.loc 1 844 0
 1255 007c C1B9     		cbnz	r1, .L103
 845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     switch(hcan->State)
 1256              		.loc 1 846 0
 1257 007e 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 1258 0082 DBB2     		uxtb	r3, r3
 1259 0084 322B     		cmp	r3, #50
 1260 0086 07D0     		beq	.L105
 1261 0088 522B     		cmp	r3, #82
 1262 008a 09D0     		beq	.L106
 1263 008c 122B     		cmp	r3, #18
 1264 008e 0BD1     		bne	.L136
 847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX):
 849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0;
 1265              		.loc 1 849 0
 1266 0090 4223     		movs	r3, #66
 1267 0092 80F83D30 		strb	r3, [r0, #61]
 850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 1268              		.loc 1 850 0
 1269 0096 23E0     		b	.L108
 1270              	.L105:
 851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX1):
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0_RX1;
 1271              		.loc 1 852 0
 1272 0098 6223     		movs	r3, #98
 1273 009a 80F83D30 		strb	r3, [r0, #61]
 853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 1274              		.loc 1 853 0
 1275 009e 1FE0     		b	.L108
 1276              	.L106:
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX1):
 855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0_RX1;
 1277              		.loc 1 855 0
 1278 00a0 7223     		movs	r3, #114
 1279 00a2 80F83D30 		strb	r3, [r0, #61]
 856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 1280              		.loc 1 856 0
 1281 00a6 1BE0     		b	.L108
 1282              	.L136:
ARM GAS  /tmp/ccofRh1B.s 			page 40


 857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0;
 1283              		.loc 1 858 0
 1284 00a8 2223     		movs	r3, #34
 1285 00aa 80F83D30 		strb	r3, [r0, #61]
 859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 1286              		.loc 1 859 0
 1287 00ae 17E0     		b	.L108
 1288              	.L103:
 860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     switch(hcan->State)
 1289              		.loc 1 864 0
 1290 00b0 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 1291 00b4 DBB2     		uxtb	r3, r3
 1292 00b6 222B     		cmp	r3, #34
 1293 00b8 07D0     		beq	.L110
 1294 00ba 422B     		cmp	r3, #66
 1295 00bc 09D0     		beq	.L111
 1296 00be 122B     		cmp	r3, #18
 1297 00c0 0BD1     		bne	.L137
 865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX):
 867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX1;
 1298              		.loc 1 867 0
 1299 00c2 5223     		movs	r3, #82
 1300 00c4 80F83D30 		strb	r3, [r0, #61]
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 1301              		.loc 1 868 0
 1302 00c8 0AE0     		b	.L108
 1303              	.L110:
 869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0):
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0_RX1;
 1304              		.loc 1 870 0
 1305 00ca 6223     		movs	r3, #98
 1306 00cc 80F83D30 		strb	r3, [r0, #61]
 871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 1307              		.loc 1 871 0
 1308 00d0 06E0     		b	.L108
 1309              	.L111:
 872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0):
 873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0_RX1;
 1310              		.loc 1 873 0
 1311 00d2 7223     		movs	r3, #114
 1312 00d4 80F83D30 		strb	r3, [r0, #61]
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 1313              		.loc 1 874 0
 1314 00d8 02E0     		b	.L108
 1315              	.L137:
 875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX1;
 1316              		.loc 1 876 0
 1317 00da 3223     		movs	r3, #50
 1318 00dc 80F83D30 		strb	r3, [r0, #61]
 1319              	.L108:
ARM GAS  /tmp/ccofRh1B.s 			page 41


 1320 00e0 1646     		mov	r6, r2
 1321 00e2 0D46     		mov	r5, r1
 1322 00e4 0446     		mov	r4, r0
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Get tick */
 882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   tickstart = HAL_GetTick();   
 1323              		.loc 1 882 0
 1324 00e6 FFF7FEFF 		bl	HAL_GetTick
 1325              	.LVL60:
 1326 00ea 0746     		mov	r7, r0
 1327              	.LVL61:
 883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check pending message */
 885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   while(__HAL_CAN_MSG_PENDING(hcan, FIFONumber) == 0U)
 1328              		.loc 1 885 0
 1329 00ec 0FE0     		b	.L114
 1330              	.LVL62:
 1331              	.L118:
 886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Check for the Timeout */
 888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if(Timeout != HAL_MAX_DELAY)
 1332              		.loc 1 888 0
 1333 00ee B6F1FF3F 		cmp	r6, #-1
 1334 00f2 0CD0     		beq	.L114
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       if((Timeout == 0U) || ((HAL_GetTick()-tickstart) > Timeout))
 1335              		.loc 1 890 0
 1336 00f4 26B1     		cbz	r6, .L115
 1337              		.loc 1 890 0 is_stmt 0 discriminator 1
 1338 00f6 FFF7FEFF 		bl	HAL_GetTick
 1339              	.LVL63:
 1340 00fa C01B     		subs	r0, r0, r7
 1341 00fc 8642     		cmp	r6, r0
 1342 00fe 06D2     		bcs	.L114
 1343              	.L115:
 891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
 892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_TIMEOUT;
 1344              		.loc 1 892 0 is_stmt 1
 1345 0100 0320     		movs	r0, #3
 1346 0102 84F83D00 		strb	r0, [r4, #61]
 893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Process unlocked */
 895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         __HAL_UNLOCK(hcan);
 1347              		.loc 1 895 0
 1348 0106 0023     		movs	r3, #0
 1349 0108 84F83C30 		strb	r3, [r4, #60]
 896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         return HAL_TIMEOUT;
 1350              		.loc 1 897 0
 1351 010c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1352              	.LVL64:
 1353              	.L114:
 885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 1354              		.loc 1 885 0
ARM GAS  /tmp/ccofRh1B.s 			page 42


 1355 010e 3DB9     		cbnz	r5, .L116
 885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 1356              		.loc 1 885 0 is_stmt 0 discriminator 1
 1357 0110 2368     		ldr	r3, [r4]
 1358 0112 DB68     		ldr	r3, [r3, #12]
 1359 0114 13F0030F 		tst	r3, #3
 1360 0118 0CBF     		ite	eq
 1361 011a 0123     		moveq	r3, #1
 1362 011c 0023     		movne	r3, #0
 1363 011e 06E0     		b	.L117
 1364              	.L116:
 885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 1365              		.loc 1 885 0 discriminator 2
 1366 0120 2368     		ldr	r3, [r4]
 1367 0122 1B69     		ldr	r3, [r3, #16]
 1368 0124 13F0030F 		tst	r3, #3
 1369 0128 0CBF     		ite	eq
 1370 012a 0123     		moveq	r3, #1
 1371 012c 0023     		movne	r3, #0
 1372              	.L117:
 885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 1373              		.loc 1 885 0 discriminator 4
 1374 012e 002B     		cmp	r3, #0
 1375 0130 DDD1     		bne	.L118
 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
 899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Set RxMsg pointer */
 903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if(FIFONumber == CAN_FIFO0)
 1376              		.loc 1 903 0 is_stmt 1
 1377 0132 0DB9     		cbnz	r5, .L119
 904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     pRxMsg = hcan->pRxMsg;
 1378              		.loc 1 905 0
 1379 0134 636B     		ldr	r3, [r4, #52]
 1380              	.LVL65:
 1381 0136 00E0     		b	.L120
 1382              	.LVL66:
 1383              	.L119:
 906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     pRxMsg = hcan->pRx1Msg;
 1384              		.loc 1 909 0
 1385 0138 A36B     		ldr	r3, [r4, #56]
 1386              	.LVL67:
 1387              	.L120:
 910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Get the Id */
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   pRxMsg->IDE = CAN_RI0R_IDE & hcan->Instance->sFIFOMailBox[FIFONumber].RIR;
 1388              		.loc 1 913 0
 1389 013a 2168     		ldr	r1, [r4]
 1390 013c 05F11B02 		add	r2, r5, #27
 1391 0140 1201     		lsls	r2, r2, #4
 1392 0142 8A58     		ldr	r2, [r1, r2]
ARM GAS  /tmp/ccofRh1B.s 			page 43


 1393 0144 02F00402 		and	r2, r2, #4
 1394 0148 9A60     		str	r2, [r3, #8]
 914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (pRxMsg->IDE == CAN_ID_STD)
 1395              		.loc 1 914 0
 1396 014a 3AB9     		cbnz	r2, .L121
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     pRxMsg->StdId = (CAN_RI0R_STID & hcan->Instance->sFIFOMailBox[FIFONumber].RIR) >> CAN_TI0R_STID
 1397              		.loc 1 916 0
 1398 014c 2168     		ldr	r1, [r4]
 1399 014e 05F11B02 		add	r2, r5, #27
 1400 0152 1201     		lsls	r2, r2, #4
 1401 0154 8A58     		ldr	r2, [r1, r2]
 1402 0156 520D     		lsrs	r2, r2, #21
 1403 0158 1A60     		str	r2, [r3]
 1404 015a 06E0     		b	.L122
 1405              	.L121:
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     pRxMsg->ExtId = (0xFFFFFFF8U & hcan->Instance->sFIFOMailBox[FIFONumber].RIR) >> CAN_RI0R_EXID_P
 1406              		.loc 1 920 0
 1407 015c 2168     		ldr	r1, [r4]
 1408 015e 05F11B02 		add	r2, r5, #27
 1409 0162 1201     		lsls	r2, r2, #4
 1410 0164 8A58     		ldr	r2, [r1, r2]
 1411 0166 D208     		lsrs	r2, r2, #3
 1412 0168 5A60     		str	r2, [r3, #4]
 1413              	.L122:
 921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   pRxMsg->RTR = (CAN_RI0R_RTR & hcan->Instance->sFIFOMailBox[FIFONumber].RIR) >> CAN_RI0R_RTR_Pos;
 1414              		.loc 1 922 0
 1415 016a 2168     		ldr	r1, [r4]
 1416 016c 05F11B02 		add	r2, r5, #27
 1417 0170 1201     		lsls	r2, r2, #4
 1418 0172 8958     		ldr	r1, [r1, r2]
 1419 0174 C1F34001 		ubfx	r1, r1, #1, #1
 1420 0178 D960     		str	r1, [r3, #12]
 923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Get the DLC */
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   pRxMsg->DLC = (CAN_RDT0R_DLC & hcan->Instance->sFIFOMailBox[FIFONumber].RDTR) >> CAN_RDT0R_DLC_Po
 1421              		.loc 1 924 0
 1422 017a 2168     		ldr	r1, [r4]
 1423 017c 1144     		add	r1, r1, r2
 1424 017e 4968     		ldr	r1, [r1, #4]
 1425 0180 01F00F01 		and	r1, r1, #15
 1426 0184 1961     		str	r1, [r3, #16]
 925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Get the FMI */
 926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   pRxMsg->FMI = (CAN_RDT0R_FMI & hcan->Instance->sFIFOMailBox[FIFONumber].RDTR) >> CAN_RDT0R_FMI_Po
 1427              		.loc 1 926 0
 1428 0186 2168     		ldr	r1, [r4]
 1429 0188 0A44     		add	r2, r2, r1
 1430 018a 5268     		ldr	r2, [r2, #4]
 1431 018c C2F30722 		ubfx	r2, r2, #8, #8
 1432 0190 DA61     		str	r2, [r3, #28]
 927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Get the FIFONumber */
 928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   pRxMsg->FIFONumber = FIFONumber;
 1433              		.loc 1 928 0
 1434 0192 1D62     		str	r5, [r3, #32]
ARM GAS  /tmp/ccofRh1B.s 			page 44


 929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Get the data field */
 930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   pRxMsg->Data[0] = (CAN_RDL0R_DATA0 & hcan->Instance->sFIFOMailBox[FIFONumber].RDLR) >> CAN_RDL0R_
 1435              		.loc 1 930 0
 1436 0194 2168     		ldr	r1, [r4]
 1437 0196 2A01     		lsls	r2, r5, #4
 1438 0198 1144     		add	r1, r1, r2
 1439 019a D1F8B811 		ldr	r1, [r1, #440]
 1440 019e 1975     		strb	r1, [r3, #20]
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   pRxMsg->Data[1] = (CAN_RDL0R_DATA1 & hcan->Instance->sFIFOMailBox[FIFONumber].RDLR) >> CAN_RDL0R_
 1441              		.loc 1 931 0
 1442 01a0 2168     		ldr	r1, [r4]
 1443 01a2 1144     		add	r1, r1, r2
 1444 01a4 D1F8B811 		ldr	r1, [r1, #440]
 1445 01a8 090A     		lsrs	r1, r1, #8
 1446 01aa 5975     		strb	r1, [r3, #21]
 932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   pRxMsg->Data[2] = (CAN_RDL0R_DATA2 & hcan->Instance->sFIFOMailBox[FIFONumber].RDLR) >> CAN_RDL0R_
 1447              		.loc 1 932 0
 1448 01ac 2168     		ldr	r1, [r4]
 1449 01ae 1144     		add	r1, r1, r2
 1450 01b0 D1F8B811 		ldr	r1, [r1, #440]
 1451 01b4 090C     		lsrs	r1, r1, #16
 1452 01b6 9975     		strb	r1, [r3, #22]
 933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   pRxMsg->Data[3] = (CAN_RDL0R_DATA3 & hcan->Instance->sFIFOMailBox[FIFONumber].RDLR) >> CAN_RDL0R_
 1453              		.loc 1 933 0
 1454 01b8 2168     		ldr	r1, [r4]
 1455 01ba 1144     		add	r1, r1, r2
 1456 01bc D1F8B811 		ldr	r1, [r1, #440]
 1457 01c0 090E     		lsrs	r1, r1, #24
 1458 01c2 D975     		strb	r1, [r3, #23]
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   pRxMsg->Data[4] = (CAN_RDH0R_DATA4 & hcan->Instance->sFIFOMailBox[FIFONumber].RDHR) >> CAN_RDH0R_
 1459              		.loc 1 934 0
 1460 01c4 2168     		ldr	r1, [r4]
 1461 01c6 1144     		add	r1, r1, r2
 1462 01c8 D1F8BC11 		ldr	r1, [r1, #444]
 1463 01cc 1976     		strb	r1, [r3, #24]
 935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   pRxMsg->Data[5] = (CAN_RDH0R_DATA5 & hcan->Instance->sFIFOMailBox[FIFONumber].RDHR) >> CAN_RDH0R_
 1464              		.loc 1 935 0
 1465 01ce 2168     		ldr	r1, [r4]
 1466 01d0 1144     		add	r1, r1, r2
 1467 01d2 D1F8BC11 		ldr	r1, [r1, #444]
 1468 01d6 090A     		lsrs	r1, r1, #8
 1469 01d8 5976     		strb	r1, [r3, #25]
 936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   pRxMsg->Data[6] = (CAN_RDH0R_DATA6 & hcan->Instance->sFIFOMailBox[FIFONumber].RDHR) >> CAN_RDH0R_
 1470              		.loc 1 936 0
 1471 01da 2168     		ldr	r1, [r4]
 1472 01dc 1144     		add	r1, r1, r2
 1473 01de D1F8BC11 		ldr	r1, [r1, #444]
 1474 01e2 090C     		lsrs	r1, r1, #16
 1475 01e4 9976     		strb	r1, [r3, #26]
 937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   pRxMsg->Data[7] = (CAN_RDH0R_DATA7 & hcan->Instance->sFIFOMailBox[FIFONumber].RDHR) >> CAN_RDH0R_
 1476              		.loc 1 937 0
 1477 01e6 2168     		ldr	r1, [r4]
 1478 01e8 0A44     		add	r2, r2, r1
 1479 01ea D2F8BC21 		ldr	r2, [r2, #444]
 1480 01ee 120E     		lsrs	r2, r2, #24
 1481 01f0 DA76     		strb	r2, [r3, #27]
 938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
ARM GAS  /tmp/ccofRh1B.s 			page 45


 939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Release the FIFO */
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if(FIFONumber == CAN_FIFO0)
 1482              		.loc 1 940 0
 1483 01f2 2DB9     		cbnz	r5, .L123
 941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Release FIFO0 */
 943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     __HAL_CAN_FIFO_RELEASE(hcan, CAN_FIFO0);
 1484              		.loc 1 943 0
 1485 01f4 2268     		ldr	r2, [r4]
 1486 01f6 D368     		ldr	r3, [r2, #12]
 1487              	.LVL68:
 1488 01f8 43F02003 		orr	r3, r3, #32
 1489 01fc D360     		str	r3, [r2, #12]
 1490 01fe 04E0     		b	.L124
 1491              	.LVL69:
 1492              	.L123:
 944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Release FIFO1 */
 948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     __HAL_CAN_FIFO_RELEASE(hcan, CAN_FIFO1);
 1493              		.loc 1 948 0
 1494 0200 2268     		ldr	r2, [r4]
 1495 0202 1369     		ldr	r3, [r2, #16]
 1496              	.LVL70:
 1497 0204 43F02003 		orr	r3, r3, #32
 1498 0208 1361     		str	r3, [r2, #16]
 1499              	.L124:
 949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Change CAN state */
 952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (FIFONumber == CAN_FIFO0)
 1500              		.loc 1 952 0
 1501 020a C5B9     		cbnz	r5, .L125
 953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     switch(hcan->State)
 1502              		.loc 1 954 0
 1503 020c 94F83D30 		ldrb	r3, [r4, #61]	@ zero_extendqisi2
 1504 0210 DBB2     		uxtb	r3, r3
 1505 0212 622B     		cmp	r3, #98
 1506 0214 07D0     		beq	.L127
 1507 0216 722B     		cmp	r3, #114
 1508 0218 09D0     		beq	.L128
 1509 021a 422B     		cmp	r3, #66
 1510 021c 0BD1     		bne	.L138
 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0):
 957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX;
 1511              		.loc 1 957 0
 1512 021e 1223     		movs	r3, #18
 1513 0220 84F83D30 		strb	r3, [r4, #61]
 958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 1514              		.loc 1 958 0
 1515 0224 23E0     		b	.L130
 1516              	.L127:
 959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
 960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX1;
ARM GAS  /tmp/ccofRh1B.s 			page 46


 1517              		.loc 1 960 0
 1518 0226 3223     		movs	r3, #50
 1519 0228 84F83D30 		strb	r3, [r4, #61]
 961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 1520              		.loc 1 961 0
 1521 022c 1FE0     		b	.L130
 1522              	.L128:
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
 963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX1;
 1523              		.loc 1 963 0
 1524 022e 5223     		movs	r3, #82
 1525 0230 84F83D30 		strb	r3, [r4, #61]
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 1526              		.loc 1 964 0
 1527 0234 1BE0     		b	.L130
 1528              	.L138:
 965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_RX0 */
 966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_READY;
 1529              		.loc 1 966 0
 1530 0236 0123     		movs	r3, #1
 1531 0238 84F83D30 		strb	r3, [r4, #61]
 967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 1532              		.loc 1 967 0
 1533 023c 17E0     		b	.L130
 1534              	.L125:
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     switch(hcan->State)
 1535              		.loc 1 972 0
 1536 023e 94F83D30 		ldrb	r3, [r4, #61]	@ zero_extendqisi2
 1537 0242 DBB2     		uxtb	r3, r3
 1538 0244 622B     		cmp	r3, #98
 1539 0246 07D0     		beq	.L132
 1540 0248 722B     		cmp	r3, #114
 1541 024a 09D0     		beq	.L133
 1542 024c 522B     		cmp	r3, #82
 1543 024e 0BD1     		bne	.L139
 973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX1):
 975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX;
 1544              		.loc 1 975 0
 1545 0250 1223     		movs	r3, #18
 1546 0252 84F83D30 		strb	r3, [r4, #61]
 976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 1547              		.loc 1 976 0
 1548 0256 0AE0     		b	.L130
 1549              	.L132:
 977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0;
 1550              		.loc 1 978 0
 1551 0258 2223     		movs	r3, #34
 1552 025a 84F83D30 		strb	r3, [r4, #61]
 979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 1553              		.loc 1 979 0
 1554 025e 06E0     		b	.L130
ARM GAS  /tmp/ccofRh1B.s 			page 47


 1555              	.L133:
 980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
 981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0;
 1556              		.loc 1 981 0
 1557 0260 4223     		movs	r3, #66
 1558 0262 84F83D30 		strb	r3, [r4, #61]
 982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 1559              		.loc 1 982 0
 1560 0266 02E0     		b	.L130
 1561              	.L139:
 983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_RX1 */
 984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_READY;
 1562              		.loc 1 984 0
 1563 0268 0123     		movs	r3, #1
 1564 026a 84F83D30 		strb	r3, [r4, #61]
 1565              	.L130:
 985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
 989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Process unlocked */
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   __HAL_UNLOCK(hcan);
 1566              		.loc 1 990 0
 1567 026e 0020     		movs	r0, #0
 1568 0270 84F83C00 		strb	r0, [r4, #60]
 991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Return function status */
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   return HAL_OK;
 1569              		.loc 1 993 0
 1570 0274 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1571              	.LVL71:
 1572              	.L135:
 817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 1573              		.loc 1 817 0
 1574 0276 0220     		movs	r0, #2
 1575              	.LVL72:
 994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 1576              		.loc 1 994 0
 1577 0278 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1578              		.cfi_endproc
 1579              	.LFE131:
 1581 027a 00BF     		.section	.text.HAL_CAN_Receive_IT,"ax",%progbits
 1582              		.align	2
 1583              		.global	HAL_CAN_Receive_IT
 1584              		.thumb
 1585              		.thumb_func
 1587              	HAL_CAN_Receive_IT:
 1588              	.LFB132:
 995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
 997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Receives a correct CAN frame.
 998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.  
1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  FIFONumber    FIFO number.
1001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval HAL status
1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Receive_IT(CAN_HandleTypeDef* hcan, uint8_t FIFONumber)
ARM GAS  /tmp/ccofRh1B.s 			page 48


1004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 1589              		.loc 1 1004 0
 1590              		.cfi_startproc
 1591              		@ args = 0, pretend = 0, frame = 0
 1592              		@ frame_needed = 0, uses_anonymous_args = 0
 1593              		@ link register save eliminated.
 1594              	.LVL73:
 1595 0000 10B4     		push	{r4}
 1596              	.LCFI12:
 1597              		.cfi_def_cfa_offset 4
 1598              		.cfi_offset 4, -4
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check the parameters */
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
1007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Process locked */
1009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   __HAL_LOCK(hcan);
 1599              		.loc 1 1009 0
 1600 0002 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1601 0006 012B     		cmp	r3, #1
 1602 0008 00F08280 		beq	.L158
 1603              		.loc 1 1009 0 is_stmt 0 discriminator 2
 1604 000c 0123     		movs	r3, #1
 1605 000e 80F83C30 		strb	r3, [r0, #60]
1010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check if CAN state is not busy for RX FIFO0 */
1012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((FIFONumber == CAN_FIFO0) && ((hcan->State == HAL_CAN_STATE_BUSY_RX0) ||        \
 1606              		.loc 1 1012 0 is_stmt 1 discriminator 2
 1607 0012 C1B9     		cbnz	r1, .L143
 1608              		.loc 1 1012 0 is_stmt 0 discriminator 1
 1609 0014 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 1610 0018 DBB2     		uxtb	r3, r3
 1611 001a 222B     		cmp	r3, #34
 1612 001c 0ED0     		beq	.L144
1013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0) ||      \
 1613              		.loc 1 1013 0 is_stmt 1 discriminator 2
 1614 001e 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 1615 0022 DBB2     		uxtb	r3, r3
1012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0) ||      \
 1616              		.loc 1 1012 0 discriminator 2
 1617 0024 422B     		cmp	r3, #66
 1618 0026 09D0     		beq	.L144
1014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 1619              		.loc 1 1014 0
 1620 0028 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 1621 002c DBB2     		uxtb	r3, r3
1013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0) ||      \
 1622              		.loc 1 1013 0
 1623 002e 622B     		cmp	r3, #98
 1624 0030 04D0     		beq	.L144
1015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0_RX1)))
 1625              		.loc 1 1015 0
 1626 0032 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 1627 0036 DBB2     		uxtb	r3, r3
1014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 1628              		.loc 1 1014 0
 1629 0038 722B     		cmp	r3, #114
 1630 003a 04D1     		bne	.L143
ARM GAS  /tmp/ccofRh1B.s 			page 49


 1631              	.L144:
1016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Process unlocked */
1018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     __HAL_UNLOCK(hcan);
 1632              		.loc 1 1018 0
 1633 003c 0023     		movs	r3, #0
 1634 003e 80F83C30 		strb	r3, [r0, #60]
1019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_BUSY;
 1635              		.loc 1 1020 0
 1636 0042 0220     		movs	r0, #2
 1637              	.LVL74:
 1638 0044 65E0     		b	.L142
 1639              	.LVL75:
 1640              	.L143:
1021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check if CAN state is not busy for RX FIFO1 */
1024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if ((FIFONumber == CAN_FIFO1) && ((hcan->State == HAL_CAN_STATE_BUSY_RX1) ||        \
 1641              		.loc 1 1024 0
 1642 0046 0129     		cmp	r1, #1
 1643 0048 18D1     		bne	.L145
 1644              		.loc 1 1024 0 is_stmt 0 discriminator 1
 1645 004a 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 1646 004e DBB2     		uxtb	r3, r3
 1647 0050 322B     		cmp	r3, #50
 1648 0052 0ED0     		beq	.L146
1025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX1) ||      \
 1649              		.loc 1 1025 0 is_stmt 1 discriminator 2
 1650 0054 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 1651 0058 DBB2     		uxtb	r3, r3
1024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX1) ||      \
 1652              		.loc 1 1024 0 discriminator 2
 1653 005a 522B     		cmp	r3, #82
 1654 005c 09D0     		beq	.L146
1026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 1655              		.loc 1 1026 0
 1656 005e 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 1657 0062 DBB2     		uxtb	r3, r3
1025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX1) ||      \
 1658              		.loc 1 1025 0
 1659 0064 622B     		cmp	r3, #98
 1660 0066 04D0     		beq	.L146
1027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0_RX1)))
 1661              		.loc 1 1027 0
 1662 0068 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 1663 006c DBB2     		uxtb	r3, r3
1026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 1664              		.loc 1 1026 0
 1665 006e 722B     		cmp	r3, #114
 1666 0070 04D1     		bne	.L145
 1667              	.L146:
1028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Process unlocked */
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     __HAL_UNLOCK(hcan);
 1668              		.loc 1 1030 0
 1669 0072 0023     		movs	r3, #0
ARM GAS  /tmp/ccofRh1B.s 			page 50


 1670 0074 80F83C30 		strb	r3, [r0, #60]
1031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_BUSY;
 1671              		.loc 1 1032 0
 1672 0078 0220     		movs	r0, #2
 1673              	.LVL76:
 1674 007a 4AE0     		b	.L142
 1675              	.LVL77:
 1676              	.L145:
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Change CAN state */
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (FIFONumber == CAN_FIFO0)
 1677              		.loc 1 1036 0
 1678 007c C1B9     		cbnz	r1, .L147
1037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     switch(hcan->State)
 1679              		.loc 1 1038 0
 1680 007e 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 1681 0082 DBB2     		uxtb	r3, r3
 1682 0084 322B     		cmp	r3, #50
 1683 0086 07D0     		beq	.L149
 1684 0088 522B     		cmp	r3, #82
 1685 008a 09D0     		beq	.L150
 1686 008c 122B     		cmp	r3, #18
 1687 008e 0BD1     		bne	.L159
1039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX):
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0;
 1688              		.loc 1 1041 0
 1689 0090 4223     		movs	r3, #66
 1690 0092 80F83D30 		strb	r3, [r0, #61]
1042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 1691              		.loc 1 1042 0
 1692 0096 23E0     		b	.L152
 1693              	.L149:
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX1):
1044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0_RX1;
 1694              		.loc 1 1044 0
 1695 0098 6223     		movs	r3, #98
 1696 009a 80F83D30 		strb	r3, [r0, #61]
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 1697              		.loc 1 1045 0
 1698 009e 1FE0     		b	.L152
 1699              	.L150:
1046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX1):
1047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0_RX1;
 1700              		.loc 1 1047 0
 1701 00a0 7223     		movs	r3, #114
 1702 00a2 80F83D30 		strb	r3, [r0, #61]
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 1703              		.loc 1 1048 0
 1704 00a6 1BE0     		b	.L152
 1705              	.L159:
1049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
1050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0;
 1706              		.loc 1 1050 0
ARM GAS  /tmp/ccofRh1B.s 			page 51


 1707 00a8 2223     		movs	r3, #34
 1708 00aa 80F83D30 		strb	r3, [r0, #61]
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 1709              		.loc 1 1051 0
 1710 00ae 17E0     		b	.L152
 1711              	.L147:
1052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
1055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     switch(hcan->State)
 1712              		.loc 1 1056 0
 1713 00b0 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 1714 00b4 DBB2     		uxtb	r3, r3
 1715 00b6 222B     		cmp	r3, #34
 1716 00b8 07D0     		beq	.L154
 1717 00ba 422B     		cmp	r3, #66
 1718 00bc 09D0     		beq	.L155
 1719 00be 122B     		cmp	r3, #18
 1720 00c0 0BD1     		bne	.L160
1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX):
1059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX1;
 1721              		.loc 1 1059 0
 1722 00c2 5223     		movs	r3, #82
 1723 00c4 80F83D30 		strb	r3, [r0, #61]
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 1724              		.loc 1 1060 0
 1725 00c8 0AE0     		b	.L152
 1726              	.L154:
1061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0):
1062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0_RX1;
 1727              		.loc 1 1062 0
 1728 00ca 6223     		movs	r3, #98
 1729 00cc 80F83D30 		strb	r3, [r0, #61]
1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 1730              		.loc 1 1063 0
 1731 00d0 06E0     		b	.L152
 1732              	.L155:
1064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0):
1065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0_RX1;
 1733              		.loc 1 1065 0
 1734 00d2 7223     		movs	r3, #114
 1735 00d4 80F83D30 		strb	r3, [r0, #61]
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 1736              		.loc 1 1066 0
 1737 00d8 02E0     		b	.L152
 1738              	.L160:
1067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
1068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX1;
 1739              		.loc 1 1068 0
 1740 00da 3223     		movs	r3, #50
 1741 00dc 80F83D30 		strb	r3, [r0, #61]
 1742              	.L152:
1069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
ARM GAS  /tmp/ccofRh1B.s 			page 52


1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Set CAN error code to none */
1074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 1743              		.loc 1 1074 0
 1744 00e0 0022     		movs	r2, #0
 1745 00e2 0264     		str	r2, [r0, #64]
1075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Enable interrupts: */
1077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /*  - Enable Error warning Interrupt */
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /*  - Enable Error passive Interrupt */
1079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /*  - Enable Bus-off Interrupt */
1080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /*  - Enable Last error code Interrupt */
1081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /*  - Enable Error Interrupt */
1082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   __HAL_CAN_ENABLE_IT(hcan, CAN_IT_EWG |
 1746              		.loc 1 1082 0
 1747 00e4 0468     		ldr	r4, [r0]
 1748 00e6 6369     		ldr	r3, [r4, #20]
 1749 00e8 43F40F43 		orr	r3, r3, #36608
 1750 00ec 6361     		str	r3, [r4, #20]
1083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                             CAN_IT_EPV |
1084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                             CAN_IT_BOF |
1085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                             CAN_IT_LEC |
1086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                             CAN_IT_ERR);
1087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Process unlocked */
1089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   __HAL_UNLOCK(hcan);
 1751              		.loc 1 1089 0
 1752 00ee 80F83C20 		strb	r2, [r0, #60]
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if(FIFONumber == CAN_FIFO0)
 1753              		.loc 1 1091 0
 1754 00f2 31B9     		cbnz	r1, .L157
1092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Enable FIFO 0 overrun and message pending Interrupt */
1094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     __HAL_CAN_ENABLE_IT(hcan, CAN_IT_FOV0 | CAN_IT_FMP0);
 1755              		.loc 1 1094 0
 1756 00f4 0268     		ldr	r2, [r0]
 1757 00f6 5369     		ldr	r3, [r2, #20]
 1758 00f8 43F00A03 		orr	r3, r3, #10
 1759 00fc 5361     		str	r3, [r2, #20]
1095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Enable FIFO 1 overrun and message pending Interrupt */
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     __HAL_CAN_ENABLE_IT(hcan, CAN_IT_FOV1 | CAN_IT_FMP1);
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
1102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Return function status */
1103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   return HAL_OK;
 1760              		.loc 1 1103 0
 1761 00fe 0020     		movs	r0, #0
 1762              	.LVL78:
 1763 0100 07E0     		b	.L142
 1764              	.LVL79:
 1765              	.L157:
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 1766              		.loc 1 1099 0
ARM GAS  /tmp/ccofRh1B.s 			page 53


 1767 0102 0268     		ldr	r2, [r0]
 1768 0104 5369     		ldr	r3, [r2, #20]
 1769 0106 43F05003 		orr	r3, r3, #80
 1770 010a 5361     		str	r3, [r2, #20]
 1771              		.loc 1 1103 0
 1772 010c 0020     		movs	r0, #0
 1773              	.LVL80:
 1774 010e 00E0     		b	.L142
 1775              	.LVL81:
 1776              	.L158:
1009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 1777              		.loc 1 1009 0
 1778 0110 0220     		movs	r0, #2
 1779              	.LVL82:
 1780              	.L142:
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 1781              		.loc 1 1104 0
 1782 0112 5DF8044B 		ldr	r4, [sp], #4
 1783              	.LCFI13:
 1784              		.cfi_restore 4
 1785              		.cfi_def_cfa_offset 0
 1786 0116 7047     		bx	lr
 1787              		.cfi_endproc
 1788              	.LFE132:
 1790              		.section	.text.HAL_CAN_Sleep,"ax",%progbits
 1791              		.align	2
 1792              		.global	HAL_CAN_Sleep
 1793              		.thumb
 1794              		.thumb_func
 1796              	HAL_CAN_Sleep:
 1797              	.LFB133:
1105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Enters the Sleep (low power) mode.
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval HAL status.
1111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Sleep(CAN_HandleTypeDef* hcan)
1113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 1798              		.loc 1 1113 0
 1799              		.cfi_startproc
 1800              		@ args = 0, pretend = 0, frame = 0
 1801              		@ frame_needed = 0, uses_anonymous_args = 0
 1802              	.LVL83:
 1803 0000 38B5     		push	{r3, r4, r5, lr}
 1804              	.LCFI14:
 1805              		.cfi_def_cfa_offset 16
 1806              		.cfi_offset 3, -16
 1807              		.cfi_offset 4, -12
 1808              		.cfi_offset 5, -8
 1809              		.cfi_offset 14, -4
 1810              	.LVL84:
1114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t tickstart = 0U;
1115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****    
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Process locked */
1117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   __HAL_LOCK(hcan);
ARM GAS  /tmp/ccofRh1B.s 			page 54


 1811              		.loc 1 1117 0
 1812 0002 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1813 0006 012B     		cmp	r3, #1
 1814 0008 3BD0     		beq	.L168
 1815              		.loc 1 1117 0 is_stmt 0 discriminator 2
 1816 000a 0123     		movs	r3, #1
 1817 000c 80F83C30 		strb	r3, [r0, #60]
1118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
1119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Change CAN state */
1120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_BUSY; 
 1818              		.loc 1 1120 0 is_stmt 1 discriminator 2
 1819 0010 0223     		movs	r3, #2
 1820 0012 80F83D30 		strb	r3, [r0, #61]
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     
1122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Request Sleep mode */
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   MODIFY_REG(hcan->Instance->MCR,
 1821              		.loc 1 1123 0 discriminator 2
 1822 0016 0268     		ldr	r2, [r0]
 1823 0018 1368     		ldr	r3, [r2]
 1824 001a 23F00303 		bic	r3, r3, #3
 1825 001e 43F00203 		orr	r3, r3, #2
 1826 0022 1360     		str	r3, [r2]
1124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****              CAN_MCR_INRQ       ,
1125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****              CAN_MCR_SLEEP       );
1126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****    
1127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Sleep mode status */
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (HAL_IS_BIT_CLR(hcan->Instance->MSR, CAN_MSR_SLAK) ||
 1827              		.loc 1 1128 0 discriminator 2
 1828 0024 0368     		ldr	r3, [r0]
 1829 0026 5A68     		ldr	r2, [r3, #4]
 1830 0028 12F0020F 		tst	r2, #2
 1831 002c 03D0     		beq	.L164
1129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_INAK)   )
 1832              		.loc 1 1129 0 discriminator 1
 1833 002e 5B68     		ldr	r3, [r3, #4]
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_INAK)   )
 1834              		.loc 1 1128 0 discriminator 1
 1835 0030 13F0010F 		tst	r3, #1
 1836 0034 04D0     		beq	.L165
 1837              	.L164:
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Process unlocked */
1132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     __HAL_UNLOCK(hcan);
 1838              		.loc 1 1132 0
 1839 0036 0023     		movs	r3, #0
 1840 0038 80F83C30 		strb	r3, [r0, #60]
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Return function status */
1135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_ERROR;
 1841              		.loc 1 1135 0
 1842 003c 0120     		movs	r0, #1
 1843              	.LVL85:
 1844 003e 38BD     		pop	{r3, r4, r5, pc}
 1845              	.LVL86:
 1846              	.L165:
 1847 0040 0446     		mov	r4, r0
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
ARM GAS  /tmp/ccofRh1B.s 			page 55


1137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Get tick */
1139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   tickstart = HAL_GetTick();   
 1848              		.loc 1 1139 0
 1849 0042 FFF7FEFF 		bl	HAL_GetTick
 1850              	.LVL87:
 1851 0046 0546     		mov	r5, r0
 1852              	.LVL88:
1140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
1141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Wait the acknowledge */
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   while (HAL_IS_BIT_CLR(hcan->Instance->MSR, CAN_MSR_SLAK) ||
 1853              		.loc 1 1142 0
 1854 0048 0BE0     		b	.L166
 1855              	.LVL89:
 1856              	.L167:
1143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****          HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_INAK)   )
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 1857              		.loc 1 1145 0
 1858 004a FFF7FEFF 		bl	HAL_GetTick
 1859              	.LVL90:
 1860 004e 401B     		subs	r0, r0, r5
 1861 0050 0A28     		cmp	r0, #10
 1862 0052 06D9     		bls	.L166
1146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_TIMEOUT;
 1863              		.loc 1 1147 0
 1864 0054 0320     		movs	r0, #3
 1865 0056 84F83D00 		strb	r0, [r4, #61]
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Process unlocked */
1149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       __HAL_UNLOCK(hcan);
 1866              		.loc 1 1149 0
 1867 005a 0023     		movs	r3, #0
 1868 005c 84F83C30 		strb	r3, [r4, #60]
1150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       return HAL_TIMEOUT;
 1869              		.loc 1 1150 0
 1870 0060 38BD     		pop	{r3, r4, r5, pc}
 1871              	.LVL91:
 1872              	.L166:
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****          HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_INAK)   )
 1873              		.loc 1 1142 0
 1874 0062 2368     		ldr	r3, [r4]
 1875 0064 5A68     		ldr	r2, [r3, #4]
 1876 0066 12F0020F 		tst	r2, #2
 1877 006a EED0     		beq	.L167
1143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 1878              		.loc 1 1143 0 discriminator 1
 1879 006c 5B68     		ldr	r3, [r3, #4]
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****          HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_INAK)   )
 1880              		.loc 1 1142 0 discriminator 1
 1881 006e 13F0010F 		tst	r3, #1
 1882 0072 EAD1     		bne	.L167
1151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
1154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Change CAN state */
1155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_READY;
ARM GAS  /tmp/ccofRh1B.s 			page 56


 1883              		.loc 1 1155 0
 1884 0074 0123     		movs	r3, #1
 1885 0076 84F83D30 		strb	r3, [r4, #61]
1156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
1157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Process unlocked */
1158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   __HAL_UNLOCK(hcan);
 1886              		.loc 1 1158 0
 1887 007a 0020     		movs	r0, #0
 1888 007c 84F83C00 		strb	r0, [r4, #60]
1159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
1160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Return function status */
1161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   return HAL_OK;
 1889              		.loc 1 1161 0
 1890 0080 38BD     		pop	{r3, r4, r5, pc}
 1891              	.LVL92:
 1892              	.L168:
1117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
 1893              		.loc 1 1117 0
 1894 0082 0220     		movs	r0, #2
 1895              	.LVL93:
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 1896              		.loc 1 1162 0
 1897 0084 38BD     		pop	{r3, r4, r5, pc}
 1898              		.cfi_endproc
 1899              	.LFE133:
 1901 0086 00BF     		.section	.text.HAL_CAN_WakeUp,"ax",%progbits
 1902              		.align	2
 1903              		.global	HAL_CAN_WakeUp
 1904              		.thumb
 1905              		.thumb_func
 1907              	HAL_CAN_WakeUp:
 1908              	.LFB134:
1163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Wakes up the CAN peripheral from sleep mode, after that the CAN peripheral
1166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         is in the normal mode.
1167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval HAL status.
1170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_WakeUp(CAN_HandleTypeDef* hcan)
1172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 1909              		.loc 1 1172 0
 1910              		.cfi_startproc
 1911              		@ args = 0, pretend = 0, frame = 0
 1912              		@ frame_needed = 0, uses_anonymous_args = 0
 1913              	.LVL94:
 1914 0000 38B5     		push	{r3, r4, r5, lr}
 1915              	.LCFI15:
 1916              		.cfi_def_cfa_offset 16
 1917              		.cfi_offset 3, -16
 1918              		.cfi_offset 4, -12
 1919              		.cfi_offset 5, -8
 1920              		.cfi_offset 14, -4
 1921              	.LVL95:
1173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t tickstart = 0U;
1174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     
ARM GAS  /tmp/ccofRh1B.s 			page 57


1175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Process locked */
1176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   __HAL_LOCK(hcan);
 1922              		.loc 1 1176 0
 1923 0002 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1924 0006 012B     		cmp	r3, #1
 1925 0008 30D0     		beq	.L175
 1926 000a 0446     		mov	r4, r0
 1927              		.loc 1 1176 0 is_stmt 0 discriminator 2
 1928 000c 0123     		movs	r3, #1
 1929 000e 80F83C30 		strb	r3, [r0, #60]
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
1178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Change CAN state */
1179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_BUSY;  
 1930              		.loc 1 1179 0 is_stmt 1 discriminator 2
 1931 0012 0223     		movs	r3, #2
 1932 0014 80F83D30 		strb	r3, [r0, #61]
1180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****  
1181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Wake up request */
1182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 1933              		.loc 1 1182 0 discriminator 2
 1934 0018 0268     		ldr	r2, [r0]
 1935 001a 1368     		ldr	r3, [r2]
 1936 001c 23F00203 		bic	r3, r3, #2
 1937 0020 1360     		str	r3, [r2]
1183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     
1184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Get tick */
1185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   tickstart = HAL_GetTick();   
 1938              		.loc 1 1185 0 discriminator 2
 1939 0022 FFF7FEFF 		bl	HAL_GetTick
 1940              	.LVL96:
 1941 0026 0546     		mov	r5, r0
 1942              	.LVL97:
1186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
1187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Sleep mode status */
1188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   while(HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_SLAK))
 1943              		.loc 1 1188 0 discriminator 2
 1944 0028 0BE0     		b	.L172
 1945              	.LVL98:
 1946              	.L173:
1189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 1947              		.loc 1 1190 0
 1948 002a FFF7FEFF 		bl	HAL_GetTick
 1949              	.LVL99:
 1950 002e 401B     		subs	r0, r0, r5
 1951 0030 0A28     		cmp	r0, #10
 1952 0032 06D9     		bls	.L172
1191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       hcan->State= HAL_CAN_STATE_TIMEOUT;
 1953              		.loc 1 1192 0
 1954 0034 0320     		movs	r0, #3
 1955 0036 84F83D00 		strb	r0, [r4, #61]
1193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Process unlocked */
1195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       __HAL_UNLOCK(hcan);
 1956              		.loc 1 1195 0
 1957 003a 0023     		movs	r3, #0
ARM GAS  /tmp/ccofRh1B.s 			page 58


 1958 003c 84F83C30 		strb	r3, [r4, #60]
1196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       return HAL_TIMEOUT;
 1959              		.loc 1 1197 0
 1960 0040 38BD     		pop	{r3, r4, r5, pc}
 1961              	.LVL100:
 1962              	.L172:
1188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 1963              		.loc 1 1188 0
 1964 0042 2368     		ldr	r3, [r4]
 1965 0044 5A68     		ldr	r2, [r3, #4]
 1966 0046 12F0020F 		tst	r2, #2
 1967 004a EED1     		bne	.L173
1198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if(HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_SLAK))
 1968              		.loc 1 1201 0
 1969 004c 5B68     		ldr	r3, [r3, #4]
 1970 004e 13F0020F 		tst	r3, #2
 1971 0052 04D0     		beq	.L174
1202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Process unlocked */
1204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     __HAL_UNLOCK(hcan);
 1972              		.loc 1 1204 0
 1973 0054 0023     		movs	r3, #0
 1974 0056 84F83C30 		strb	r3, [r4, #60]
1205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Return function status */
1207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     return HAL_ERROR;
 1975              		.loc 1 1207 0
 1976 005a 0120     		movs	r0, #1
 1977 005c 38BD     		pop	{r3, r4, r5, pc}
 1978              	.LVL101:
 1979              	.L174:
1208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
1210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Change CAN state */
1211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_READY; 
 1980              		.loc 1 1211 0
 1981 005e 0123     		movs	r3, #1
 1982 0060 84F83D30 		strb	r3, [r4, #61]
1212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
1213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Process unlocked */
1214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   __HAL_UNLOCK(hcan);
 1983              		.loc 1 1214 0
 1984 0064 0020     		movs	r0, #0
 1985 0066 84F83C00 		strb	r0, [r4, #60]
1215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
1216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Return function status */
1217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   return HAL_OK;
 1986              		.loc 1 1217 0
 1987 006a 38BD     		pop	{r3, r4, r5, pc}
 1988              	.LVL102:
 1989              	.L175:
1176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
 1990              		.loc 1 1176 0
ARM GAS  /tmp/ccofRh1B.s 			page 59


 1991 006c 0220     		movs	r0, #2
 1992              	.LVL103:
1218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 1993              		.loc 1 1218 0
 1994 006e 38BD     		pop	{r3, r4, r5, pc}
 1995              		.cfi_endproc
 1996              	.LFE134:
 1998              		.section	.text.HAL_CAN_TxCpltCallback,"ax",%progbits
 1999              		.align	2
 2000              		.weak	HAL_CAN_TxCpltCallback
 2001              		.thumb
 2002              		.thumb_func
 2004              	HAL_CAN_TxCpltCallback:
 2005              	.LFB136:
1219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Handles CAN interrupt request  
1222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
1225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** void HAL_CAN_IRQHandler(CAN_HandleTypeDef* hcan)
1227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
1228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
1229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check Overrun flag for FIFO0 */
1231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if((__HAL_CAN_GET_FLAG(hcan, CAN_FLAG_FOV0))    &&
1232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FOV0)))
1233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Set CAN error code to FOV0 error */
1235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     errorcode |= HAL_CAN_ERROR_FOV0;
1236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Clear FIFO0 Overrun Flag */
1238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV0);
1239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check Overrun flag for FIFO1 */
1242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if((__HAL_CAN_GET_FLAG(hcan, CAN_FLAG_FOV1))    &&
1243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FOV1)))
1244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Set CAN error code to FOV1 error */
1246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     errorcode |= HAL_CAN_ERROR_FOV1;
1247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Clear FIFO1 Overrun Flag */
1249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV1);
1250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check End of transmission flag */
1253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if(__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_TME))
1254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Check Transmit request completion status */
1256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     if((__HAL_CAN_TRANSMIT_STATUS(hcan, CAN_TXMAILBOX_0)) ||
1257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****        (__HAL_CAN_TRANSMIT_STATUS(hcan, CAN_TXMAILBOX_1)) ||
1258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****        (__HAL_CAN_TRANSMIT_STATUS(hcan, CAN_TXMAILBOX_2)))
1259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Check Transmit success */
1261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       if((__HAL_CAN_GET_FLAG(hcan, CAN_FLAG_TXOK0)) ||
ARM GAS  /tmp/ccofRh1B.s 			page 60


1262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****          (__HAL_CAN_GET_FLAG(hcan, CAN_FLAG_TXOK1)) ||
1263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****          (__HAL_CAN_GET_FLAG(hcan, CAN_FLAG_TXOK2)))
1264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
1265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Call transmit function */
1266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         CAN_Transmit_IT(hcan);
1267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
1268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       else /* Transmit failure */
1269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
1270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         /* Set CAN error code to TXFAIL error */
1271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_TXFAIL;
1272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
1273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       /* Clear transmission status flags (RQCPx and TXOKx) */
1275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_RQCP0  | CAN_TSR_RQCP1  | CAN_TSR_RQCP2 | \
1276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                    CAN_FLAG_TXOK0 | CAN_FLAG_TXOK1 | CAN_FLAG_TXOK2);
1277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
1280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check End of reception flag for FIFO0 */
1281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if((__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FMP0)) &&
1282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      (__HAL_CAN_MSG_PENDING(hcan, CAN_FIFO0) != 0U))
1283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Call receive function */
1285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     CAN_Receive_IT(hcan, CAN_FIFO0);
1286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
1288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check End of reception flag for FIFO1 */
1289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if((__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FMP1)) &&
1290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      (__HAL_CAN_MSG_PENDING(hcan, CAN_FIFO1) != 0U))
1291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Call receive function */
1293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     CAN_Receive_IT(hcan, CAN_FIFO1);
1294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
1296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Set error code in handle */
1297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   hcan->ErrorCode |= errorcode;
1298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check Error Warning Flag */
1300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if((__HAL_CAN_GET_FLAG(hcan, CAN_FLAG_EWG))    &&
1301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_EWG)) &&
1302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR)))
1303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Set CAN error code to EWG error */
1305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_EWG;
1306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* No need for clear of Error Warning Flag as read-only */
1307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
1309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check Error Passive Flag */
1310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if((__HAL_CAN_GET_FLAG(hcan, CAN_FLAG_EPV))    &&
1311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_EPV)) &&
1312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR)))
1313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Set CAN error code to EPV error */
1315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_EPV;
1316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* No need for clear of Error Passive Flag as read-only */ 
1317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
ARM GAS  /tmp/ccofRh1B.s 			page 61


1319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check Bus-Off Flag */
1320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if((__HAL_CAN_GET_FLAG(hcan, CAN_FLAG_BOF))    &&
1321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_BOF)) &&
1322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR)))
1323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Set CAN error code to BOF error */
1325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_BOF;
1326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* No need for clear of Bus-Off Flag as read-only */
1327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
1329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Check Last error code Flag */
1330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if((!HAL_IS_BIT_CLR(hcan->Instance->ESR, CAN_ESR_LEC)) &&
1331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_LEC))         &&
1332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR)))
1333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     switch(hcan->Instance->ESR & CAN_ESR_LEC)
1335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(CAN_ESR_LEC_0):
1337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           /* Set CAN error code to STF error */
1338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           hcan->ErrorCode |= HAL_CAN_ERROR_STF;
1339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           break;
1340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(CAN_ESR_LEC_1):
1341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           /* Set CAN error code to FOR error */
1342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           hcan->ErrorCode |= HAL_CAN_ERROR_FOR;
1343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           break;
1344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(CAN_ESR_LEC_1 | CAN_ESR_LEC_0):
1345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           /* Set CAN error code to ACK error */
1346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           hcan->ErrorCode |= HAL_CAN_ERROR_ACK;
1347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           break;
1348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(CAN_ESR_LEC_2):
1349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           /* Set CAN error code to BR error */
1350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           hcan->ErrorCode |= HAL_CAN_ERROR_BR;
1351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           break;
1352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(CAN_ESR_LEC_2 | CAN_ESR_LEC_0):
1353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           /* Set CAN error code to BD error */
1354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           hcan->ErrorCode |= HAL_CAN_ERROR_BD;
1355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           break;
1356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(CAN_ESR_LEC_2 | CAN_ESR_LEC_1):
1357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           /* Set CAN error code to CRC error */
1358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           hcan->ErrorCode |= HAL_CAN_ERROR_CRC;
1359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           break;
1360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       default:
1361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           break;
1362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Clear Last error code Flag */ 
1365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->ESR, CAN_ESR_LEC);
1366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Call the Error call Back in case of Errors */
1369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if(hcan->ErrorCode != HAL_CAN_ERROR_NONE)
1370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Clear ERRI Flag */ 
1372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     SET_BIT(hcan->Instance->MSR, CAN_MSR_ERRI);
1373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Set the CAN state ready to be able to start again the process */
1375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_READY;
ARM GAS  /tmp/ccofRh1B.s 			page 62


1376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Disable interrupts: */
1378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /*  - Disable Error warning Interrupt */
1379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /*  - Disable Error passive Interrupt */
1380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /*  - Disable Bus-off Interrupt */
1381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /*  - Disable Last error code Interrupt */
1382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /*  - Disable Error Interrupt */
1383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /*  - Disable FIFO 0 message pending Interrupt */
1384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /*  - Disable FIFO 0 Overrun Interrupt */
1385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /*  - Disable FIFO 1 message pending Interrupt */
1386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /*  - Disable FIFO 1 Overrun Interrupt */
1387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /*  - Disable Transmit mailbox empty Interrupt */
1388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     __HAL_CAN_DISABLE_IT(hcan, CAN_IT_EWG |
1389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                CAN_IT_EPV |
1390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                CAN_IT_BOF |
1391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                CAN_IT_LEC |
1392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                CAN_IT_ERR |
1393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                CAN_IT_FMP0|
1394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                CAN_IT_FOV0|
1395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                CAN_IT_FMP1|
1396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                CAN_IT_FOV1|
1397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                CAN_IT_TME  );
1398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Call Error callback function */
1400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     HAL_CAN_ErrorCallback(hcan);
1401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }  
1402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
1403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Transmission  complete callback in non blocking mode 
1406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
1409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** __weak void HAL_CAN_TxCpltCallback(CAN_HandleTypeDef* hcan)
1411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 2006              		.loc 1 1411 0
 2007              		.cfi_startproc
 2008              		@ args = 0, pretend = 0, frame = 0
 2009              		@ frame_needed = 0, uses_anonymous_args = 0
 2010              		@ link register save eliminated.
 2011              	.LVL104:
 2012 0000 7047     		bx	lr
 2013              		.cfi_endproc
 2014              	.LFE136:
 2016 0002 00BF     		.section	.text.CAN_Transmit_IT,"ax",%progbits
 2017              		.align	2
 2018              		.thumb
 2019              		.thumb_func
 2021              	CAN_Transmit_IT:
 2022              	.LFB141:
1412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
1413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   UNUSED(hcan);
1414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             the HAL_CAN_TxCpltCallback could be implemented in the user file
1417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****    */
ARM GAS  /tmp/ccofRh1B.s 			page 63


1418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
1419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Transmission  complete callback in non blocking mode 
1422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
1425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** __weak void HAL_CAN_RxCpltCallback(CAN_HandleTypeDef* hcan)
1427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
1428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
1429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   UNUSED(hcan);
1430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             the HAL_CAN_RxCpltCallback could be implemented in the user file
1433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****    */
1434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
1435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Error CAN callback.
1438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
1441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** __weak void HAL_CAN_ErrorCallback(CAN_HandleTypeDef *hcan)
1443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
1444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
1445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   UNUSED(hcan);
1446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             the HAL_CAN_ErrorCallback could be implemented in the user file
1449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****    */
1450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
1451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @}
1454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group3 Peripheral State and Error functions
1457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****  *  @brief   CAN Peripheral State functions 
1458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****  *
1459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** @verbatim   
1460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ==============================================================================
1461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****             ##### Peripheral State and Error functions #####
1462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   ==============================================================================
1463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     [..]
1464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     This subsection provides functions allowing to :
1465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) Check the CAN state.
1466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       (+) Check CAN Errors detected during interrupt process
1467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****          
1468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** @endverbatim
1469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @{
1470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  return the CAN state
1474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
ARM GAS  /tmp/ccofRh1B.s 			page 64


1475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval HAL state
1477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** HAL_CAN_StateTypeDef HAL_CAN_GetState(CAN_HandleTypeDef* hcan)
1479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
1480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Return CAN state */
1481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   return hcan->State;
1482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
1483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Return the CAN error code
1486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.
1488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval CAN Error Code
1489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** uint32_t HAL_CAN_GetError(CAN_HandleTypeDef *hcan)
1491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
1492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   return hcan->ErrorCode;
1493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
1494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @}
1497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @}
1501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
1503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /** @addtogroup CAN_Private_Functions CAN Private Functions
1504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****  *  @brief    CAN Frame message Rx/Tx functions 
1505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****  *
1506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****  * @{
1507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****  */
1508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Initiates and transmits a CAN frame message.
1511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.  
1513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval HAL status
1514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** static HAL_StatusTypeDef CAN_Transmit_IT(CAN_HandleTypeDef* hcan)
1516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 2023              		.loc 1 1516 0
 2024              		.cfi_startproc
 2025              		@ args = 0, pretend = 0, frame = 0
 2026              		@ frame_needed = 0, uses_anonymous_args = 0
 2027              	.LVL105:
 2028              		.loc 1 1516 0
 2029 0000 08B5     		push	{r3, lr}
 2030              	.LCFI16:
 2031              		.cfi_def_cfa_offset 8
 2032              		.cfi_offset 3, -8
 2033              		.cfi_offset 14, -4
1517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Disable Transmit mailbox empty Interrupt */
1518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   __HAL_CAN_DISABLE_IT(hcan, CAN_IT_TME);
 2034              		.loc 1 1518 0
 2035 0002 0268     		ldr	r2, [r0]
ARM GAS  /tmp/ccofRh1B.s 			page 65


 2036 0004 5369     		ldr	r3, [r2, #20]
 2037 0006 23F00103 		bic	r3, r3, #1
 2038 000a 5361     		str	r3, [r2, #20]
1519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
1520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if(hcan->State == HAL_CAN_STATE_BUSY_TX)
 2039              		.loc 1 1520 0
 2040 000c 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 2041 0010 DBB2     		uxtb	r3, r3
 2042 0012 122B     		cmp	r3, #18
 2043 0014 04D1     		bne	.L179
1521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {   
1522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Disable interrupts: */
1523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /*  - Disable Error warning Interrupt */
1524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /*  - Disable Error passive Interrupt */
1525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /*  - Disable Bus-off Interrupt */
1526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /*  - Disable Last error code Interrupt */
1527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /*  - Disable Error Interrupt */
1528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     __HAL_CAN_DISABLE_IT(hcan, CAN_IT_EWG |
 2044              		.loc 1 1528 0
 2045 0016 0268     		ldr	r2, [r0]
 2046 0018 5369     		ldr	r3, [r2, #20]
 2047 001a 23F40F43 		bic	r3, r3, #36608
 2048 001e 5361     		str	r3, [r2, #20]
 2049              	.L179:
1529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                CAN_IT_EPV |
1530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                CAN_IT_BOF |
1531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                CAN_IT_LEC |
1532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                CAN_IT_ERR );
1533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Change CAN state */
1536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   switch(hcan->State)
 2050              		.loc 1 1536 0
 2051 0020 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 2052 0024 DBB2     		uxtb	r3, r3
 2053 0026 522B     		cmp	r3, #82
 2054 0028 07D0     		beq	.L181
 2055 002a 722B     		cmp	r3, #114
 2056 002c 09D0     		beq	.L182
 2057 002e 422B     		cmp	r3, #66
 2058 0030 0BD1     		bne	.L185
1537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     case(HAL_CAN_STATE_BUSY_TX_RX0):
1539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_BUSY_RX0;
 2059              		.loc 1 1539 0
 2060 0032 2223     		movs	r3, #34
 2061 0034 80F83D30 		strb	r3, [r0, #61]
1540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       break;
 2062              		.loc 1 1540 0
 2063 0038 0AE0     		b	.L184
 2064              	.L181:
1541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     case(HAL_CAN_STATE_BUSY_TX_RX1):
1542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_BUSY_RX1;
 2065              		.loc 1 1542 0
 2066 003a 3223     		movs	r3, #50
 2067 003c 80F83D30 		strb	r3, [r0, #61]
1543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       break;
ARM GAS  /tmp/ccofRh1B.s 			page 66


 2068              		.loc 1 1543 0
 2069 0040 06E0     		b	.L184
 2070              	.L182:
1544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
1545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_BUSY_RX0_RX1;
 2071              		.loc 1 1545 0
 2072 0042 6223     		movs	r3, #98
 2073 0044 80F83D30 		strb	r3, [r0, #61]
1546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       break;
 2074              		.loc 1 1546 0
 2075 0048 02E0     		b	.L184
 2076              	.L185:
1547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     default: /* HAL_CAN_STATE_BUSY_TX */
1548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_READY;
 2077              		.loc 1 1548 0
 2078 004a 0123     		movs	r3, #1
 2079 004c 80F83D30 		strb	r3, [r0, #61]
 2080              	.L184:
1549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       break;
1550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Transmission complete callback */ 
1553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_TxCpltCallback(hcan);
 2081              		.loc 1 1553 0
 2082 0050 FFF7FEFF 		bl	HAL_CAN_TxCpltCallback
 2083              	.LVL106:
1554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
1555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   return HAL_OK;
1556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 2084              		.loc 1 1556 0
 2085 0054 0020     		movs	r0, #0
 2086 0056 08BD     		pop	{r3, pc}
 2087              		.cfi_endproc
 2088              	.LFE141:
 2090              		.section	.text.HAL_CAN_RxCpltCallback,"ax",%progbits
 2091              		.align	2
 2092              		.weak	HAL_CAN_RxCpltCallback
 2093              		.thumb
 2094              		.thumb_func
 2096              	HAL_CAN_RxCpltCallback:
 2097              	.LFB137:
1427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 2098              		.loc 1 1427 0
 2099              		.cfi_startproc
 2100              		@ args = 0, pretend = 0, frame = 0
 2101              		@ frame_needed = 0, uses_anonymous_args = 0
 2102              		@ link register save eliminated.
 2103              	.LVL107:
 2104 0000 7047     		bx	lr
 2105              		.cfi_endproc
 2106              	.LFE137:
 2108 0002 00BF     		.section	.text.CAN_Receive_IT,"ax",%progbits
 2109              		.align	2
 2110              		.thumb
 2111              		.thumb_func
 2113              	CAN_Receive_IT:
 2114              	.LFB142:
ARM GAS  /tmp/ccofRh1B.s 			page 67


1557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** /**
1559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @brief  Receives a correct CAN frame.
1560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  hcan       Pointer to a CAN_HandleTypeDef structure that contains
1561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   *         the configuration information for the specified CAN.  
1562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @param  FIFONumber Specify the FIFO number    
1563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval HAL status
1564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   * @retval None
1565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   */
1566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** static HAL_StatusTypeDef CAN_Receive_IT(CAN_HandleTypeDef* hcan, uint8_t FIFONumber)
1567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** {
 2115              		.loc 1 1567 0
 2116              		.cfi_startproc
 2117              		@ args = 0, pretend = 0, frame = 0
 2118              		@ frame_needed = 0, uses_anonymous_args = 0
 2119              	.LVL108:
 2120              		.loc 1 1567 0
 2121 0000 10B5     		push	{r4, lr}
 2122              	.LCFI17:
 2123              		.cfi_def_cfa_offset 8
 2124              		.cfi_offset 4, -8
 2125              		.cfi_offset 14, -4
 2126              	.LVL109:
1568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   CanRxMsgTypeDef* pRxMsg = NULL;
1569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Set RxMsg pointer */
1571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if(FIFONumber == CAN_FIFO0)
 2127              		.loc 1 1571 0
 2128 0002 0C46     		mov	r4, r1
 2129 0004 09B9     		cbnz	r1, .L189
1572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     pRxMsg = hcan->pRxMsg;
 2130              		.loc 1 1573 0
 2131 0006 436B     		ldr	r3, [r0, #52]
 2132              	.LVL110:
 2133 0008 00E0     		b	.L190
 2134              	.LVL111:
 2135              	.L189:
1574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
1576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     pRxMsg = hcan->pRx1Msg;
 2136              		.loc 1 1577 0
 2137 000a 836B     		ldr	r3, [r0, #56]
 2138              	.LVL112:
 2139              	.L190:
1578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Get the Id */
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   pRxMsg->IDE = CAN_RI0R_IDE & hcan->Instance->sFIFOMailBox[FIFONumber].RIR;
 2140              		.loc 1 1581 0
 2141 000c 0168     		ldr	r1, [r0]
 2142              	.LVL113:
 2143 000e 04F11B02 		add	r2, r4, #27
 2144 0012 1201     		lsls	r2, r2, #4
 2145 0014 8A58     		ldr	r2, [r1, r2]
 2146 0016 02F00402 		and	r2, r2, #4
ARM GAS  /tmp/ccofRh1B.s 			page 68


 2147 001a 9A60     		str	r2, [r3, #8]
1582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (pRxMsg->IDE == CAN_ID_STD)
 2148              		.loc 1 1582 0
 2149 001c 3AB9     		cbnz	r2, .L191
1583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     pRxMsg->StdId = (CAN_RI0R_STID & hcan->Instance->sFIFOMailBox[FIFONumber].RIR) >> CAN_TI0R_STID
 2150              		.loc 1 1584 0
 2151 001e 0168     		ldr	r1, [r0]
 2152 0020 04F11B02 		add	r2, r4, #27
 2153 0024 1201     		lsls	r2, r2, #4
 2154 0026 8A58     		ldr	r2, [r1, r2]
 2155 0028 520D     		lsrs	r2, r2, #21
 2156 002a 1A60     		str	r2, [r3]
 2157 002c 06E0     		b	.L192
 2158              	.L191:
1585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else
1587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     pRxMsg->ExtId = (0xFFFFFFF8U & hcan->Instance->sFIFOMailBox[FIFONumber].RIR) >> CAN_RI0R_EXID_P
 2159              		.loc 1 1588 0
 2160 002e 0168     		ldr	r1, [r0]
 2161 0030 04F11B02 		add	r2, r4, #27
 2162 0034 1201     		lsls	r2, r2, #4
 2163 0036 8A58     		ldr	r2, [r1, r2]
 2164 0038 D208     		lsrs	r2, r2, #3
 2165 003a 5A60     		str	r2, [r3, #4]
 2166              	.L192:
1589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   pRxMsg->RTR = (CAN_RI0R_RTR & hcan->Instance->sFIFOMailBox[FIFONumber].RIR) >> CAN_RI0R_RTR_Pos;
 2167              		.loc 1 1590 0
 2168 003c 0168     		ldr	r1, [r0]
 2169 003e 04F11B02 		add	r2, r4, #27
 2170 0042 1201     		lsls	r2, r2, #4
 2171 0044 8958     		ldr	r1, [r1, r2]
 2172 0046 C1F34001 		ubfx	r1, r1, #1, #1
 2173 004a D960     		str	r1, [r3, #12]
1591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Get the DLC */
1592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   pRxMsg->DLC = (CAN_RDT0R_DLC & hcan->Instance->sFIFOMailBox[FIFONumber].RDTR) >> CAN_RDT0R_DLC_Po
 2174              		.loc 1 1592 0
 2175 004c 0168     		ldr	r1, [r0]
 2176 004e 1144     		add	r1, r1, r2
 2177 0050 4968     		ldr	r1, [r1, #4]
 2178 0052 01F00F01 		and	r1, r1, #15
 2179 0056 1961     		str	r1, [r3, #16]
1593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Get the FMI */
1594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   pRxMsg->FMI = (CAN_RDT0R_FMI & hcan->Instance->sFIFOMailBox[FIFONumber].RDTR) >> CAN_RDT0R_FMI_Po
 2180              		.loc 1 1594 0
 2181 0058 0168     		ldr	r1, [r0]
 2182 005a 0A44     		add	r2, r2, r1
 2183 005c 5268     		ldr	r2, [r2, #4]
 2184 005e C2F30722 		ubfx	r2, r2, #8, #8
 2185 0062 DA61     		str	r2, [r3, #28]
1595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Get the FIFONumber */
1596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   pRxMsg->FIFONumber = FIFONumber;
 2186              		.loc 1 1596 0
 2187 0064 1C62     		str	r4, [r3, #32]
1597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Get the data field */
ARM GAS  /tmp/ccofRh1B.s 			page 69


1598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   pRxMsg->Data[0] = (CAN_RDL0R_DATA0 & hcan->Instance->sFIFOMailBox[FIFONumber].RDLR) >> CAN_RDL0R_
 2188              		.loc 1 1598 0
 2189 0066 0168     		ldr	r1, [r0]
 2190 0068 2201     		lsls	r2, r4, #4
 2191 006a 1144     		add	r1, r1, r2
 2192 006c D1F8B811 		ldr	r1, [r1, #440]
 2193 0070 1975     		strb	r1, [r3, #20]
1599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   pRxMsg->Data[1] = (CAN_RDL0R_DATA1 & hcan->Instance->sFIFOMailBox[FIFONumber].RDLR) >> CAN_RDL0R_
 2194              		.loc 1 1599 0
 2195 0072 0168     		ldr	r1, [r0]
 2196 0074 1144     		add	r1, r1, r2
 2197 0076 D1F8B811 		ldr	r1, [r1, #440]
 2198 007a 090A     		lsrs	r1, r1, #8
 2199 007c 5975     		strb	r1, [r3, #21]
1600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   pRxMsg->Data[2] = (CAN_RDL0R_DATA2 & hcan->Instance->sFIFOMailBox[FIFONumber].RDLR) >> CAN_RDL0R_
 2200              		.loc 1 1600 0
 2201 007e 0168     		ldr	r1, [r0]
 2202 0080 1144     		add	r1, r1, r2
 2203 0082 D1F8B811 		ldr	r1, [r1, #440]
 2204 0086 090C     		lsrs	r1, r1, #16
 2205 0088 9975     		strb	r1, [r3, #22]
1601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   pRxMsg->Data[3] = (CAN_RDL0R_DATA3 & hcan->Instance->sFIFOMailBox[FIFONumber].RDLR) >> CAN_RDL0R_
 2206              		.loc 1 1601 0
 2207 008a 0168     		ldr	r1, [r0]
 2208 008c 1144     		add	r1, r1, r2
 2209 008e D1F8B811 		ldr	r1, [r1, #440]
 2210 0092 090E     		lsrs	r1, r1, #24
 2211 0094 D975     		strb	r1, [r3, #23]
1602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   pRxMsg->Data[4] = (CAN_RDH0R_DATA4 & hcan->Instance->sFIFOMailBox[FIFONumber].RDHR) >> CAN_RDH0R_
 2212              		.loc 1 1602 0
 2213 0096 0168     		ldr	r1, [r0]
 2214 0098 1144     		add	r1, r1, r2
 2215 009a D1F8BC11 		ldr	r1, [r1, #444]
 2216 009e 1976     		strb	r1, [r3, #24]
1603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   pRxMsg->Data[5] = (CAN_RDH0R_DATA5 & hcan->Instance->sFIFOMailBox[FIFONumber].RDHR) >> CAN_RDH0R_
 2217              		.loc 1 1603 0
 2218 00a0 0168     		ldr	r1, [r0]
 2219 00a2 1144     		add	r1, r1, r2
 2220 00a4 D1F8BC11 		ldr	r1, [r1, #444]
 2221 00a8 090A     		lsrs	r1, r1, #8
 2222 00aa 5976     		strb	r1, [r3, #25]
1604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   pRxMsg->Data[6] = (CAN_RDH0R_DATA6 & hcan->Instance->sFIFOMailBox[FIFONumber].RDHR) >> CAN_RDH0R_
 2223              		.loc 1 1604 0
 2224 00ac 0168     		ldr	r1, [r0]
 2225 00ae 1144     		add	r1, r1, r2
 2226 00b0 D1F8BC11 		ldr	r1, [r1, #444]
 2227 00b4 090C     		lsrs	r1, r1, #16
 2228 00b6 9976     		strb	r1, [r3, #26]
1605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   pRxMsg->Data[7] = (CAN_RDH0R_DATA7 & hcan->Instance->sFIFOMailBox[FIFONumber].RDHR) >> CAN_RDH0R_
 2229              		.loc 1 1605 0
 2230 00b8 0168     		ldr	r1, [r0]
 2231 00ba 0A44     		add	r2, r2, r1
 2232 00bc D2F8BC21 		ldr	r2, [r2, #444]
 2233 00c0 120E     		lsrs	r2, r2, #24
 2234 00c2 DA76     		strb	r2, [r3, #27]
1606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Release the FIFO */
ARM GAS  /tmp/ccofRh1B.s 			page 70


1608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Release FIFO0 */
1609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (FIFONumber == CAN_FIFO0)
 2235              		.loc 1 1609 0
 2236 00c4 54B9     		cbnz	r4, .L193
1610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     __HAL_CAN_FIFO_RELEASE(hcan, CAN_FIFO0);
 2237              		.loc 1 1611 0
 2238 00c6 0268     		ldr	r2, [r0]
 2239 00c8 D368     		ldr	r3, [r2, #12]
 2240              	.LVL114:
 2241 00ca 43F02003 		orr	r3, r3, #32
 2242 00ce D360     		str	r3, [r2, #12]
1612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     
1613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Disable FIFO 0 overrun and message pending Interrupt */
1614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     __HAL_CAN_DISABLE_IT(hcan, CAN_IT_FOV0 | CAN_IT_FMP0);
 2243              		.loc 1 1614 0
 2244 00d0 0268     		ldr	r2, [r0]
 2245 00d2 5369     		ldr	r3, [r2, #20]
 2246 00d4 23F00A03 		bic	r3, r3, #10
 2247 00d8 5361     		str	r3, [r2, #20]
 2248 00da 09E0     		b	.L194
 2249              	.LVL115:
 2250              	.L193:
1615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Release FIFO1 */
1617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
1618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     __HAL_CAN_FIFO_RELEASE(hcan, CAN_FIFO1);
 2251              		.loc 1 1619 0
 2252 00dc 0268     		ldr	r2, [r0]
 2253 00de 1369     		ldr	r3, [r2, #16]
 2254              	.LVL116:
 2255 00e0 43F02003 		orr	r3, r3, #32
 2256 00e4 1361     		str	r3, [r2, #16]
1620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     
1621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Disable FIFO 1 overrun and message pending Interrupt */
1622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     __HAL_CAN_DISABLE_IT(hcan, CAN_IT_FOV1 | CAN_IT_FMP1);
 2257              		.loc 1 1622 0
 2258 00e6 0268     		ldr	r2, [r0]
 2259 00e8 5369     		ldr	r3, [r2, #20]
 2260 00ea 23F05003 		bic	r3, r3, #80
 2261 00ee 5361     		str	r3, [r2, #20]
 2262              	.L194:
1623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   
1625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if((hcan->State == HAL_CAN_STATE_BUSY_RX0) || (hcan->State == HAL_CAN_STATE_BUSY_RX1))
 2263              		.loc 1 1625 0
 2264 00f0 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 2265 00f4 DBB2     		uxtb	r3, r3
 2266 00f6 222B     		cmp	r3, #34
 2267 00f8 04D0     		beq	.L195
 2268              		.loc 1 1625 0 is_stmt 0 discriminator 1
 2269 00fa 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 2270 00fe DBB2     		uxtb	r3, r3
 2271 0100 322B     		cmp	r3, #50
 2272 0102 04D1     		bne	.L196
 2273              	.L195:
ARM GAS  /tmp/ccofRh1B.s 			page 71


1626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {   
1627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* Disable interrupts: */
1628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /*  - Disable Error warning Interrupt */
1629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /*  - Disable Error passive Interrupt */
1630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /*  - Disable Bus-off Interrupt */
1631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /*  - Disable Last error code Interrupt */
1632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /*  - Disable Error Interrupt */
1633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     __HAL_CAN_DISABLE_IT(hcan, CAN_IT_EWG |
 2274              		.loc 1 1633 0 is_stmt 1
 2275 0104 0268     		ldr	r2, [r0]
 2276 0106 5369     		ldr	r3, [r2, #20]
 2277 0108 23F40F43 		bic	r3, r3, #36608
 2278 010c 5361     		str	r3, [r2, #20]
 2279              	.L196:
1634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                CAN_IT_EPV |
1635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                CAN_IT_BOF |
1636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                CAN_IT_LEC |
1637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                CAN_IT_ERR );
1638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Change CAN state */
1641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   if (FIFONumber == CAN_FIFO0)
 2280              		.loc 1 1641 0
 2281 010e C4B9     		cbnz	r4, .L197
1642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     switch(hcan->State)
 2282              		.loc 1 1643 0
 2283 0110 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 2284 0114 DBB2     		uxtb	r3, r3
 2285 0116 622B     		cmp	r3, #98
 2286 0118 07D0     		beq	.L199
 2287 011a 722B     		cmp	r3, #114
 2288 011c 09D0     		beq	.L200
 2289 011e 422B     		cmp	r3, #66
 2290 0120 0BD1     		bne	.L207
1644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0):
1646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX;
 2291              		.loc 1 1646 0
 2292 0122 1223     		movs	r3, #18
 2293 0124 80F83D30 		strb	r3, [r0, #61]
1647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 2294              		.loc 1 1647 0
 2295 0128 23E0     		b	.L202
 2296              	.L199:
1648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
1649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX1;
 2297              		.loc 1 1649 0
 2298 012a 3223     		movs	r3, #50
 2299 012c 80F83D30 		strb	r3, [r0, #61]
1650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 2300              		.loc 1 1650 0
 2301 0130 1FE0     		b	.L202
 2302              	.L200:
1651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
1652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX1;
 2303              		.loc 1 1652 0
ARM GAS  /tmp/ccofRh1B.s 			page 72


 2304 0132 5223     		movs	r3, #82
 2305 0134 80F83D30 		strb	r3, [r0, #61]
1653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 2306              		.loc 1 1653 0
 2307 0138 1BE0     		b	.L202
 2308              	.L207:
1654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_RX0 */
1655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_READY;
 2309              		.loc 1 1655 0
 2310 013a 0123     		movs	r3, #1
 2311 013c 80F83D30 		strb	r3, [r0, #61]
1656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 2312              		.loc 1 1656 0
 2313 0140 17E0     		b	.L202
 2314              	.L197:
1657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
1660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
1661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     switch(hcan->State)
 2315              		.loc 1 1661 0
 2316 0142 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 2317 0146 DBB2     		uxtb	r3, r3
 2318 0148 622B     		cmp	r3, #98
 2319 014a 07D0     		beq	.L204
 2320 014c 722B     		cmp	r3, #114
 2321 014e 09D0     		beq	.L205
 2322 0150 522B     		cmp	r3, #82
 2323 0152 0BD1     		bne	.L208
1662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
1663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX1):
1664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX;
 2324              		.loc 1 1664 0
 2325 0154 1223     		movs	r3, #18
 2326 0156 80F83D30 		strb	r3, [r0, #61]
1665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 2327              		.loc 1 1665 0
 2328 015a 0AE0     		b	.L202
 2329              	.L204:
1666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
1667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0;
 2330              		.loc 1 1667 0
 2331 015c 2223     		movs	r3, #34
 2332 015e 80F83D30 		strb	r3, [r0, #61]
1668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 2333              		.loc 1 1668 0
 2334 0162 06E0     		b	.L202
 2335              	.L205:
1669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
1670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0;
 2336              		.loc 1 1670 0
 2337 0164 4223     		movs	r3, #66
 2338 0166 80F83D30 		strb	r3, [r0, #61]
1671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
 2339              		.loc 1 1671 0
 2340 016a 02E0     		b	.L202
 2341              	.L208:
ARM GAS  /tmp/ccofRh1B.s 			page 73


1672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_RX1 */
1673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_READY;
 2342              		.loc 1 1673 0
 2343 016c 0123     		movs	r3, #1
 2344 016e 80F83D30 		strb	r3, [r0, #61]
 2345              	.L202:
1674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****         break;
1675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     }
1676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
1677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Receive complete callback */ 
1679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   HAL_CAN_RxCpltCallback(hcan);
 2346              		.loc 1 1679 0
 2347 0172 FFF7FEFF 		bl	HAL_CAN_RxCpltCallback
 2348              	.LVL117:
1680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
1681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Return function status */
1682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   return HAL_OK;
1683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 2349              		.loc 1 1683 0
 2350 0176 0020     		movs	r0, #0
 2351 0178 10BD     		pop	{r4, pc}
 2352              		.cfi_endproc
 2353              	.LFE142:
 2355 017a 00BF     		.section	.text.HAL_CAN_ErrorCallback,"ax",%progbits
 2356              		.align	2
 2357              		.weak	HAL_CAN_ErrorCallback
 2358              		.thumb
 2359              		.thumb_func
 2361              	HAL_CAN_ErrorCallback:
 2362              	.LFB138:
1443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 2363              		.loc 1 1443 0
 2364              		.cfi_startproc
 2365              		@ args = 0, pretend = 0, frame = 0
 2366              		@ frame_needed = 0, uses_anonymous_args = 0
 2367              		@ link register save eliminated.
 2368              	.LVL118:
 2369 0000 7047     		bx	lr
 2370              		.cfi_endproc
 2371              	.LFE138:
 2373 0002 00BF     		.section	.text.HAL_CAN_IRQHandler,"ax",%progbits
 2374              		.align	2
 2375              		.global	HAL_CAN_IRQHandler
 2376              		.thumb
 2377              		.thumb_func
 2379              	HAL_CAN_IRQHandler:
 2380              	.LFB135:
1227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
 2381              		.loc 1 1227 0
 2382              		.cfi_startproc
 2383              		@ args = 0, pretend = 0, frame = 0
 2384              		@ frame_needed = 0, uses_anonymous_args = 0
 2385              	.LVL119:
1227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
 2386              		.loc 1 1227 0
 2387 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  /tmp/ccofRh1B.s 			page 74


 2388              	.LCFI18:
 2389              		.cfi_def_cfa_offset 16
 2390              		.cfi_offset 3, -16
 2391              		.cfi_offset 4, -12
 2392              		.cfi_offset 5, -8
 2393              		.cfi_offset 14, -4
 2394 0002 0446     		mov	r4, r0
 2395              	.LVL120:
1231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FOV0)))
 2396              		.loc 1 1231 0
 2397 0004 0368     		ldr	r3, [r0]
 2398 0006 DA68     		ldr	r2, [r3, #12]
 2399 0008 12F0100F 		tst	r2, #16
 2400 000c 08D0     		beq	.L234
1232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2401              		.loc 1 1232 0 discriminator 1
 2402 000e 5A69     		ldr	r2, [r3, #20]
1231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FOV0)))
 2403              		.loc 1 1231 0 discriminator 1
 2404 0010 12F0080F 		tst	r2, #8
 2405 0014 06D0     		beq	.L235
 2406              	.LVL121:
1238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 2407              		.loc 1 1238 0
 2408 0016 1022     		movs	r2, #16
 2409 0018 DA60     		str	r2, [r3, #12]
1235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2410              		.loc 1 1235 0
 2411 001a 4FF40075 		mov	r5, #512
 2412 001e 02E0     		b	.L212
 2413              	.LVL122:
 2414              	.L234:
1228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2415              		.loc 1 1228 0
 2416 0020 0025     		movs	r5, #0
 2417 0022 00E0     		b	.L212
 2418              	.L235:
 2419 0024 0025     		movs	r5, #0
 2420              	.LVL123:
 2421              	.L212:
1242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FOV1)))
 2422              		.loc 1 1242 0
 2423 0026 2368     		ldr	r3, [r4]
 2424 0028 1A69     		ldr	r2, [r3, #16]
 2425 002a 12F0100F 		tst	r2, #16
 2426 002e 07D0     		beq	.L213
1243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2427              		.loc 1 1243 0 discriminator 1
 2428 0030 5A69     		ldr	r2, [r3, #20]
1242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FOV1)))
 2429              		.loc 1 1242 0 discriminator 1
 2430 0032 12F0400F 		tst	r2, #64
 2431 0036 03D0     		beq	.L213
1246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2432              		.loc 1 1246 0
 2433 0038 45F48065 		orr	r5, r5, #1024
 2434              	.LVL124:
ARM GAS  /tmp/ccofRh1B.s 			page 75


1249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 2435              		.loc 1 1249 0
 2436 003c 1022     		movs	r2, #16
 2437 003e 1A61     		str	r2, [r3, #16]
 2438              	.L213:
1253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2439              		.loc 1 1253 0
 2440 0040 2368     		ldr	r3, [r4]
 2441 0042 5A69     		ldr	r2, [r3, #20]
 2442 0044 12F0010F 		tst	r2, #1
 2443 0048 22D0     		beq	.L214
1256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****        (__HAL_CAN_TRANSMIT_STATUS(hcan, CAN_TXMAILBOX_1)) ||
 2444              		.loc 1 1256 0
 2445 004a 9968     		ldr	r1, [r3, #8]
 2446 004c 614A     		ldr	r2, .L237
 2447 004e 8A43     		bics	r2, r2, r1
 2448 0050 07D0     		beq	.L215
1257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****        (__HAL_CAN_TRANSMIT_STATUS(hcan, CAN_TXMAILBOX_2)))
 2449              		.loc 1 1257 0 discriminator 1
 2450 0052 9968     		ldr	r1, [r3, #8]
1256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****        (__HAL_CAN_TRANSMIT_STATUS(hcan, CAN_TXMAILBOX_1)) ||
 2451              		.loc 1 1256 0 discriminator 1
 2452 0054 604A     		ldr	r2, .L237+4
 2453 0056 8A43     		bics	r2, r2, r1
 2454 0058 03D0     		beq	.L215
1258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2455              		.loc 1 1258 0
 2456 005a 9968     		ldr	r1, [r3, #8]
1257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****        (__HAL_CAN_TRANSMIT_STATUS(hcan, CAN_TXMAILBOX_2)))
 2457              		.loc 1 1257 0
 2458 005c 5F4A     		ldr	r2, .L237+8
 2459 005e 8A43     		bics	r2, r2, r1
 2460 0060 16D1     		bne	.L214
 2461              	.L215:
1261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****          (__HAL_CAN_GET_FLAG(hcan, CAN_FLAG_TXOK1)) ||
 2462              		.loc 1 1261 0
 2463 0062 9A68     		ldr	r2, [r3, #8]
 2464 0064 12F0020F 		tst	r2, #2
 2465 0068 07D1     		bne	.L216
1262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****          (__HAL_CAN_GET_FLAG(hcan, CAN_FLAG_TXOK2)))
 2466              		.loc 1 1262 0 discriminator 1
 2467 006a 9A68     		ldr	r2, [r3, #8]
1261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****          (__HAL_CAN_GET_FLAG(hcan, CAN_FLAG_TXOK1)) ||
 2468              		.loc 1 1261 0 discriminator 1
 2469 006c 12F4007F 		tst	r2, #512
 2470 0070 03D1     		bne	.L216
1263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       {
 2471              		.loc 1 1263 0
 2472 0072 9B68     		ldr	r3, [r3, #8]
1262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****          (__HAL_CAN_GET_FLAG(hcan, CAN_FLAG_TXOK2)))
 2473              		.loc 1 1262 0
 2474 0074 13F4003F 		tst	r3, #131072
 2475 0078 03D0     		beq	.L217
 2476              	.L216:
1266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
 2477              		.loc 1 1266 0
 2478 007a 2046     		mov	r0, r4
ARM GAS  /tmp/ccofRh1B.s 			page 76


 2479              	.LVL125:
 2480 007c FFF7FEFF 		bl	CAN_Transmit_IT
 2481              	.LVL126:
 2482 0080 01E0     		b	.L218
 2483              	.LVL127:
 2484              	.L217:
1271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       }
 2485              		.loc 1 1271 0
 2486 0082 45F40065 		orr	r5, r5, #2048
 2487              	.LVL128:
 2488              	.L218:
1275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                    CAN_FLAG_TXOK0 | CAN_FLAG_TXOK1 | CAN_FLAG_TXOK2);
 2489              		.loc 1 1275 0
 2490 0086 2268     		ldr	r2, [r4]
 2491 0088 9168     		ldr	r1, [r2, #8]
 2492 008a 554B     		ldr	r3, .L237+12
 2493 008c 0B43     		orrs	r3, r3, r1
 2494 008e 9360     		str	r3, [r2, #8]
 2495              	.L214:
1281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      (__HAL_CAN_MSG_PENDING(hcan, CAN_FIFO0) != 0U))
 2496              		.loc 1 1281 0
 2497 0090 2368     		ldr	r3, [r4]
 2498 0092 5A69     		ldr	r2, [r3, #20]
 2499 0094 12F0020F 		tst	r2, #2
 2500 0098 07D0     		beq	.L219
1282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2501              		.loc 1 1282 0 discriminator 1
 2502 009a DB68     		ldr	r3, [r3, #12]
1281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      (__HAL_CAN_MSG_PENDING(hcan, CAN_FIFO0) != 0U))
 2503              		.loc 1 1281 0 discriminator 1
 2504 009c 13F0030F 		tst	r3, #3
 2505 00a0 03D0     		beq	.L219
1285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 2506              		.loc 1 1285 0
 2507 00a2 0021     		movs	r1, #0
 2508 00a4 2046     		mov	r0, r4
 2509 00a6 FFF7FEFF 		bl	CAN_Receive_IT
 2510              	.LVL129:
 2511              	.L219:
1289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      (__HAL_CAN_MSG_PENDING(hcan, CAN_FIFO1) != 0U))
 2512              		.loc 1 1289 0
 2513 00aa 2368     		ldr	r3, [r4]
 2514 00ac 5A69     		ldr	r2, [r3, #20]
 2515 00ae 12F0100F 		tst	r2, #16
 2516 00b2 07D0     		beq	.L220
1290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2517              		.loc 1 1290 0 discriminator 1
 2518 00b4 1B69     		ldr	r3, [r3, #16]
1289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      (__HAL_CAN_MSG_PENDING(hcan, CAN_FIFO1) != 0U))
 2519              		.loc 1 1289 0 discriminator 1
 2520 00b6 13F0030F 		tst	r3, #3
 2521 00ba 03D0     		beq	.L220
1293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 2522              		.loc 1 1293 0
 2523 00bc 0121     		movs	r1, #1
 2524 00be 2046     		mov	r0, r4
 2525 00c0 FFF7FEFF 		bl	CAN_Receive_IT
ARM GAS  /tmp/ccofRh1B.s 			page 77


 2526              	.LVL130:
 2527              	.L220:
1297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2528              		.loc 1 1297 0
 2529 00c4 236C     		ldr	r3, [r4, #64]
 2530 00c6 2B43     		orrs	r3, r3, r5
 2531 00c8 2364     		str	r3, [r4, #64]
1300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_EWG)) &&
 2532              		.loc 1 1300 0
 2533 00ca 2368     		ldr	r3, [r4]
 2534 00cc 9A69     		ldr	r2, [r3, #24]
 2535 00ce 12F0010F 		tst	r2, #1
 2536 00d2 0BD0     		beq	.L221
1301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR)))
 2537              		.loc 1 1301 0 discriminator 1
 2538 00d4 5A69     		ldr	r2, [r3, #20]
1300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_EWG)) &&
 2539              		.loc 1 1300 0 discriminator 1
 2540 00d6 12F4807F 		tst	r2, #256
 2541 00da 07D0     		beq	.L221
1302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2542              		.loc 1 1302 0
 2543 00dc 5A69     		ldr	r2, [r3, #20]
1301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR)))
 2544              		.loc 1 1301 0
 2545 00de 12F4004F 		tst	r2, #32768
 2546 00e2 03D0     		beq	.L221
1305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* No need for clear of Error Warning Flag as read-only */
 2547              		.loc 1 1305 0
 2548 00e4 226C     		ldr	r2, [r4, #64]
 2549 00e6 42F00102 		orr	r2, r2, #1
 2550 00ea 2264     		str	r2, [r4, #64]
 2551              	.L221:
1310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_EPV)) &&
 2552              		.loc 1 1310 0
 2553 00ec 9A69     		ldr	r2, [r3, #24]
 2554 00ee 12F0020F 		tst	r2, #2
 2555 00f2 0BD0     		beq	.L222
1311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR)))
 2556              		.loc 1 1311 0 discriminator 1
 2557 00f4 5A69     		ldr	r2, [r3, #20]
1310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_EPV)) &&
 2558              		.loc 1 1310 0 discriminator 1
 2559 00f6 12F4007F 		tst	r2, #512
 2560 00fa 07D0     		beq	.L222
1312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2561              		.loc 1 1312 0
 2562 00fc 5A69     		ldr	r2, [r3, #20]
1311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR)))
 2563              		.loc 1 1311 0
 2564 00fe 12F4004F 		tst	r2, #32768
 2565 0102 03D0     		beq	.L222
1315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* No need for clear of Error Passive Flag as read-only */ 
 2566              		.loc 1 1315 0
 2567 0104 226C     		ldr	r2, [r4, #64]
 2568 0106 42F00202 		orr	r2, r2, #2
 2569 010a 2264     		str	r2, [r4, #64]
ARM GAS  /tmp/ccofRh1B.s 			page 78


 2570              	.L222:
1320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_BOF)) &&
 2571              		.loc 1 1320 0
 2572 010c 9A69     		ldr	r2, [r3, #24]
 2573 010e 12F0040F 		tst	r2, #4
 2574 0112 0BD0     		beq	.L223
1321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR)))
 2575              		.loc 1 1321 0 discriminator 1
 2576 0114 5A69     		ldr	r2, [r3, #20]
1320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_BOF)) &&
 2577              		.loc 1 1320 0 discriminator 1
 2578 0116 12F4806F 		tst	r2, #1024
 2579 011a 07D0     		beq	.L223
1322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2580              		.loc 1 1322 0
 2581 011c 5A69     		ldr	r2, [r3, #20]
1321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR)))
 2582              		.loc 1 1321 0
 2583 011e 12F4004F 		tst	r2, #32768
 2584 0122 03D0     		beq	.L223
1325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     /* No need for clear of Bus-Off Flag as read-only */
 2585              		.loc 1 1325 0
 2586 0124 226C     		ldr	r2, [r4, #64]
 2587 0126 42F00402 		orr	r2, r2, #4
 2588 012a 2264     		str	r2, [r4, #64]
 2589              	.L223:
1330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_LEC))         &&
 2590              		.loc 1 1330 0
 2591 012c 9A69     		ldr	r2, [r3, #24]
 2592 012e 12F0700F 		tst	r2, #112
 2593 0132 3AD0     		beq	.L224
1331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR)))
 2594              		.loc 1 1331 0 discriminator 1
 2595 0134 5A69     		ldr	r2, [r3, #20]
1330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_LEC))         &&
 2596              		.loc 1 1330 0 discriminator 1
 2597 0136 12F4006F 		tst	r2, #2048
 2598 013a 36D0     		beq	.L224
1332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2599              		.loc 1 1332 0
 2600 013c 5A69     		ldr	r2, [r3, #20]
1331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR)))
 2601              		.loc 1 1331 0
 2602 013e 12F4004F 		tst	r2, #32768
 2603 0142 32D0     		beq	.L224
1334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****     {
 2604              		.loc 1 1334 0
 2605 0144 9A69     		ldr	r2, [r3, #24]
 2606 0146 02F07002 		and	r2, r2, #112
 2607 014a 302A     		cmp	r2, #48
 2608 014c 16D0     		beq	.L226
 2609 014e 04D8     		bhi	.L227
 2610 0150 102A     		cmp	r2, #16
 2611 0152 09D0     		beq	.L228
 2612 0154 202A     		cmp	r2, #32
 2613 0156 0CD0     		beq	.L229
 2614 0158 23E0     		b	.L225
ARM GAS  /tmp/ccofRh1B.s 			page 79


 2615              	.L227:
 2616 015a 502A     		cmp	r2, #80
 2617 015c 18D0     		beq	.L230
 2618 015e 602A     		cmp	r2, #96
 2619 0160 1BD0     		beq	.L231
 2620 0162 402A     		cmp	r2, #64
 2621 0164 1DD1     		bne	.L225
 2622 0166 0EE0     		b	.L232
 2623              	.L228:
1338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           break;
 2624              		.loc 1 1338 0
 2625 0168 226C     		ldr	r2, [r4, #64]
 2626 016a 42F00802 		orr	r2, r2, #8
 2627 016e 2264     		str	r2, [r4, #64]
1339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(CAN_ESR_LEC_1):
 2628              		.loc 1 1339 0
 2629 0170 17E0     		b	.L225
 2630              	.L229:
1342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           break;
 2631              		.loc 1 1342 0
 2632 0172 226C     		ldr	r2, [r4, #64]
 2633 0174 42F01002 		orr	r2, r2, #16
 2634 0178 2264     		str	r2, [r4, #64]
1343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(CAN_ESR_LEC_1 | CAN_ESR_LEC_0):
 2635              		.loc 1 1343 0
 2636 017a 12E0     		b	.L225
 2637              	.L226:
1346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           break;
 2638              		.loc 1 1346 0
 2639 017c 226C     		ldr	r2, [r4, #64]
 2640 017e 42F02002 		orr	r2, r2, #32
 2641 0182 2264     		str	r2, [r4, #64]
1347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(CAN_ESR_LEC_2):
 2642              		.loc 1 1347 0
 2643 0184 0DE0     		b	.L225
 2644              	.L232:
1350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           break;
 2645              		.loc 1 1350 0
 2646 0186 226C     		ldr	r2, [r4, #64]
 2647 0188 42F04002 		orr	r2, r2, #64
 2648 018c 2264     		str	r2, [r4, #64]
1351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(CAN_ESR_LEC_2 | CAN_ESR_LEC_0):
 2649              		.loc 1 1351 0
 2650 018e 08E0     		b	.L225
 2651              	.L230:
1354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           break;
 2652              		.loc 1 1354 0
 2653 0190 226C     		ldr	r2, [r4, #64]
 2654 0192 42F08002 		orr	r2, r2, #128
 2655 0196 2264     		str	r2, [r4, #64]
1355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****       case(CAN_ESR_LEC_2 | CAN_ESR_LEC_1):
 2656              		.loc 1 1355 0
 2657 0198 03E0     		b	.L225
 2658              	.L231:
1358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****           break;
 2659              		.loc 1 1358 0
 2660 019a 226C     		ldr	r2, [r4, #64]
ARM GAS  /tmp/ccofRh1B.s 			page 80


 2661 019c 42F48072 		orr	r2, r2, #256
 2662 01a0 2264     		str	r2, [r4, #64]
 2663              	.L225:
1365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }
 2664              		.loc 1 1365 0
 2665 01a2 9A69     		ldr	r2, [r3, #24]
 2666 01a4 22F07002 		bic	r2, r2, #112
 2667 01a8 9A61     		str	r2, [r3, #24]
 2668              	.L224:
1369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   {
 2669              		.loc 1 1369 0
 2670 01aa 236C     		ldr	r3, [r4, #64]
 2671 01ac 8BB1     		cbz	r3, .L211
1372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2672              		.loc 1 1372 0
 2673 01ae 2268     		ldr	r2, [r4]
 2674 01b0 5368     		ldr	r3, [r2, #4]
 2675 01b2 43F00403 		orr	r3, r3, #4
 2676 01b6 5360     		str	r3, [r2, #4]
1375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2677              		.loc 1 1375 0
 2678 01b8 0123     		movs	r3, #1
 2679 01ba 84F83D30 		strb	r3, [r4, #61]
1388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****                                CAN_IT_EPV |
 2680              		.loc 1 1388 0
 2681 01be 2268     		ldr	r2, [r4]
 2682 01c0 5369     		ldr	r3, [r2, #20]
 2683 01c2 23F40F43 		bic	r3, r3, #36608
 2684 01c6 23F05B03 		bic	r3, r3, #91
 2685 01ca 5361     		str	r3, [r2, #20]
1400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   }  
 2686              		.loc 1 1400 0
 2687 01cc 2046     		mov	r0, r4
 2688 01ce FFF7FEFF 		bl	HAL_CAN_ErrorCallback
 2689              	.LVL131:
 2690              	.L211:
 2691 01d2 38BD     		pop	{r3, r4, r5, pc}
 2692              	.LVL132:
 2693              	.L238:
 2694              		.align	2
 2695              	.L237:
 2696 01d4 01000004 		.word	67108865
 2697 01d8 00010008 		.word	134217984
 2698 01dc 00000110 		.word	268500992
 2699 01e0 19050100 		.word	66841
 2700              		.cfi_endproc
 2701              	.LFE135:
 2703              		.section	.text.HAL_CAN_GetState,"ax",%progbits
 2704              		.align	2
 2705              		.global	HAL_CAN_GetState
 2706              		.thumb
 2707              		.thumb_func
 2709              	HAL_CAN_GetState:
 2710              	.LFB139:
1479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   /* Return CAN state */
 2711              		.loc 1 1479 0
 2712              		.cfi_startproc
ARM GAS  /tmp/ccofRh1B.s 			page 81


 2713              		@ args = 0, pretend = 0, frame = 0
 2714              		@ frame_needed = 0, uses_anonymous_args = 0
 2715              		@ link register save eliminated.
 2716              	.LVL133:
1481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 2717              		.loc 1 1481 0
 2718 0000 90F83D00 		ldrb	r0, [r0, #61]	@ zero_extendqisi2
 2719              	.LVL134:
1482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2720              		.loc 1 1482 0
 2721 0004 7047     		bx	lr
 2722              		.cfi_endproc
 2723              	.LFE139:
 2725 0006 00BF     		.section	.text.HAL_CAN_GetError,"ax",%progbits
 2726              		.align	2
 2727              		.global	HAL_CAN_GetError
 2728              		.thumb
 2729              		.thumb_func
 2731              	HAL_CAN_GetError:
 2732              	.LFB140:
1491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c ****   return hcan->ErrorCode;
 2733              		.loc 1 1491 0
 2734              		.cfi_startproc
 2735              		@ args = 0, pretend = 0, frame = 0
 2736              		@ frame_needed = 0, uses_anonymous_args = 0
 2737              		@ link register save eliminated.
 2738              	.LVL135:
1492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** }
 2739              		.loc 1 1492 0
 2740 0000 006C     		ldr	r0, [r0, #64]
 2741              	.LVL136:
1493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_can.c **** 
 2742              		.loc 1 1493 0
 2743 0002 7047     		bx	lr
 2744              		.cfi_endproc
 2745              	.LFE140:
 2747              		.text
 2748              	.Letext0:
 2749              		.file 2 "/opt/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_types.h"
 2750              		.file 3 "/opt/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 2751              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xc.h"
 2752              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 2753              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 2754              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_can.h"
 2755              		.file 8 "Drivers/CMSIS/Include/core_cm4.h"
 2756              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  /tmp/ccofRh1B.s 			page 82


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f3xx_hal_can.c
     /tmp/ccofRh1B.s:22     .text.HAL_CAN_ConfigFilter:00000000 $t
     /tmp/ccofRh1B.s:27     .text.HAL_CAN_ConfigFilter:00000000 HAL_CAN_ConfigFilter
     /tmp/ccofRh1B.s:193    .text.HAL_CAN_MspInit:00000000 $t
     /tmp/ccofRh1B.s:198    .text.HAL_CAN_MspInit:00000000 HAL_CAN_MspInit
     /tmp/ccofRh1B.s:211    .text.HAL_CAN_Init:00000000 $t
     /tmp/ccofRh1B.s:216    .text.HAL_CAN_Init:00000000 HAL_CAN_Init
     /tmp/ccofRh1B.s:492    .text.HAL_CAN_MspDeInit:00000000 $t
     /tmp/ccofRh1B.s:497    .text.HAL_CAN_MspDeInit:00000000 HAL_CAN_MspDeInit
     /tmp/ccofRh1B.s:510    .text.HAL_CAN_DeInit:00000000 $t
     /tmp/ccofRh1B.s:515    .text.HAL_CAN_DeInit:00000000 HAL_CAN_DeInit
     /tmp/ccofRh1B.s:558    .text.HAL_CAN_Transmit:00000000 $t
     /tmp/ccofRh1B.s:563    .text.HAL_CAN_Transmit:00000000 HAL_CAN_Transmit
     /tmp/ccofRh1B.s:899    .text.HAL_CAN_Transmit:00000210 $d
     /tmp/ccofRh1B.s:906    .text.HAL_CAN_Transmit_IT:00000000 $t
     /tmp/ccofRh1B.s:911    .text.HAL_CAN_Transmit_IT:00000000 HAL_CAN_Transmit_IT
     /tmp/ccofRh1B.s:1154   .text.HAL_CAN_Receive:00000000 $t
     /tmp/ccofRh1B.s:1159   .text.HAL_CAN_Receive:00000000 HAL_CAN_Receive
     /tmp/ccofRh1B.s:1582   .text.HAL_CAN_Receive_IT:00000000 $t
     /tmp/ccofRh1B.s:1587   .text.HAL_CAN_Receive_IT:00000000 HAL_CAN_Receive_IT
     /tmp/ccofRh1B.s:1791   .text.HAL_CAN_Sleep:00000000 $t
     /tmp/ccofRh1B.s:1796   .text.HAL_CAN_Sleep:00000000 HAL_CAN_Sleep
     /tmp/ccofRh1B.s:1902   .text.HAL_CAN_WakeUp:00000000 $t
     /tmp/ccofRh1B.s:1907   .text.HAL_CAN_WakeUp:00000000 HAL_CAN_WakeUp
     /tmp/ccofRh1B.s:1999   .text.HAL_CAN_TxCpltCallback:00000000 $t
     /tmp/ccofRh1B.s:2004   .text.HAL_CAN_TxCpltCallback:00000000 HAL_CAN_TxCpltCallback
     /tmp/ccofRh1B.s:2017   .text.CAN_Transmit_IT:00000000 $t
     /tmp/ccofRh1B.s:2021   .text.CAN_Transmit_IT:00000000 CAN_Transmit_IT
     /tmp/ccofRh1B.s:2091   .text.HAL_CAN_RxCpltCallback:00000000 $t
     /tmp/ccofRh1B.s:2096   .text.HAL_CAN_RxCpltCallback:00000000 HAL_CAN_RxCpltCallback
     /tmp/ccofRh1B.s:2109   .text.CAN_Receive_IT:00000000 $t
     /tmp/ccofRh1B.s:2113   .text.CAN_Receive_IT:00000000 CAN_Receive_IT
     /tmp/ccofRh1B.s:2356   .text.HAL_CAN_ErrorCallback:00000000 $t
     /tmp/ccofRh1B.s:2361   .text.HAL_CAN_ErrorCallback:00000000 HAL_CAN_ErrorCallback
     /tmp/ccofRh1B.s:2374   .text.HAL_CAN_IRQHandler:00000000 $t
     /tmp/ccofRh1B.s:2379   .text.HAL_CAN_IRQHandler:00000000 HAL_CAN_IRQHandler
     /tmp/ccofRh1B.s:2696   .text.HAL_CAN_IRQHandler:000001d4 $d
     /tmp/ccofRh1B.s:2704   .text.HAL_CAN_GetState:00000000 $t
     /tmp/ccofRh1B.s:2709   .text.HAL_CAN_GetState:00000000 HAL_CAN_GetState
     /tmp/ccofRh1B.s:2726   .text.HAL_CAN_GetError:00000000 $t
     /tmp/ccofRh1B.s:2731   .text.HAL_CAN_GetError:00000000 HAL_CAN_GetError
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_GetTick
