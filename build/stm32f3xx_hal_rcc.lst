ARM GAS  /tmp/ccsab2tk.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"stm32f3xx_hal_rcc.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  22              		.align	2
  23              		.global	HAL_RCC_DeInit
  24              		.thumb
  25              		.thumb_func
  27              	HAL_RCC_DeInit:
  28              	.LFB124:
  29              		.file 1 "Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c"
   1:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
   2:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @file    stm32f3xx_hal_rcc.c
   4:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *       
  11:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @verbatim                
  12:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ==============================================================================
  13:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]  
  16:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  17:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (HSI 8MHz) with Flash 0 wait state, Flash prefetch buffer is enabled, 
  18:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       and all peripherals are off except internal SRAM, Flash and JTAG.
  19:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) buses;
  20:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           all peripherals mapped on these buses are running at HSI speed.
  21:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  22:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  23:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  24:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..] Once the device started from reset, the user application has to:
  25:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  26:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  27:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings  
  28:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the AHB and APB buses prescalers
  29:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
ARM GAS  /tmp/ccsab2tk.s 			page 2


  30:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals whose clocks are not
  31:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           derived from the System clock (RTC, ADC, I2C, I2S, TIM, USB FS)
  32:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  33:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                       ##### RCC Limitations #####
  34:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ==============================================================================
  35:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]  
  36:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral 
  37:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write 
  38:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       from/to registers.
  39:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  40:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  41:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  42:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]  
  43:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       Workarounds:
  44:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  45:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  46:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  47:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @endverbatim
  48:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ******************************************************************************
  49:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @attention
  50:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
  51:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  52:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
  53:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * Redistribution and use in source and binary forms, with or without modification,
  54:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * are permitted provided that the following conditions are met:
  55:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  56:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer.
  57:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  58:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer in the documentation
  59:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *      and/or other materials provided with the distribution.
  60:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  61:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *      may be used to endorse or promote products derived from this software
  62:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *      without specific prior written permission.
  63:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
  64:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  65:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  66:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  67:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  68:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  69:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  70:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  71:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  72:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  73:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  74:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
  75:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ******************************************************************************  
  76:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** */
  77:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  78:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  79:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #include "stm32f3xx_hal.h"
  80:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  81:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @addtogroup STM32F3xx_HAL_Driver
  82:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
  83:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
  84:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  85:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC RCC
  86:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** * @brief RCC HAL module driver
ARM GAS  /tmp/ccsab2tk.s 			page 3


  87:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
  88:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
  89:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  90:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  91:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  92:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  93:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  94:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Private_Constants RCC Private Constants
  95:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  * @{
  96:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  */
  97:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Bits position in  in the CFGR register */
  98:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define RCC_CFGR_HPRE_BITNUMBER           POSITION_VAL(RCC_CFGR_HPRE)
  99:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define RCC_CFGR_PPRE1_BITNUMBER          POSITION_VAL(RCC_CFGR_PPRE1)
 100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define RCC_CFGR_PPRE2_BITNUMBER          POSITION_VAL(RCC_CFGR_PPRE2)
 101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
 103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
 105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
 106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define MCO1_CLK_ENABLE()     __HAL_RCC_GPIOA_CLK_ENABLE()
 110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
 111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
 112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
 115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** const uint8_t aPLLMULFactorTable[16] = { 2U,  3U,  4U,  5U,  6U,  7U,  8U,  9U,
 122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                                        10U, 11U, 12U, 13U, 14U, 15U, 16U, 16U};
 123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** const uint8_t aPredivFactorTable[16] = { 1U, 2U,  3U,  4U,  5U,  6U,  7U,  8U,
 124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                                          9U,10U, 11U, 12U, 13U, 14U, 15U, 16U};
 125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
 127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Exported functions ---------------------------------------------------------*/
 131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions 
 137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *  @brief    Initialization and Configuration functions 
 138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
 139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @verbatim    
 140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================
 141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================
 143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]
ARM GAS  /tmp/ccsab2tk.s 			page 4


 144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (HSE, HSI, LSE, LSI, PLL, CSS and MCO) and the System buses clocks (SYSCLK, AHB, APB1
 146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       and APB2).
 147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) HSI (high-speed internal), 8 MHz factory-trimmed RC used directly or through
 150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           the PLL as System clock source.
 151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           The HSI clock can be used also to clock the USART and I2C peripherals.
 152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) LSI (low-speed internal), ~40 KHz low consumption RC used as IWDG and/or RTC
 154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           clock source.
 155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) HSE (high-speed external), 4 to 32 MHz crystal oscillator used directly or
 157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           through the PLL as System clock source. Can be used also as RTC clock source.
 158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.   
 160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) PLL (clocked by HSI or HSE), featuring different output clocks:
 162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The first output is used to generate the high speed system clock (up to 72 MHz)
 163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The second output is used to generate the clock for the USB FS (48 MHz)
 164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The third output may be used to generate the clock for the ADC peripherals (up to 72 M
 165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The fourth output may be used to generate the clock for the TIM peripherals (144 MHz)
 166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
 168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           and if a HSE clock failure occurs(HSE used directly or through PLL as System 
 169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           clock source), the System clocks automatically switched to HSI and an interrupt
 170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           is generated if enabled. The interrupt is linked to the Cortex-M4 NMI 
 171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           (Non-Maskable Interrupt) exception vector.   
 172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) MCO (microcontroller clock output), used to output SYSCLK, HSI, HSE, LSI, LSE or PLL
 174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           clock (divided by 2) output on pin (such as PA8 pin).
 175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..] System, AHB and APB buses clocks configuration
 177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           HSE and PLL.
 179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           The AHB clock (HCLK) is derived from System clock through configurable
 180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           prescaler and used to clock the CPU, memory and peripherals mapped
 181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           from AHB clock through configurable prescalers and used to clock
 183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           the peripherals mapped on these buses. You can use
 184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           "@ref HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) All the peripheral clocks are derived from the System clock (SYSCLK) except:
 187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The FLASH program/erase clock  which is always HSI 8MHz clock.
 188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The USB 48 MHz clock which is derived from the PLL VCO clock.
 189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The USART clock which can be derived as well from HSI 8MHz, LSI or LSE.
 190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The I2C clock which can be derived as well from HSI 8MHz clock.
 191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The ADC clock which is derived from PLL output.
 192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The RTC clock which is derived from the LSE, LSI or 1 MHz HSE_RTC
 193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              (HSE divided by a programmable prescaler). The System clock (SYSCLK)
 194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              frequency must be higher or equal to the RTC clock frequency.
 195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) IWDG clock which is always the LSI clock.
 196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****          (#) For the STM32F3xx devices, the maximum frequency of the SYSCLK, HCLK, PCLK1 and PCLK2 
 198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              Depending on the SYSCLK frequency, the flash latency should be adapted accordingly.
 199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****          (#) After reset, the System clock source is the HSI (8 MHz) with 0 WS and
ARM GAS  /tmp/ccsab2tk.s 			page 5


 201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              prefetch is disabled.
 202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @endverbatim
 203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /*
 207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   Additional consideration on the SYSCLK based on Latency settings:
 208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         +-----------------------------------------------+
 209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         | Latency       | SYSCLK clock frequency (MHz)  |
 210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |---------------|-------------------------------|
 211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |0WS(1CPU cycle)|       0 < SYSCLK <= 24        |
 212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |---------------|-------------------------------|
 213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |1WS(2CPU cycle)|      24 < SYSCLK <= 48        |
 214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |---------------|-------------------------------|
 215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |2WS(3CPU cycle)|      48 < SYSCLK <= 72        |
 216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         +-----------------------------------------------+
 217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - HSE and PLL OFF
 224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - CSS and MCO1 OFF
 226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - All interrupts disabled
 227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   This function does not modify the configuration of the
 228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - Peripheral clocks
 229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_DeInit(void)
 233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
  30              		.loc 1 233 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Set HSION bit, HSITRIM[4:0] bits to the reset value*/
 235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_HSION | RCC_CR_HSITRIM_4); 
  35              		.loc 1 235 0
  36 0000 0D4B     		ldr	r3, .L2
  37 0002 1A68     		ldr	r2, [r3]
  38 0004 42F08102 		orr	r2, r2, #129
  39 0008 1A60     		str	r2, [r3]
 236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset SW[1:0], HPRE[3:0], PPRE1[2:0], PPRE2[2:0] and MCOSEL[2:0] bits */
 238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_BIT(RCC->CFGR, RCC_CFGR_SW | RCC_CFGR_HPRE | RCC_CFGR_PPRE1 | RCC_CFGR_PPRE2 | RCC_CFGR_MCO
  40              		.loc 1 238 0
  41 000a 5968     		ldr	r1, [r3, #4]
  42 000c 0B4A     		ldr	r2, .L2+4
  43 000e 0A40     		ands	r2, r2, r1
  44 0010 5A60     		str	r2, [r3, #4]
 239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset HSEON, CSSON, PLLON bits */
 241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLON | RCC_CR_CSSON | RCC_CR_HSEON);
  45              		.loc 1 241 0
ARM GAS  /tmp/ccsab2tk.s 			page 6


  46 0012 1A68     		ldr	r2, [r3]
  47 0014 22F08472 		bic	r2, r2, #17301504
  48 0018 22F48032 		bic	r2, r2, #65536
  49 001c 1A60     		str	r2, [r3]
 242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset HSEBYP bit */
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
  50              		.loc 1 244 0
  51 001e 1A68     		ldr	r2, [r3]
  52 0020 22F48022 		bic	r2, r2, #262144
  53 0024 1A60     		str	r2, [r3]
 245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset CFGR register */
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
  54              		.loc 1 247 0
  55 0026 0022     		movs	r2, #0
  56 0028 5A60     		str	r2, [r3, #4]
 248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset CFGR2 register */
 250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR2);
  57              		.loc 1 250 0
  58 002a DA62     		str	r2, [r3, #44]
 251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset CFGR3 register */
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR3);
  59              		.loc 1 253 0
  60 002c 1A63     		str	r2, [r3, #48]
 254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Disable all interrupts */
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CIR);
  61              		.loc 1 256 0
  62 002e 9A60     		str	r2, [r3, #8]
 257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   SystemCoreClock = HSI_VALUE;
  63              		.loc 1 259 0
  64 0030 034A     		ldr	r2, .L2+8
  65 0032 044B     		ldr	r3, .L2+12
  66 0034 1A60     		str	r2, [r3]
  67 0036 7047     		bx	lr
  68              	.L3:
  69              		.align	2
  70              	.L2:
  71 0038 00100240 		.word	1073876992
  72 003c 0CC0FFF8 		.word	-117456884
  73 0040 00127A00 		.word	8000000
  74 0044 00000000 		.word	SystemCoreClock
  75              		.cfi_endproc
  76              	.LFE124:
  78              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
  79              		.align	2
  80              		.global	HAL_RCC_OscConfig
  81              		.thumb
  82              		.thumb_func
  84              	HAL_RCC_OscConfig:
  85              	.LFB125:
 260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
ARM GAS  /tmp/ccsab2tk.s 			page 7


 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to LSE Off
 270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to HSE Off
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval HAL status
 275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
  86              		.loc 1 277 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 8
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              	.LVL0:
  91 0000 70B5     		push	{r4, r5, r6, lr}
  92              	.LCFI0:
  93              		.cfi_def_cfa_offset 16
  94              		.cfi_offset 4, -16
  95              		.cfi_offset 5, -12
  96              		.cfi_offset 6, -8
  97              		.cfi_offset 14, -4
  98 0002 82B0     		sub	sp, sp, #8
  99              	.LCFI1:
 100              		.cfi_def_cfa_offset 24
 101 0004 0446     		mov	r4, r0
 102              	.LVL1:
 278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****    uint32_t tickstart = 0U;
 279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/ 
 285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 103              		.loc 1 285 0
 104 0006 0368     		ldr	r3, [r0]
 105 0008 13F0010F 		tst	r3, #1
 106 000c 00F09D80 		beq	.L5
 286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 107              		.loc 1 291 0
 108 0010 B64B     		ldr	r3, .L95
 109 0012 5B68     		ldr	r3, [r3, #4]
 110 0014 03F00C03 		and	r3, r3, #12
 111 0018 042B     		cmp	r3, #4
ARM GAS  /tmp/ccsab2tk.s 			page 8


 112 001a 0AD0     		beq	.L6
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 113              		.loc 1 292 0
 114 001c B34B     		ldr	r3, .L95
 115 001e 5B68     		ldr	r3, [r3, #4]
 116 0020 03F00C03 		and	r3, r3, #12
 117 0024 082B     		cmp	r3, #8
 118 0026 1BD1     		bne	.L7
 119              		.loc 1 292 0 is_stmt 0 discriminator 1
 120 0028 B04B     		ldr	r3, .L95
 121 002a 5B68     		ldr	r3, [r3, #4]
 122 002c 13F4803F 		tst	r3, #65536
 123 0030 16D0     		beq	.L7
 124              	.L6:
 125              	.LVL2:
 126              	.LBB166:
 127              	.LBB167:
 128              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Include/cmsis_gcc.h **** 
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****    *
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
ARM GAS  /tmp/ccsab2tk.s 			page 9


  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  47:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  51:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  53:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  54:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  60:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  62:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:Drivers/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  73:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  74:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  75:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  80:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  88:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  89:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
ARM GAS  /tmp/ccsab2tk.s 			page 10


  97:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  98:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  99:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 105:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 115:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 123:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 126:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 127:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 128:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 132:Drivers/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 142:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 148:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /tmp/ccsab2tk.s 			page 11


 154:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 155:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 169:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
ARM GAS  /tmp/ccsab2tk.s 			page 12


 211:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 228:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 231:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 232:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccsab2tk.s 			page 13


 268:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 281:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 288:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 291:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 299:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 301:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  /tmp/ccsab2tk.s 			page 14


 325:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(0);
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 332:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 342:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 352:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 358:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 379:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
ARM GAS  /tmp/ccsab2tk.s 			page 15


 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:Drivers/CMSIS/Include/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("sev");
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 408:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 409:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
ARM GAS  /tmp/ccsab2tk.s 			page 16


 439:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 455:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 463:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 467:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 475:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 478:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 479:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order in signed short value
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a signed short value with sign extension to integer.
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 482:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 483:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE int32_t __REVSH(int32_t value)
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (short)__builtin_bswap16(value);
 488:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t result;
 490:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccsab2tk.s 			page 17


 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Number of Bits to rotate
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 505:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 526:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 528:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U) || (__CORTEX_SC >= 300U)
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 129              		.loc 2 531 0 is_stmt 1
 130 0032 4FF40033 		mov	r3, #131072
 131              		.syntax unified
 132              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 133 0036 93FAA3F3 		rbit r3, r3
 134              	@ 0 "" 2
 135              	.LVL3:
 136              		.thumb
 137              		.syntax unified
 138              	.LBE167:
 139              	.LBE166:
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 140              		.loc 1 294 0
 141 003a AC4B     		ldr	r3, .L95
 142 003c 1968     		ldr	r1, [r3]
 143              	.LVL4:
 144              	.LBB168:
 145              	.LBB169:
 146              		.loc 2 531 0
 147 003e 4FF40033 		mov	r3, #131072
ARM GAS  /tmp/ccsab2tk.s 			page 18


 148              		.syntax unified
 149              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 150 0042 93FAA3F3 		rbit r3, r3
 151              	@ 0 "" 2
 152              	.LVL5:
 153              		.thumb
 154              		.syntax unified
 155              	.LBE169:
 156              	.LBE168:
 157              		.loc 1 294 0
 158 0046 B3FA83F3 		clz	r3, r3
 159 004a 03F01F03 		and	r3, r3, #31
 160 004e 0122     		movs	r2, #1
 161 0050 02FA03F3 		lsl	r3, r2, r3
 162 0054 1942     		tst	r1, r3
 163 0056 78D0     		beq	.L5
 164              		.loc 1 294 0 is_stmt 0 discriminator 13
 165 0058 6368     		ldr	r3, [r4, #4]
 166 005a 002B     		cmp	r3, #0
 167 005c 75D1     		bne	.L5
 168 005e B8E2     		b	.L77
 169              	.L7:
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 170              		.loc 1 302 0 is_stmt 1
 171 0060 6368     		ldr	r3, [r4, #4]
 172 0062 B3F5803F 		cmp	r3, #65536
 173 0066 05D1     		bne	.L11
 174              		.loc 1 302 0 is_stmt 0 discriminator 1
 175 0068 A04A     		ldr	r2, .L95
 176 006a 1368     		ldr	r3, [r2]
 177 006c 43F48033 		orr	r3, r3, #65536
 178 0070 1360     		str	r3, [r2]
 179 0072 26E0     		b	.L12
 180              	.L11:
 181              		.loc 1 302 0 discriminator 2
 182 0074 63B9     		cbnz	r3, .L13
 183              		.loc 1 302 0 discriminator 3
 184 0076 03F18043 		add	r3, r3, #1073741824
 185 007a 03F50433 		add	r3, r3, #135168
 186 007e 1A68     		ldr	r2, [r3]
 187 0080 22F48032 		bic	r2, r2, #65536
 188 0084 1A60     		str	r2, [r3]
 189 0086 1A68     		ldr	r2, [r3]
 190 0088 22F48022 		bic	r2, r2, #262144
 191 008c 1A60     		str	r2, [r3]
 192 008e 18E0     		b	.L12
 193              	.L13:
 194              		.loc 1 302 0 discriminator 4
 195 0090 B3F5A02F 		cmp	r3, #327680
 196 0094 0CD1     		bne	.L14
ARM GAS  /tmp/ccsab2tk.s 			page 19


 197              		.loc 1 302 0 discriminator 5
 198 0096 03F18043 		add	r3, r3, #1073741824
 199 009a A3F53C33 		sub	r3, r3, #192512
 200 009e 1A68     		ldr	r2, [r3]
 201 00a0 42F48022 		orr	r2, r2, #262144
 202 00a4 1A60     		str	r2, [r3]
 203 00a6 1A68     		ldr	r2, [r3]
 204 00a8 42F48032 		orr	r2, r2, #65536
 205 00ac 1A60     		str	r2, [r3]
 206 00ae 08E0     		b	.L12
 207              	.L14:
 208              		.loc 1 302 0 discriminator 6
 209 00b0 8E4B     		ldr	r3, .L95
 210 00b2 1A68     		ldr	r2, [r3]
 211 00b4 22F48032 		bic	r2, r2, #65536
 212 00b8 1A60     		str	r2, [r3]
 213 00ba 1A68     		ldr	r2, [r3]
 214 00bc 22F48022 		bic	r2, r2, #262144
 215 00c0 1A60     		str	r2, [r3]
 216              	.L12:
 303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_DIV2)
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Configure the HSE predivision factor --------------------------------*/
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_HSE_PREDIV_CONFIG(RCC_OscInitStruct->HSEPredivValue);
 217              		.loc 1 306 0 is_stmt 1
 218 00c2 8A49     		ldr	r1, .L95
 219 00c4 CB6A     		ldr	r3, [r1, #44]
 220 00c6 23F00F02 		bic	r2, r3, #15
 221 00ca A368     		ldr	r3, [r4, #8]
 222 00cc 1343     		orrs	r3, r3, r2
 223 00ce CB62     		str	r3, [r1, #44]
 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_DIV2 */
 308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        /* Check the HSE State */
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 224              		.loc 1 310 0
 225 00d0 6368     		ldr	r3, [r4, #4]
 226 00d2 EBB1     		cbz	r3, .L15
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 227              		.loc 1 313 0
 228 00d4 FFF7FEFF 		bl	HAL_GetTick
 229              	.LVL6:
 230 00d8 0546     		mov	r5, r0
 231              	.LVL7:
 314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSE is ready */
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 232              		.loc 1 316 0
 233 00da 05E0     		b	.L16
 234              	.LVL8:
 235              	.L19:
 317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 236              		.loc 1 318 0
 237 00dc FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccsab2tk.s 			page 20


 238              	.LVL9:
 239 00e0 401B     		subs	r0, r0, r5
 240 00e2 6428     		cmp	r0, #100
 241 00e4 00F27782 		bhi	.L78
 242              	.L16:
 243              	.LVL10:
 244              	.LBB170:
 245              	.LBB171:
 246              		.loc 2 531 0
 247 00e8 4FF40033 		mov	r3, #131072
 248              		.syntax unified
 249              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 250 00ec 93FAA3F3 		rbit r3, r3
 251              	@ 0 "" 2
 252              	.LVL11:
 253              		.thumb
 254              		.syntax unified
 255              	.LBE171:
 256              	.LBE170:
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 257              		.loc 1 316 0
 258 00f0 7E4B     		ldr	r3, .L95
 259 00f2 1968     		ldr	r1, [r3]
 260              	.LVL12:
 261              	.LBB172:
 262              	.LBB173:
 263              		.loc 2 531 0
 264 00f4 4FF40033 		mov	r3, #131072
 265              		.syntax unified
 266              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 267 00f8 93FAA3F3 		rbit r3, r3
 268              	@ 0 "" 2
 269              	.LVL13:
 270              		.thumb
 271              		.syntax unified
 272              	.LBE173:
 273              	.LBE172:
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 274              		.loc 1 316 0
 275 00fc B3FA83F3 		clz	r3, r3
 276 0100 03F01F03 		and	r3, r3, #31
 277 0104 0122     		movs	r2, #1
 278 0106 02FA03F3 		lsl	r3, r2, r3
 279 010a 1942     		tst	r1, r3
 280 010c E6D0     		beq	.L19
 281 010e 1CE0     		b	.L5
 282              	.LVL14:
 283              	.L15:
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
ARM GAS  /tmp/ccsab2tk.s 			page 21


 284              		.loc 1 327 0
 285 0110 FFF7FEFF 		bl	HAL_GetTick
 286              	.LVL15:
 287 0114 0546     		mov	r5, r0
 288              	.LVL16:
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSE is disabled */
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 289              		.loc 1 330 0
 290 0116 05E0     		b	.L20
 291              	.LVL17:
 292              	.L23:
 331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****            if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 293              		.loc 1 332 0
 294 0118 FFF7FEFF 		bl	HAL_GetTick
 295              	.LVL18:
 296 011c 401B     		subs	r0, r0, r5
 297 011e 6428     		cmp	r0, #100
 298 0120 00F25B82 		bhi	.L79
 299              	.L20:
 300              	.LVL19:
 301              	.LBB174:
 302              	.LBB175:
 303              		.loc 2 531 0
 304 0124 4FF40033 		mov	r3, #131072
 305              		.syntax unified
 306              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 307 0128 93FAA3F3 		rbit r3, r3
 308              	@ 0 "" 2
 309              	.LVL20:
 310              		.thumb
 311              		.syntax unified
 312              	.LBE175:
 313              	.LBE174:
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 314              		.loc 1 330 0
 315 012c 6F4B     		ldr	r3, .L95
 316 012e 1968     		ldr	r1, [r3]
 317              	.LVL21:
 318              	.LBB176:
 319              	.LBB177:
 320              		.loc 2 531 0
 321 0130 4FF40033 		mov	r3, #131072
 322              		.syntax unified
 323              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 324 0134 93FAA3F3 		rbit r3, r3
 325              	@ 0 "" 2
 326              	.LVL22:
 327              		.thumb
 328              		.syntax unified
 329              	.LBE177:
 330              	.LBE176:
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 331              		.loc 1 330 0
 332 0138 B3FA83F3 		clz	r3, r3
 333 013c 03F01F03 		and	r3, r3, #31
ARM GAS  /tmp/ccsab2tk.s 			page 22


 334 0140 0122     		movs	r2, #1
 335 0142 02FA03F3 		lsl	r3, r2, r3
 336 0146 1942     		tst	r1, r3
 337 0148 E6D1     		bne	.L23
 338              	.LVL23:
 339              	.L5:
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/ 
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 340              		.loc 1 341 0
 341 014a 2368     		ldr	r3, [r4]
 342 014c 13F0020F 		tst	r3, #2
 343 0150 00F09080 		beq	.L24
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 344              		.loc 1 348 0
 345 0154 654B     		ldr	r3, .L95
 346 0156 5B68     		ldr	r3, [r3, #4]
 347 0158 13F00C0F 		tst	r3, #12
 348 015c 0AD0     		beq	.L25
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 349              		.loc 1 349 0
 350 015e 634B     		ldr	r3, .L95
 351 0160 5B68     		ldr	r3, [r3, #4]
 352 0162 03F00C03 		and	r3, r3, #12
 353 0166 082B     		cmp	r3, #8
 354 0168 27D1     		bne	.L26
 355              		.loc 1 349 0 is_stmt 0 discriminator 1
 356 016a 604B     		ldr	r3, .L95
 357 016c 5B68     		ldr	r3, [r3, #4]
 358 016e 13F4803F 		tst	r3, #65536
 359 0172 22D1     		bne	.L26
 360              	.L25:
 361              	.LVL24:
 362              	.LBB178:
 363              	.LBB179:
 364              		.loc 2 531 0 is_stmt 1
 365 0174 0223     		movs	r3, #2
 366              		.syntax unified
 367              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 368 0176 93FAA3F3 		rbit r3, r3
 369              	@ 0 "" 2
 370              	.LVL25:
 371              		.thumb
 372              		.syntax unified
 373              	.LBE179:
ARM GAS  /tmp/ccsab2tk.s 			page 23


 374              	.LBE178:
 350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 375              		.loc 1 352 0
 376 017a 5C4B     		ldr	r3, .L95
 377 017c 1968     		ldr	r1, [r3]
 378              	.LVL26:
 379              	.LBB180:
 380              	.LBB181:
 381              		.loc 2 531 0
 382 017e 0223     		movs	r3, #2
 383              		.syntax unified
 384              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 385 0180 93FAA3F3 		rbit r3, r3
 386              	@ 0 "" 2
 387              	.LVL27:
 388              		.thumb
 389              		.syntax unified
 390              	.LBE181:
 391              	.LBE180:
 392              		.loc 1 352 0
 393 0184 B3FA83F3 		clz	r3, r3
 394 0188 03F01F03 		and	r3, r3, #31
 395 018c 0122     		movs	r2, #1
 396 018e 02FA03F3 		lsl	r3, r2, r3
 397 0192 1942     		tst	r1, r3
 398 0194 03D0     		beq	.L29
 399              		.loc 1 352 0 is_stmt 0 discriminator 13
 400 0196 2369     		ldr	r3, [r4, #16]
 401 0198 9342     		cmp	r3, r2
 402 019a 40F02082 		bne	.L80
 403              	.L29:
 353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 404              		.loc 1 360 0 is_stmt 1
 405 019e 5348     		ldr	r0, .L95
 406 01a0 0368     		ldr	r3, [r0]
 407 01a2 23F0F801 		bic	r1, r3, #248
 408 01a6 6369     		ldr	r3, [r4, #20]
 409              	.LVL28:
 410              	.LBB182:
 411              	.LBB183:
 412              		.loc 2 531 0
 413 01a8 F822     		movs	r2, #248
 414              		.syntax unified
 415              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 416 01aa 92FAA2F2 		rbit r2, r2
 417              	@ 0 "" 2
 418              	.LVL29:
 419              		.thumb
ARM GAS  /tmp/ccsab2tk.s 			page 24


 420              		.syntax unified
 421              	.LBE183:
 422              	.LBE182:
 423              		.loc 1 360 0
 424 01ae B2FA82F2 		clz	r2, r2
 425 01b2 9340     		lsls	r3, r3, r2
 426 01b4 0B43     		orrs	r3, r3, r1
 427 01b6 0360     		str	r3, [r0]
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 428              		.loc 1 352 0
 429 01b8 5CE0     		b	.L24
 430              	.L26:
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the HSI State */
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 431              		.loc 1 366 0
 432 01ba 2369     		ldr	r3, [r4, #16]
 433 01bc 9BB3     		cbz	r3, .L30
 434              	.LVL30:
 435              	.LBB184:
 436              	.LBB185:
 437              		.loc 2 531 0
 438 01be 0122     		movs	r2, #1
 439              		.syntax unified
 440              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 441 01c0 92FAA2F3 		rbit r3, r2
 442              	@ 0 "" 2
 443              	.LVL31:
 444              		.thumb
 445              		.syntax unified
 446              	.LBE185:
 447              	.LBE184:
 367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        /* Enable the Internal High Speed oscillator (HSI). */
 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 448              		.loc 1 369 0
 449 01c4 B3FA83F3 		clz	r3, r3
 450 01c8 03F18453 		add	r3, r3, #276824064
 451 01cc 03F58413 		add	r3, r3, #1081344
 452 01d0 9B00     		lsls	r3, r3, #2
 453 01d2 1A60     		str	r2, [r3]
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 454              		.loc 1 372 0
 455 01d4 FFF7FEFF 		bl	HAL_GetTick
 456              	.LVL32:
 457 01d8 0546     		mov	r5, r0
 458              	.LVL33:
 373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSI is ready */
 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 459              		.loc 1 375 0
 460 01da 05E0     		b	.L31
ARM GAS  /tmp/ccsab2tk.s 			page 25


 461              	.LVL34:
 462              	.L34:
 376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 463              		.loc 1 377 0
 464 01dc FFF7FEFF 		bl	HAL_GetTick
 465              	.LVL35:
 466 01e0 401B     		subs	r0, r0, r5
 467 01e2 0228     		cmp	r0, #2
 468 01e4 00F2FD81 		bhi	.L81
 469              	.L31:
 470              	.LVL36:
 471              	.LBB186:
 472              	.LBB187:
 473              		.loc 2 531 0
 474 01e8 0223     		movs	r3, #2
 475              		.syntax unified
 476              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 477 01ea 93FAA3F3 		rbit r3, r3
 478              	@ 0 "" 2
 479              	.LVL37:
 480              		.thumb
 481              		.syntax unified
 482              	.LBE187:
 483              	.LBE186:
 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 484              		.loc 1 375 0
 485 01ee 3F4B     		ldr	r3, .L95
 486 01f0 1968     		ldr	r1, [r3]
 487              	.LVL38:
 488              	.LBB188:
 489              	.LBB189:
 490              		.loc 2 531 0
 491 01f2 0223     		movs	r3, #2
 492              		.syntax unified
 493              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 494 01f4 93FAA3F3 		rbit r3, r3
 495              	@ 0 "" 2
 496              	.LVL39:
 497              		.thumb
 498              		.syntax unified
 499              	.LBE189:
 500              	.LBE188:
 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 501              		.loc 1 375 0
 502 01f8 B3FA83F3 		clz	r3, r3
 503 01fc 03F01F03 		and	r3, r3, #31
 504 0200 0122     		movs	r2, #1
 505 0202 02FA03F3 		lsl	r3, r2, r3
 506 0206 1942     		tst	r1, r3
 507 0208 E8D0     		beq	.L34
 378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                 
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
ARM GAS  /tmp/ccsab2tk.s 			page 26


 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 508              		.loc 1 384 0
 509 020a 3848     		ldr	r0, .L95
 510 020c 0368     		ldr	r3, [r0]
 511 020e 23F0F801 		bic	r1, r3, #248
 512 0212 6369     		ldr	r3, [r4, #20]
 513              	.LVL40:
 514              	.LBB190:
 515              	.LBB191:
 516              		.loc 2 531 0
 517 0214 F822     		movs	r2, #248
 518              		.syntax unified
 519              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 520 0216 92FAA2F2 		rbit r2, r2
 521              	@ 0 "" 2
 522              	.LVL41:
 523              		.thumb
 524              		.syntax unified
 525              	.LBE191:
 526              	.LBE190:
 527              		.loc 1 384 0
 528 021a B2FA82F2 		clz	r2, r2
 529 021e 9340     		lsls	r3, r3, r2
 530 0220 0B43     		orrs	r3, r3, r1
 531 0222 0360     		str	r3, [r0]
 532 0224 26E0     		b	.L24
 533              	.LVL42:
 534              	.L30:
 535              	.LBB192:
 536              	.LBB193:
 537              		.loc 2 531 0
 538 0226 0123     		movs	r3, #1
 539              		.syntax unified
 540              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 541 0228 93FAA3F3 		rbit r3, r3
 542              	@ 0 "" 2
 543              	.LVL43:
 544              		.thumb
 545              		.syntax unified
 546              	.LBE193:
 547              	.LBE192:
 385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 548              		.loc 1 389 0
 549 022c B3FA83F3 		clz	r3, r3
 550 0230 03F18453 		add	r3, r3, #276824064
 551 0234 03F58413 		add	r3, r3, #1081344
 552 0238 9B00     		lsls	r3, r3, #2
 553 023a 0022     		movs	r2, #0
 554 023c 1A60     		str	r2, [r3]
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 555              		.loc 1 392 0
ARM GAS  /tmp/ccsab2tk.s 			page 27


 556 023e FFF7FEFF 		bl	HAL_GetTick
 557              	.LVL44:
 558 0242 0546     		mov	r5, r0
 559              	.LVL45:
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSI is disabled */
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 560              		.loc 1 395 0
 561 0244 05E0     		b	.L35
 562              	.LVL46:
 563              	.L38:
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 564              		.loc 1 397 0
 565 0246 FFF7FEFF 		bl	HAL_GetTick
 566              	.LVL47:
 567 024a 401B     		subs	r0, r0, r5
 568 024c 0228     		cmp	r0, #2
 569 024e 00F2CA81 		bhi	.L82
 570              	.L35:
 571              	.LVL48:
 572              	.LBB194:
 573              	.LBB195:
 574              		.loc 2 531 0
 575 0252 0223     		movs	r3, #2
 576              		.syntax unified
 577              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 578 0254 93FAA3F3 		rbit r3, r3
 579              	@ 0 "" 2
 580              	.LVL49:
 581              		.thumb
 582              		.syntax unified
 583              	.LBE195:
 584              	.LBE194:
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 585              		.loc 1 395 0
 586 0258 244B     		ldr	r3, .L95
 587 025a 1968     		ldr	r1, [r3]
 588              	.LVL50:
 589              	.LBB196:
 590              	.LBB197:
 591              		.loc 2 531 0
 592 025c 0223     		movs	r3, #2
 593              		.syntax unified
 594              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 595 025e 93FAA3F3 		rbit r3, r3
 596              	@ 0 "" 2
 597              	.LVL51:
 598              		.thumb
 599              		.syntax unified
 600              	.LBE197:
 601              	.LBE196:
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 602              		.loc 1 395 0
 603 0262 B3FA83F3 		clz	r3, r3
 604 0266 03F01F03 		and	r3, r3, #31
 605 026a 0122     		movs	r2, #1
ARM GAS  /tmp/ccsab2tk.s 			page 28


 606 026c 02FA03F3 		lsl	r3, r2, r3
 607 0270 1942     		tst	r1, r3
 608 0272 E8D1     		bne	.L38
 609              	.LVL52:
 610              	.L24:
 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/ 
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 611              		.loc 1 406 0
 612 0274 2368     		ldr	r3, [r4]
 613 0276 13F0080F 		tst	r3, #8
 614 027a 55D0     		beq	.L39
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the LSI State */
 412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 615              		.loc 1 412 0
 616 027c A369     		ldr	r3, [r4, #24]
 617 027e 3BB3     		cbz	r3, .L40
 618              	.LVL53:
 619              	.LBB198:
 620              	.LBB199:
 621              		.loc 2 531 0
 622 0280 0121     		movs	r1, #1
 623              		.syntax unified
 624              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 625 0282 91FAA1F2 		rbit r2, r1
 626              	@ 0 "" 2
 627              	.LVL54:
 628              		.thumb
 629              		.syntax unified
 630              	.LBE199:
 631              	.LBE198:
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 632              		.loc 1 415 0
 633 0286 B2FA82F2 		clz	r2, r2
 634 028a 194B     		ldr	r3, .L95+4
 635 028c 1344     		add	r3, r3, r2
 636 028e 9B00     		lsls	r3, r3, #2
 637 0290 1960     		str	r1, [r3]
 416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
 418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 638              		.loc 1 418 0
 639 0292 FFF7FEFF 		bl	HAL_GetTick
 640              	.LVL55:
 641 0296 0546     		mov	r5, r0
ARM GAS  /tmp/ccsab2tk.s 			page 29


 642              	.LVL56:
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSI is ready */  
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 643              		.loc 1 421 0
 644 0298 05E0     		b	.L41
 645              	.LVL57:
 646              	.L42:
 422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 647              		.loc 1 423 0
 648 029a FFF7FEFF 		bl	HAL_GetTick
 649              	.LVL58:
 650 029e 401B     		subs	r0, r0, r5
 651 02a0 0228     		cmp	r0, #2
 652 02a2 00F2A281 		bhi	.L83
 653              	.L41:
 654              	.LVL59:
 655              	.LBB200:
 656              	.LBB201:
 657              		.loc 2 531 0
 658 02a6 0223     		movs	r3, #2
 659              		.syntax unified
 660              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 661 02a8 93FAA3F2 		rbit r2, r3
 662              	@ 0 "" 2
 663              	.LVL60:
 664              		.thumb
 665              		.syntax unified
 666              	.LBE201:
 667              	.LBE200:
 668              	.LBB202:
 669              	.LBB203:
 670              		.syntax unified
 671              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 672 02ac 93FAA3F2 		rbit r2, r3
 673              	@ 0 "" 2
 674              	.LVL61:
 675              		.thumb
 676              		.syntax unified
 677              	.LBE203:
 678              	.LBE202:
 679              	.LBB204:
 680              	.LBB205:
 681              		.syntax unified
 682              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 683 02b0 93FAA3F2 		rbit r2, r3
 684              	@ 0 "" 2
 685              	.LVL62:
 686              		.thumb
 687              		.syntax unified
 688              	.LBE205:
 689              	.LBE204:
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 690              		.loc 1 421 0
 691 02b4 0D4A     		ldr	r2, .L95
 692 02b6 516A     		ldr	r1, [r2, #36]
ARM GAS  /tmp/ccsab2tk.s 			page 30


 693              	.LVL63:
 694              	.LBB206:
 695              	.LBB207:
 696              		.loc 2 531 0
 697              		.syntax unified
 698              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 699 02b8 93FAA3F3 		rbit r3, r3
 700              	@ 0 "" 2
 701              	.LVL64:
 702              		.thumb
 703              		.syntax unified
 704              	.LBE207:
 705              	.LBE206:
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 706              		.loc 1 421 0
 707 02bc B3FA83F3 		clz	r3, r3
 708 02c0 03F01F03 		and	r3, r3, #31
 709 02c4 0122     		movs	r2, #1
 710 02c6 02FA03F3 		lsl	r3, r2, r3
 711 02ca 1942     		tst	r1, r3
 712 02cc E5D0     		beq	.L42
 713 02ce 2BE0     		b	.L39
 714              	.LVL65:
 715              	.L40:
 716              	.LBB208:
 717              	.LBB209:
 718              		.loc 2 531 0
 719 02d0 0122     		movs	r2, #1
 720              		.syntax unified
 721              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 722 02d2 92FAA2F2 		rbit r2, r2
 723              	@ 0 "" 2
 724              	.LVL66:
 725              		.thumb
 726              		.syntax unified
 727              	.LBE209:
 728              	.LBE208:
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 729              		.loc 1 432 0
 730 02d6 B2FA82F2 		clz	r2, r2
 731 02da 054B     		ldr	r3, .L95+4
 732 02dc 1344     		add	r3, r3, r2
 733 02de 9B00     		lsls	r3, r3, #2
 734 02e0 0022     		movs	r2, #0
 735 02e2 1A60     		str	r2, [r3]
 433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
 435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 736              		.loc 1 435 0
ARM GAS  /tmp/ccsab2tk.s 			page 31


 737 02e4 FFF7FEFF 		bl	HAL_GetTick
 738              	.LVL67:
 739 02e8 0546     		mov	r5, r0
 740              	.LVL68:
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSI is disabled */  
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 741              		.loc 1 438 0
 742 02ea 09E0     		b	.L43
 743              	.L96:
 744              		.align	2
 745              	.L95:
 746 02ec 00100240 		.word	1073876992
 747 02f0 20819010 		.word	277905696
 748              	.LVL69:
 749              	.L44:
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 750              		.loc 1 440 0
 751 02f4 FFF7FEFF 		bl	HAL_GetTick
 752              	.LVL70:
 753 02f8 401B     		subs	r0, r0, r5
 754 02fa 0228     		cmp	r0, #2
 755 02fc 00F27781 		bhi	.L84
 756              	.L43:
 757              	.LVL71:
 758              	.LBB210:
 759              	.LBB211:
 760              		.loc 2 531 0
 761 0300 0223     		movs	r3, #2
 762              		.syntax unified
 763              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 764 0302 93FAA3F2 		rbit r2, r3
 765              	@ 0 "" 2
 766              	.LVL72:
 767              		.thumb
 768              		.syntax unified
 769              	.LBE211:
 770              	.LBE210:
 771              	.LBB212:
 772              	.LBB213:
 773              		.syntax unified
 774              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 775 0306 93FAA3F2 		rbit r2, r3
 776              	@ 0 "" 2
 777              	.LVL73:
 778              		.thumb
 779              		.syntax unified
 780              	.LBE213:
 781              	.LBE212:
 782              	.LBB214:
 783              	.LBB215:
 784              		.syntax unified
 785              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 786 030a 93FAA3F2 		rbit r2, r3
 787              	@ 0 "" 2
 788              	.LVL74:
ARM GAS  /tmp/ccsab2tk.s 			page 32


 789              		.thumb
 790              		.syntax unified
 791              	.LBE215:
 792              	.LBE214:
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 793              		.loc 1 438 0
 794 030e BE4A     		ldr	r2, .L97
 795 0310 516A     		ldr	r1, [r2, #36]
 796              	.LVL75:
 797              	.LBB216:
 798              	.LBB217:
 799              		.loc 2 531 0
 800              		.syntax unified
 801              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 802 0312 93FAA3F3 		rbit r3, r3
 803              	@ 0 "" 2
 804              	.LVL76:
 805              		.thumb
 806              		.syntax unified
 807              	.LBE217:
 808              	.LBE216:
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 809              		.loc 1 438 0
 810 0316 B3FA83F3 		clz	r3, r3
 811 031a 03F01F03 		and	r3, r3, #31
 812 031e 0122     		movs	r2, #1
 813 0320 02FA03F3 		lsl	r3, r2, r3
 814 0324 1942     		tst	r1, r3
 815 0326 E5D1     		bne	.L44
 816              	.LVL77:
 817              	.L39:
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/ 
 448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 818              		.loc 1 448 0
 819 0328 2368     		ldr	r3, [r4]
 820 032a 13F0040F 		tst	r3, #4
 821 032e 00F0BA80 		beq	.L45
 822              	.LVL78:
 823              	.LBB218:
 449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 824              		.loc 1 457 0
 825 0332 B54B     		ldr	r3, .L97
 826 0334 DB69     		ldr	r3, [r3, #28]
ARM GAS  /tmp/ccsab2tk.s 			page 33


 827 0336 13F0805F 		tst	r3, #268435456
 828 033a 0BD1     		bne	.L85
 829              	.LBB219:
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 830              		.loc 1 459 0
 831 033c B24B     		ldr	r3, .L97
 832 033e DA69     		ldr	r2, [r3, #28]
 833 0340 42F08052 		orr	r2, r2, #268435456
 834 0344 DA61     		str	r2, [r3, #28]
 835 0346 DB69     		ldr	r3, [r3, #28]
 836 0348 03F08053 		and	r3, r3, #268435456
 837 034c 0193     		str	r3, [sp, #4]
 838 034e 019B     		ldr	r3, [sp, #4]
 839              	.LVL79:
 840              	.LBE219:
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       pwrclkchanged = SET;
 841              		.loc 1 460 0
 842 0350 0125     		movs	r5, #1
 843 0352 00E0     		b	.L46
 844              	.LVL80:
 845              	.L85:
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 846              		.loc 1 450 0
 847 0354 0025     		movs	r5, #0
 848              	.LVL81:
 849              	.L46:
 461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 850              		.loc 1 463 0
 851 0356 AD4B     		ldr	r3, .L97+4
 852 0358 1B68     		ldr	r3, [r3]
 853 035a 13F4807F 		tst	r3, #256
 854 035e 13D1     		bne	.L47
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 855              		.loc 1 466 0
 856 0360 AA4A     		ldr	r2, .L97+4
 857 0362 1368     		ldr	r3, [r2]
 858 0364 43F48073 		orr	r3, r3, #256
 859 0368 1360     		str	r3, [r2]
 467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 860              		.loc 1 469 0
 861 036a FFF7FEFF 		bl	HAL_GetTick
 862              	.LVL82:
 863 036e 0646     		mov	r6, r0
 864              	.LVL83:
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 865              		.loc 1 471 0
 866 0370 05E0     		b	.L48
 867              	.LVL84:
 868              	.L49:
ARM GAS  /tmp/ccsab2tk.s 			page 34


 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 869              		.loc 1 473 0
 870 0372 FFF7FEFF 		bl	HAL_GetTick
 871              	.LVL85:
 872 0376 801B     		subs	r0, r0, r6
 873 0378 6428     		cmp	r0, #100
 874 037a 00F23A81 		bhi	.L86
 875              	.L48:
 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 876              		.loc 1 471 0
 877 037e A34B     		ldr	r3, .L97+4
 878 0380 1B68     		ldr	r3, [r3]
 879 0382 13F4807F 		tst	r3, #256
 880 0386 F4D0     		beq	.L49
 881              	.LVL86:
 882              	.L47:
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 883              		.loc 1 481 0
 884 0388 E368     		ldr	r3, [r4, #12]
 885 038a 012B     		cmp	r3, #1
 886 038c 05D1     		bne	.L50
 887              		.loc 1 481 0 is_stmt 0 discriminator 1
 888 038e 9E4A     		ldr	r2, .L97
 889 0390 136A     		ldr	r3, [r2, #32]
 890 0392 43F00103 		orr	r3, r3, #1
 891 0396 1362     		str	r3, [r2, #32]
 892 0398 22E0     		b	.L51
 893              	.L50:
 894              		.loc 1 481 0 discriminator 2
 895 039a 63B9     		cbnz	r3, .L52
 896              		.loc 1 481 0 discriminator 3
 897 039c 03F18043 		add	r3, r3, #1073741824
 898 03a0 03F50433 		add	r3, r3, #135168
 899 03a4 1A6A     		ldr	r2, [r3, #32]
 900 03a6 22F00102 		bic	r2, r2, #1
 901 03aa 1A62     		str	r2, [r3, #32]
 902 03ac 1A6A     		ldr	r2, [r3, #32]
 903 03ae 22F00402 		bic	r2, r2, #4
 904 03b2 1A62     		str	r2, [r3, #32]
 905 03b4 14E0     		b	.L51
 906              	.L52:
 907              		.loc 1 481 0 discriminator 4
 908 03b6 052B     		cmp	r3, #5
 909 03b8 09D1     		bne	.L53
 910              		.loc 1 481 0 discriminator 5
 911 03ba 934B     		ldr	r3, .L97
 912 03bc 1A6A     		ldr	r2, [r3, #32]
 913 03be 42F00402 		orr	r2, r2, #4
 914 03c2 1A62     		str	r2, [r3, #32]
ARM GAS  /tmp/ccsab2tk.s 			page 35


 915 03c4 1A6A     		ldr	r2, [r3, #32]
 916 03c6 42F00102 		orr	r2, r2, #1
 917 03ca 1A62     		str	r2, [r3, #32]
 918 03cc 08E0     		b	.L51
 919              	.L53:
 920              		.loc 1 481 0 discriminator 6
 921 03ce 8E4B     		ldr	r3, .L97
 922 03d0 1A6A     		ldr	r2, [r3, #32]
 923 03d2 22F00102 		bic	r2, r2, #1
 924 03d6 1A62     		str	r2, [r3, #32]
 925 03d8 1A6A     		ldr	r2, [r3, #32]
 926 03da 22F00402 		bic	r2, r2, #4
 927 03de 1A62     		str	r2, [r3, #32]
 928              	.L51:
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the LSE State */
 483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 929              		.loc 1 483 0 is_stmt 1
 930 03e0 E368     		ldr	r3, [r4, #12]
 931 03e2 6BB3     		cbz	r3, .L54
 484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 932              		.loc 1 486 0
 933 03e4 FFF7FEFF 		bl	HAL_GetTick
 934              	.LVL87:
 935 03e8 0646     		mov	r6, r0
 936              	.LVL88:
 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSE is ready */  
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 937              		.loc 1 489 0
 938 03ea 07E0     		b	.L55
 939              	.LVL89:
 940              	.L58:
 490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 941              		.loc 1 491 0
 942 03ec FFF7FEFF 		bl	HAL_GetTick
 943              	.LVL90:
 944 03f0 801B     		subs	r0, r0, r6
 945 03f2 41F28833 		movw	r3, #5000
 946 03f6 9842     		cmp	r0, r3
 947 03f8 00F2FD80 		bhi	.L87
 948              	.L55:
 949              	.LVL91:
 950              	.LBB220:
 951              	.LBB221:
 952              		.loc 2 531 0
 953 03fc 0223     		movs	r3, #2
 954              		.syntax unified
 955              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 956 03fe 93FAA3F2 		rbit r2, r3
 957              	@ 0 "" 2
 958              	.LVL92:
 959              		.thumb
 960              		.syntax unified
 961              	.LBE221:
ARM GAS  /tmp/ccsab2tk.s 			page 36


 962              	.LBE220:
 963              	.LBB222:
 964              	.LBB223:
 965              		.syntax unified
 966              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 967 0402 93FAA3F3 		rbit r3, r3
 968              	@ 0 "" 2
 969              	.LVL93:
 970              		.thumb
 971              		.syntax unified
 972              	.LBE223:
 973              	.LBE222:
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 974              		.loc 1 489 0
 975 0406 B3FA83F3 		clz	r3, r3
 976 040a 5B09     		lsrs	r3, r3, #5
 977 040c 43F00203 		orr	r3, r3, #2
 978 0410 DBB2     		uxtb	r3, r3
 979 0412 022B     		cmp	r3, #2
 980 0414 02D1     		bne	.L56
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 981              		.loc 1 489 0 is_stmt 0 discriminator 4
 982 0416 7C4B     		ldr	r3, .L97
 983 0418 196A     		ldr	r1, [r3, #32]
 984 041a 04E0     		b	.L57
 985              	.L56:
 986              	.LVL94:
 987              	.LBB224:
 988              	.LBB225:
 989              		.loc 2 531 0 is_stmt 1
 990 041c 0223     		movs	r3, #2
 991              		.syntax unified
 992              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 993 041e 93FAA3F3 		rbit r3, r3
 994              	@ 0 "" 2
 995              	.LVL95:
 996              		.thumb
 997              		.syntax unified
 998              	.LBE225:
 999              	.LBE224:
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1000              		.loc 1 489 0
 1001 0422 794B     		ldr	r3, .L97
 1002 0424 596A     		ldr	r1, [r3, #36]
 1003              	.L57:
 1004              	.LVL96:
 1005              	.LBB226:
 1006              	.LBB227:
 1007              		.loc 2 531 0 discriminator 11
 1008 0426 0223     		movs	r3, #2
 1009              		.syntax unified
 1010              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1011 0428 93FAA3F3 		rbit r3, r3
 1012              	@ 0 "" 2
 1013              	.LVL97:
 1014              		.thumb
 1015              		.syntax unified
ARM GAS  /tmp/ccsab2tk.s 			page 37


 1016              	.LBE227:
 1017              	.LBE226:
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1018              		.loc 1 489 0 discriminator 11
 1019 042c B3FA83F3 		clz	r3, r3
 1020 0430 03F01F03 		and	r3, r3, #31
 1021 0434 0122     		movs	r2, #1
 1022 0436 02FA03F3 		lsl	r3, r2, r3
 1023 043a 1942     		tst	r1, r3
 1024 043c D6D0     		beq	.L58
 1025 043e 2CE0     		b	.L59
 1026              	.LVL98:
 1027              	.L54:
 492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
 500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1028              		.loc 1 500 0
 1029 0440 FFF7FEFF 		bl	HAL_GetTick
 1030              	.LVL99:
 1031 0444 0646     		mov	r6, r0
 1032              	.LVL100:
 501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSE is disabled */  
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 1033              		.loc 1 503 0
 1034 0446 07E0     		b	.L60
 1035              	.LVL101:
 1036              	.L63:
 504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 1037              		.loc 1 505 0
 1038 0448 FFF7FEFF 		bl	HAL_GetTick
 1039              	.LVL102:
 1040 044c 801B     		subs	r0, r0, r6
 1041 044e 41F28833 		movw	r3, #5000
 1042 0452 9842     		cmp	r0, r3
 1043 0454 00F2D180 		bhi	.L88
 1044              	.L60:
 1045              	.LVL103:
 1046              	.LBB228:
 1047              	.LBB229:
 1048              		.loc 2 531 0
 1049 0458 0223     		movs	r3, #2
 1050              		.syntax unified
 1051              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1052 045a 93FAA3F2 		rbit r2, r3
 1053              	@ 0 "" 2
 1054              	.LVL104:
 1055              		.thumb
 1056              		.syntax unified
 1057              	.LBE229:
ARM GAS  /tmp/ccsab2tk.s 			page 38


 1058              	.LBE228:
 1059              	.LBB230:
 1060              	.LBB231:
 1061              		.syntax unified
 1062              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1063 045e 93FAA3F3 		rbit r3, r3
 1064              	@ 0 "" 2
 1065              	.LVL105:
 1066              		.thumb
 1067              		.syntax unified
 1068              	.LBE231:
 1069              	.LBE230:
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1070              		.loc 1 503 0
 1071 0462 B3FA83F3 		clz	r3, r3
 1072 0466 5B09     		lsrs	r3, r3, #5
 1073 0468 43F00203 		orr	r3, r3, #2
 1074 046c DBB2     		uxtb	r3, r3
 1075 046e 022B     		cmp	r3, #2
 1076 0470 02D1     		bne	.L61
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1077              		.loc 1 503 0 is_stmt 0 discriminator 4
 1078 0472 654B     		ldr	r3, .L97
 1079 0474 196A     		ldr	r1, [r3, #32]
 1080 0476 04E0     		b	.L62
 1081              	.L61:
 1082              	.LVL106:
 1083              	.LBB232:
 1084              	.LBB233:
 1085              		.loc 2 531 0 is_stmt 1
 1086 0478 0223     		movs	r3, #2
 1087              		.syntax unified
 1088              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1089 047a 93FAA3F3 		rbit r3, r3
 1090              	@ 0 "" 2
 1091              	.LVL107:
 1092              		.thumb
 1093              		.syntax unified
 1094              	.LBE233:
 1095              	.LBE232:
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1096              		.loc 1 503 0
 1097 047e 624B     		ldr	r3, .L97
 1098 0480 596A     		ldr	r1, [r3, #36]
 1099              	.L62:
 1100              	.LVL108:
 1101              	.LBB234:
 1102              	.LBB235:
 1103              		.loc 2 531 0 discriminator 11
 1104 0482 0223     		movs	r3, #2
 1105              		.syntax unified
 1106              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1107 0484 93FAA3F3 		rbit r3, r3
 1108              	@ 0 "" 2
 1109              	.LVL109:
 1110              		.thumb
 1111              		.syntax unified
ARM GAS  /tmp/ccsab2tk.s 			page 39


 1112              	.LBE235:
 1113              	.LBE234:
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1114              		.loc 1 503 0 discriminator 11
 1115 0488 B3FA83F3 		clz	r3, r3
 1116 048c 03F01F03 		and	r3, r3, #31
 1117 0490 0122     		movs	r2, #1
 1118 0492 02FA03F3 		lsl	r3, r2, r3
 1119 0496 1942     		tst	r1, r3
 1120 0498 D6D1     		bne	.L63
 1121              	.L59:
 506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Require to disable power clock if necessary */
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(pwrclkchanged == SET)
 1122              		.loc 1 513 0
 1123 049a 25B1     		cbz	r5, .L45
 514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 1124              		.loc 1 515 0
 1125 049c 5A4A     		ldr	r2, .L97
 1126 049e D369     		ldr	r3, [r2, #28]
 1127 04a0 23F08053 		bic	r3, r3, #268435456
 1128 04a4 D361     		str	r3, [r2, #28]
 1129              	.LVL110:
 1130              	.L45:
 1131              	.LBE218:
 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 1132              		.loc 1 522 0
 1133 04a6 E369     		ldr	r3, [r4, #28]
 1134 04a8 002B     		cmp	r3, #0
 1135 04aa 00F0A880 		beq	.L89
 523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 1136              		.loc 1 525 0
 1137 04ae 564A     		ldr	r2, .L97
 1138 04b0 5268     		ldr	r2, [r2, #4]
 1139 04b2 02F00C02 		and	r2, r2, #12
 1140 04b6 082A     		cmp	r2, #8
 1141 04b8 00F0A380 		beq	.L90
 526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     { 
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 1142              		.loc 1 527 0
 1143 04bc 022B     		cmp	r3, #2
 1144 04be 5DD1     		bne	.L64
 1145              	.LVL111:
ARM GAS  /tmp/ccsab2tk.s 			page 40


 1146              	.LBB236:
 1147              	.LBB237:
 1148              		.loc 2 531 0
 1149 04c0 4FF08073 		mov	r3, #16777216
 1150              		.syntax unified
 1151              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1152 04c4 93FAA3F3 		rbit r3, r3
 1153              	@ 0 "" 2
 1154              	.LVL112:
 1155              		.thumb
 1156              		.syntax unified
 1157              	.LBE237:
 1158              	.LBE236:
 528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Check the parameters */
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if   defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
 534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif
 535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Disable the main PLL. */
 537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 1159              		.loc 1 537 0
 1160 04c8 B3FA83F3 		clz	r3, r3
 1161 04cc 03F18453 		add	r3, r3, #276824064
 1162 04d0 03F58413 		add	r3, r3, #1081344
 1163 04d4 9B00     		lsls	r3, r3, #2
 1164 04d6 0022     		movs	r2, #0
 1165 04d8 1A60     		str	r2, [r3]
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1166              		.loc 1 540 0
 1167 04da FFF7FEFF 		bl	HAL_GetTick
 1168              	.LVL113:
 1169 04de 0546     		mov	r5, r0
 1170              	.LVL114:
 541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 1171              		.loc 1 543 0
 1172 04e0 05E0     		b	.L65
 1173              	.LVL115:
 1174              	.L68:
 544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1175              		.loc 1 545 0
 1176 04e2 FFF7FEFF 		bl	HAL_GetTick
 1177              	.LVL116:
 1178 04e6 401B     		subs	r0, r0, r5
 1179 04e8 0228     		cmp	r0, #2
 1180 04ea 00F29180 		bhi	.L91
 1181              	.L65:
 1182              	.LVL117:
 1183              	.LBB238:
 1184              	.LBB239:
ARM GAS  /tmp/ccsab2tk.s 			page 41


 1185              		.loc 2 531 0
 1186 04ee 4FF00073 		mov	r3, #33554432
 1187              		.syntax unified
 1188              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1189 04f2 93FAA3F3 		rbit r3, r3
 1190              	@ 0 "" 2
 1191              	.LVL118:
 1192              		.thumb
 1193              		.syntax unified
 1194              	.LBE239:
 1195              	.LBE238:
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1196              		.loc 1 543 0
 1197 04f6 444B     		ldr	r3, .L97
 1198 04f8 1968     		ldr	r1, [r3]
 1199              	.LVL119:
 1200              	.LBB240:
 1201              	.LBB241:
 1202              		.loc 2 531 0
 1203 04fa 4FF00073 		mov	r3, #33554432
 1204              		.syntax unified
 1205              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1206 04fe 93FAA3F3 		rbit r3, r3
 1207              	@ 0 "" 2
 1208              	.LVL120:
 1209              		.thumb
 1210              		.syntax unified
 1211              	.LBE241:
 1212              	.LBE240:
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1213              		.loc 1 543 0
 1214 0502 B3FA83F3 		clz	r3, r3
 1215 0506 03F01F03 		and	r3, r3, #31
 1216 050a 0122     		movs	r2, #1
 1217 050c 02FA03F3 		lsl	r3, r2, r3
 1218 0510 1942     		tst	r1, r3
 1219 0512 E6D1     		bne	.L68
 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Configure the main PLL clock source, predivider and multiplication factor. */
 553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLMUL);
 556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #else
 557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Configure the main PLL clock source and multiplication factor. */
 558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 1220              		.loc 1 558 0
 1221 0514 3C48     		ldr	r0, .L97
 1222 0516 4368     		ldr	r3, [r0, #4]
 1223 0518 23F47411 		bic	r1, r3, #3997696
 1224 051c 636A     		ldr	r3, [r4, #36]
 1225 051e 226A     		ldr	r2, [r4, #32]
 1226 0520 1343     		orrs	r3, r3, r2
ARM GAS  /tmp/ccsab2tk.s 			page 42


 1227 0522 0B43     		orrs	r3, r3, r1
 1228 0524 4360     		str	r3, [r0, #4]
 1229              	.LVL121:
 1230              	.LBB242:
 1231              	.LBB243:
 1232              		.loc 2 531 0
 1233 0526 4FF08073 		mov	r3, #16777216
 1234              		.syntax unified
 1235              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1236 052a 93FAA3F3 		rbit r3, r3
 1237              	@ 0 "" 2
 1238              	.LVL122:
 1239              		.thumb
 1240              		.syntax unified
 1241              	.LBE243:
 1242              	.LBE242:
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                            RCC_OscInitStruct->PLL.PLLMUL);
 560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_PREDIV */
 561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Enable the main PLL. */
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 1243              		.loc 1 562 0
 1244 052e B3FA83F3 		clz	r3, r3
 1245 0532 03F18453 		add	r3, r3, #276824064
 1246 0536 03F58413 		add	r3, r3, #1081344
 1247 053a 9B00     		lsls	r3, r3, #2
 1248 053c 0122     		movs	r2, #1
 1249 053e 1A60     		str	r2, [r3]
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1250              		.loc 1 565 0
 1251 0540 FFF7FEFF 		bl	HAL_GetTick
 1252              	.LVL123:
 1253 0544 0446     		mov	r4, r0
 1254              	.LVL124:
 566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till PLL is ready */
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 1255              		.loc 1 568 0
 1256 0546 04E0     		b	.L69
 1257              	.LVL125:
 1258              	.L72:
 569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1259              		.loc 1 570 0
 1260 0548 FFF7FEFF 		bl	HAL_GetTick
 1261              	.LVL126:
 1262 054c 001B     		subs	r0, r0, r4
 1263 054e 0228     		cmp	r0, #2
 1264 0550 60D8     		bhi	.L92
 1265              	.L69:
 1266              	.LVL127:
 1267              	.LBB244:
 1268              	.LBB245:
 1269              		.loc 2 531 0
 1270 0552 4FF00073 		mov	r3, #33554432
 1271              		.syntax unified
ARM GAS  /tmp/ccsab2tk.s 			page 43


 1272              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1273 0556 93FAA3F3 		rbit r3, r3
 1274              	@ 0 "" 2
 1275              	.LVL128:
 1276              		.thumb
 1277              		.syntax unified
 1278              	.LBE245:
 1279              	.LBE244:
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1280              		.loc 1 568 0
 1281 055a 2B4B     		ldr	r3, .L97
 1282 055c 1968     		ldr	r1, [r3]
 1283              	.LVL129:
 1284              	.LBB246:
 1285              	.LBB247:
 1286              		.loc 2 531 0
 1287 055e 4FF00073 		mov	r3, #33554432
 1288              		.syntax unified
 1289              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1290 0562 93FAA3F3 		rbit r3, r3
 1291              	@ 0 "" 2
 1292              	.LVL130:
 1293              		.thumb
 1294              		.syntax unified
 1295              	.LBE247:
 1296              	.LBE246:
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1297              		.loc 1 568 0
 1298 0566 B3FA83F3 		clz	r3, r3
 1299 056a 03F01F03 		and	r3, r3, #31
 1300 056e 0122     		movs	r2, #1
 1301 0570 02FA03F3 		lsl	r3, r2, r3
 1302 0574 1942     		tst	r1, r3
 1303 0576 E7D0     		beq	.L72
 571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Disable the main PLL. */
 579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  
 581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till PLL is disabled */  
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
ARM GAS  /tmp/ccsab2tk.s 			page 44


 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_ERROR;
 597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return HAL_OK;
 1304              		.loc 1 600 0
 1305 0578 0020     		movs	r0, #0
 1306 057a 4EE0     		b	.L10
 1307              	.LVL131:
 1308              	.L64:
 1309              	.LBB248:
 1310              	.LBB249:
 1311              		.loc 2 531 0
 1312 057c 4FF08073 		mov	r3, #16777216
 1313              		.syntax unified
 1314              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1315 0580 93FAA3F3 		rbit r3, r3
 1316              	@ 0 "" 2
 1317              	.LVL132:
 1318              		.thumb
 1319              		.syntax unified
 1320              	.LBE249:
 1321              	.LBE248:
 579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  
 1322              		.loc 1 579 0
 1323 0584 B3FA83F3 		clz	r3, r3
 1324 0588 03F18453 		add	r3, r3, #276824064
 1325 058c 03F58413 		add	r3, r3, #1081344
 1326 0590 9B00     		lsls	r3, r3, #2
 1327 0592 0022     		movs	r2, #0
 1328 0594 1A60     		str	r2, [r3]
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 1329              		.loc 1 582 0
 1330 0596 FFF7FEFF 		bl	HAL_GetTick
 1331              	.LVL133:
 1332 059a 0446     		mov	r4, r0
 1333              	.LVL134:
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1334              		.loc 1 585 0
 1335 059c 04E0     		b	.L73
 1336              	.LVL135:
 1337              	.L76:
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 1338              		.loc 1 587 0
 1339 059e FFF7FEFF 		bl	HAL_GetTick
 1340              	.LVL136:
 1341 05a2 001B     		subs	r0, r0, r4
 1342 05a4 0228     		cmp	r0, #2
 1343 05a6 37D8     		bhi	.L93
 1344              	.L73:
 1345              	.LVL137:
 1346              	.LBB250:
 1347              	.LBB251:
 1348              		.loc 2 531 0
 1349 05a8 4FF00073 		mov	r3, #33554432
ARM GAS  /tmp/ccsab2tk.s 			page 45


 1350              		.syntax unified
 1351              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1352 05ac 93FAA3F3 		rbit r3, r3
 1353              	@ 0 "" 2
 1354              	.LVL138:
 1355              		.thumb
 1356              		.syntax unified
 1357              	.LBE251:
 1358              	.LBE250:
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1359              		.loc 1 585 0
 1360 05b0 154B     		ldr	r3, .L97
 1361 05b2 1968     		ldr	r1, [r3]
 1362              	.LVL139:
 1363              	.LBB252:
 1364              	.LBB253:
 1365              		.loc 2 531 0
 1366 05b4 4FF00073 		mov	r3, #33554432
 1367              		.syntax unified
 1368              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1369 05b8 93FAA3F3 		rbit r3, r3
 1370              	@ 0 "" 2
 1371              	.LVL140:
 1372              		.thumb
 1373              		.syntax unified
 1374              	.LBE253:
 1375              	.LBE252:
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1376              		.loc 1 585 0
 1377 05bc B3FA83F3 		clz	r3, r3
 1378 05c0 03F01F03 		and	r3, r3, #31
 1379 05c4 0122     		movs	r2, #1
 1380 05c6 02FA03F3 		lsl	r3, r2, r3
 1381 05ca 1942     		tst	r1, r3
 1382 05cc E7D1     		bne	.L76
 1383              		.loc 1 600 0
 1384 05ce 0020     		movs	r0, #0
 1385 05d0 23E0     		b	.L10
 1386              	.LVL141:
 1387              	.L77:
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 1388              		.loc 1 296 0
 1389 05d2 0120     		movs	r0, #1
 1390              	.LVL142:
 1391 05d4 21E0     		b	.L10
 1392              	.LVL143:
 1393              	.L78:
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 1394              		.loc 1 320 0
 1395 05d6 0320     		movs	r0, #3
 1396 05d8 1FE0     		b	.L10
 1397              	.L79:
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 1398              		.loc 1 334 0
 1399 05da 0320     		movs	r0, #3
 1400 05dc 1DE0     		b	.L10
 1401              	.LVL144:
ARM GAS  /tmp/ccsab2tk.s 			page 46


 1402              	.L80:
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 1403              		.loc 1 354 0
 1404 05de 0120     		movs	r0, #1
 1405 05e0 1BE0     		b	.L10
 1406              	.LVL145:
 1407              	.L81:
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 1408              		.loc 1 379 0
 1409 05e2 0320     		movs	r0, #3
 1410 05e4 19E0     		b	.L10
 1411              	.L82:
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 1412              		.loc 1 399 0
 1413 05e6 0320     		movs	r0, #3
 1414 05e8 17E0     		b	.L10
 1415              	.L83:
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 1416              		.loc 1 425 0
 1417 05ea 0320     		movs	r0, #3
 1418 05ec 15E0     		b	.L10
 1419              	.L84:
 442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 1420              		.loc 1 442 0
 1421 05ee 0320     		movs	r0, #3
 1422 05f0 13E0     		b	.L10
 1423              	.LVL146:
 1424              	.L86:
 1425              	.LBB254:
 475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 1426              		.loc 1 475 0
 1427 05f2 0320     		movs	r0, #3
 1428 05f4 11E0     		b	.L10
 1429              	.L87:
 493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 1430              		.loc 1 493 0
 1431 05f6 0320     		movs	r0, #3
 1432 05f8 0FE0     		b	.L10
 1433              	.L88:
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 1434              		.loc 1 507 0
 1435 05fa 0320     		movs	r0, #3
 1436 05fc 0DE0     		b	.L10
 1437              	.LVL147:
 1438              	.L89:
 1439              	.LBE254:
 1440              		.loc 1 600 0
 1441 05fe 0020     		movs	r0, #0
 1442 0600 0BE0     		b	.L10
 1443              	.L90:
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 1444              		.loc 1 596 0
 1445 0602 0120     		movs	r0, #1
 1446 0604 09E0     		b	.L10
 1447              	.L98:
 1448 0606 00BF     		.align	2
 1449              	.L97:
ARM GAS  /tmp/ccsab2tk.s 			page 47


 1450 0608 00100240 		.word	1073876992
 1451 060c 00700040 		.word	1073770496
 1452              	.LVL148:
 1453              	.L91:
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 1454              		.loc 1 547 0
 1455 0610 0320     		movs	r0, #3
 1456 0612 02E0     		b	.L10
 1457              	.LVL149:
 1458              	.L92:
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 1459              		.loc 1 572 0
 1460 0614 0320     		movs	r0, #3
 1461 0616 00E0     		b	.L10
 1462              	.L93:
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 1463              		.loc 1 589 0
 1464 0618 0320     		movs	r0, #3
 1465              	.LVL150:
 1466              	.L10:
 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 1467              		.loc 1 601 0
 1468 061a 02B0     		add	sp, sp, #8
 1469              	.LCFI2:
 1470              		.cfi_def_cfa_offset 16
 1471              		@ sp needed
 1472 061c 70BD     		pop	{r4, r5, r6, pc}
 1473              		.cfi_endproc
 1474              	.LFE125:
 1476 061e 00BF     		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1477              		.align	2
 1478              		.global	HAL_RCC_MCOConfig
 1479              		.thumb
 1480              		.thumb_func
 1482              	HAL_RCC_MCOConfig:
 1483              	.LFB127:
 602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB buses clocks according to the specified 
 605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  FLatency FLASH Latency                   
 609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          The value of this parameter depend on device used within the same series
 610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
 611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         and updated by @ref HAL_RCC_GetHCLKFreq() function called within this function
 612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
 613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         start-up from Reset, wake-up from STOP and STANDBY mode, or in case
 615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           
 618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         clock source is ready (clock stable after start-up delay or PLL locked). 
 620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         occur when the clock source will be ready. 
 622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
ARM GAS  /tmp/ccsab2tk.s 			page 48


 623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         currently used as system clock source.
 624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval HAL status
 625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
 632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
 636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   must be correctly programmed according to the frequency of the CPU clock 
 637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     (HCLK) of the device. */
 638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(FLatency > (FLASH->ACR & FLASH_ACR_LATENCY))
 641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_ERROR;
 650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/ 
 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the HSE ready flag */  
 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the PLL ready flag */  
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
ARM GAS  /tmp/ccsab2tk.s 			page 49


 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the HSI ready flag */  
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Get Start Tick */
 695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }      
 727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }    
 728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(FLatency < (FLASH->ACR & FLASH_ACR_LATENCY))
 730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
ARM GAS  /tmp/ccsab2tk.s 			page 50


 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_ERROR;
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }    
 741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/ 
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/ 
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  
 756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CF
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   HAL_InitTick (TICK_INT_PRIORITY);
 761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return HAL_OK;
 763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *  @brief   RCC clocks control functions
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
 772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @verbatim   
 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================
 774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                   ##### Peripheral Control functions #####
 775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================  
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]
 777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks 
 778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     frequencies.
 779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @endverbatim
 781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_MCOPRE)
 785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected
ARM GAS  /tmp/ccsab2tk.s 			page 51


 794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System Clock selected as MCO clock
 795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI         LSI selected as MCO clock
 798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE         LSE selected as MCO clock
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK_DIV2 PLLCLK Divided by 2 selected as MCO clock
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1   no division applied to MCO clock
 804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_2   division by 2 applied to MCO clock
 805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_4   division by 4 applied to MCO clock
 806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_8   division by 8 applied to MCO clock
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_16  division by 16 applied to MCO clock
 808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_32  division by 32 applied to MCO clock
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_64  division by 64 applied to MCO clock
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_128 division by 128 applied to MCO clock
 811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #else
 814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected as MCO clock
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System clock selected as MCO clock
 824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI         LSI selected as MCO clock
 827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE         LSE selected as MCO clock
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK_DIV2 PLLCLK Divided by 2 selected as MCO clock
 829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1 no division applied to MCO clock
 832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif
 835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
 836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 1484              		.loc 1 836 0
 1485              		.cfi_startproc
 1486              		@ args = 0, pretend = 0, frame = 24
 1487              		@ frame_needed = 0, uses_anonymous_args = 0
 1488              	.LVL151:
 1489 0000 30B5     		push	{r4, r5, lr}
 1490              	.LCFI3:
 1491              		.cfi_def_cfa_offset 12
 1492              		.cfi_offset 4, -12
 1493              		.cfi_offset 5, -8
 1494              		.cfi_offset 14, -4
 1495 0002 87B0     		sub	sp, sp, #28
 1496              	.LCFI4:
 1497              		.cfi_def_cfa_offset 40
ARM GAS  /tmp/ccsab2tk.s 			page 52


 1498 0004 0D46     		mov	r5, r1
 837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   GPIO_InitTypeDef gpio;
 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
 841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
 842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
 843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Configure the MCO1 pin in alternate function mode */
 845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Mode      = GPIO_MODE_AF_PP;
 1499              		.loc 1 845 0
 1500 0006 0223     		movs	r3, #2
 1501 0008 0293     		str	r3, [sp, #8]
 846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Speed     = GPIO_SPEED_FREQ_HIGH;
 1502              		.loc 1 846 0
 1503 000a 0323     		movs	r3, #3
 1504 000c 0493     		str	r3, [sp, #16]
 847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Pull      = GPIO_NOPULL;
 1505              		.loc 1 847 0
 1506 000e 0023     		movs	r3, #0
 1507 0010 0393     		str	r3, [sp, #12]
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Pin       = MCO1_PIN;
 1508              		.loc 1 848 0
 1509 0012 4FF48072 		mov	r2, #256
 1510              	.LVL152:
 1511 0016 0192     		str	r2, [sp, #4]
 849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Alternate = GPIO_AF0_MCO;
 1512              		.loc 1 849 0
 1513 0018 0593     		str	r3, [sp, #20]
 1514              	.LBB255:
 850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* MCO1 Clock Enable */
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   MCO1_CLK_ENABLE();
 1515              		.loc 1 852 0
 1516 001a 0B4C     		ldr	r4, .L101
 1517 001c 6369     		ldr	r3, [r4, #20]
 1518 001e 43F40033 		orr	r3, r3, #131072
 1519 0022 6361     		str	r3, [r4, #20]
 1520 0024 6369     		ldr	r3, [r4, #20]
 1521 0026 03F40033 		and	r3, r3, #131072
 1522 002a 0093     		str	r3, [sp]
 1523 002c 009B     		ldr	r3, [sp]
 1524              	.LBE255:
 853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   HAL_GPIO_Init(MCO1_GPIO_PORT, &gpio);
 1525              		.loc 1 854 0
 1526 002e 01A9     		add	r1, sp, #4
 1527              	.LVL153:
 1528 0030 4FF09040 		mov	r0, #1207959552
 1529              	.LVL154:
 1530 0034 FFF7FEFF 		bl	HAL_GPIO_Init
 1531              	.LVL155:
 855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Configure the MCO clock source */
 857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   __HAL_RCC_MCO1_CONFIG(RCC_MCOSource, RCC_MCODiv);
 1532              		.loc 1 857 0
 1533 0038 6368     		ldr	r3, [r4, #4]
ARM GAS  /tmp/ccsab2tk.s 			page 53


 1534 003a 23F0E063 		bic	r3, r3, #117440512
 1535 003e 1D43     		orrs	r5, r5, r3
 1536              	.LVL156:
 1537 0040 6560     		str	r5, [r4, #4]
 858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 1538              		.loc 1 858 0
 1539 0042 07B0     		add	sp, sp, #28
 1540              	.LCFI5:
 1541              		.cfi_def_cfa_offset 12
 1542              		@ sp needed
 1543 0044 30BD     		pop	{r4, r5, pc}
 1544              	.L102:
 1545 0046 00BF     		.align	2
 1546              	.L101:
 1547 0048 00100240 		.word	1073876992
 1548              		.cfi_endproc
 1549              	.LFE127:
 1551              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 1552              		.align	2
 1553              		.global	HAL_RCC_EnableCSS
 1554              		.thumb
 1555              		.thumb_func
 1557              	HAL_RCC_EnableCSS:
 1558              	.LFB128:
 859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
 862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
 863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
 865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to 
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         the Cortex-M4 NMI (Non-Maskable Interrupt) exception vector.  
 867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 1559              		.loc 1 870 0
 1560              		.cfi_startproc
 1561              		@ args = 0, pretend = 0, frame = 0
 1562              		@ frame_needed = 0, uses_anonymous_args = 0
 1563              		@ link register save eliminated.
 1564              	.LVL157:
 1565              	.LBB256:
 1566              	.LBB257:
 1567              		.loc 2 531 0
 1568 0000 4FF40023 		mov	r3, #524288
 1569              		.syntax unified
 1570              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1571 0004 93FAA3F3 		rbit r3, r3
 1572              	@ 0 "" 2
 1573              	.LVL158:
 1574              		.thumb
 1575              		.syntax unified
 1576              	.LBE257:
 1577              	.LBE256:
 871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)ENABLE;
 1578              		.loc 1 871 0
ARM GAS  /tmp/ccsab2tk.s 			page 54


 1579 0008 B3FA83F3 		clz	r3, r3
 1580 000c 03F18453 		add	r3, r3, #276824064
 1581 0010 03F58413 		add	r3, r3, #1081344
 1582 0014 9B00     		lsls	r3, r3, #2
 1583 0016 0122     		movs	r2, #1
 1584 0018 1A60     		str	r2, [r3]
 1585 001a 7047     		bx	lr
 1586              		.cfi_endproc
 1587              	.LFE128:
 1589              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 1590              		.align	2
 1591              		.global	HAL_RCC_DisableCSS
 1592              		.thumb
 1593              		.thumb_func
 1595              	HAL_RCC_DisableCSS:
 1596              	.LFB129:
 872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
 876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
 879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 1597              		.loc 1 879 0
 1598              		.cfi_startproc
 1599              		@ args = 0, pretend = 0, frame = 0
 1600              		@ frame_needed = 0, uses_anonymous_args = 0
 1601              		@ link register save eliminated.
 1602              	.LVL159:
 1603              	.LBB258:
 1604              	.LBB259:
 1605              		.loc 2 531 0
 1606 0000 4FF40023 		mov	r3, #524288
 1607              		.syntax unified
 1608              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1609 0004 93FAA3F3 		rbit r3, r3
 1610              	@ 0 "" 2
 1611              	.LVL160:
 1612              		.thumb
 1613              		.syntax unified
 1614              	.LBE259:
 1615              	.LBE258:
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)DISABLE;
 1616              		.loc 1 880 0
 1617 0008 B3FA83F3 		clz	r3, r3
 1618 000c 03F18453 		add	r3, r3, #276824064
 1619 0010 03F58413 		add	r3, r3, #1081344
 1620 0014 9B00     		lsls	r3, r3, #2
 1621 0016 0022     		movs	r2, #0
 1622 0018 1A60     		str	r2, [r3]
 1623 001a 7047     		bx	lr
 1624              		.cfi_endproc
 1625              	.LFE129:
 1627              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1628              		.align	2
 1629              		.global	HAL_RCC_GetSysClockFreq
ARM GAS  /tmp/ccsab2tk.s 			page 55


 1630              		.thumb
 1631              		.thumb_func
 1633              	HAL_RCC_GetSysClockFreq:
 1634              	.LFB130:
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency     
 885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real 
 886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined 
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         constant and the selected clock source:
 888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns a value based on HSE_VALUE
 890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           divided by PREDIV factor(**)
 891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns a value based on HSE_VALUE
 892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           divided by PREDIV factor(**) or HSI_VALUE(*) multiplied by the PLL factor.
 893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f3xx_hal_conf.h file (default value
 894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *               8 MHz) but the real value may vary depending on the variations
 895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *               in voltage and temperature.
 896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f3xx_hal_conf.h file (default value
 897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                8 MHz), user has to ensure that HSE_VALUE is same as the real
 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
 899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                have wrong result.
 900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                  
 901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
 902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         value for HSE crystal.
 903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           
 904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the 
 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         baud-rate for the communication peripherals or configure other parameters.
 906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           
 907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
 908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         
 910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval SYSCLK frequency
 911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 1635              		.loc 1 913 0
 1636              		.cfi_startproc
 1637              		@ args = 0, pretend = 0, frame = 0
 1638              		@ frame_needed = 0, uses_anonymous_args = 0
 1639              		@ link register save eliminated.
 1640              	.LVL161:
 914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t sysclockfreq = 0U;
 916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   tmpreg = RCC->CFGR;
 1641              		.loc 1 917 0
 1642 0000 164B     		ldr	r3, .L111
 1643 0002 5B68     		ldr	r3, [r3, #4]
 1644              	.LVL162:
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   switch (tmpreg & RCC_CFGR_SWS)
 1645              		.loc 1 920 0
 1646 0004 03F00C02 		and	r2, r3, #12
 1647 0008 082A     		cmp	r2, #8
ARM GAS  /tmp/ccsab2tk.s 			page 56


 1648 000a 25D1     		bne	.L110
 921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
 923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
 925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       break;
 926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
 928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> POSITION_VAL(RCC_CFGR_PLL
 1649              		.loc 1 929 0
 1650 000c 03F47011 		and	r1, r3, #3932160
 1651              	.LVL163:
 1652              	.LBB260:
 1653              	.LBB261:
 1654              		.loc 2 531 0
 1655 0010 4FF47012 		mov	r2, #3932160
 1656              		.syntax unified
 1657              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1658 0014 92FAA2F2 		rbit r2, r2
 1659              	@ 0 "" 2
 1660              	.LVL164:
 1661              		.thumb
 1662              		.syntax unified
 1663              	.LBE261:
 1664              	.LBE260:
 1665              		.loc 1 929 0
 1666 0018 B2FA82F2 		clz	r2, r2
 1667 001c 21FA02F2 		lsr	r2, r1, r2
 1668 0020 0F49     		ldr	r1, .L111+4
 1669 0022 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 1670              	.LVL165:
 930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> POSITION_VAL(RCC_CFG
 1671              		.loc 1 930 0
 1672 0024 0D49     		ldr	r1, .L111
 1673 0026 C96A     		ldr	r1, [r1, #44]
 1674 0028 01F00F00 		and	r0, r1, #15
 1675              	.LVL166:
 1676              	.LBB262:
 1677              	.LBB263:
 1678              		.loc 2 531 0
 1679 002c 0F21     		movs	r1, #15
 1680              		.syntax unified
 1681              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1682 002e 91FAA1F1 		rbit r1, r1
 1683              	@ 0 "" 2
 1684              	.LVL167:
 1685              		.thumb
 1686              		.syntax unified
 1687              	.LBE263:
 1688              	.LBE262:
 1689              		.loc 1 930 0
 1690 0032 B1FA81F1 		clz	r1, r1
 1691 0036 20FA01F1 		lsr	r1, r0, r1
 1692 003a 0A48     		ldr	r0, .L111+8
 1693 003c 405C     		ldrb	r0, [r0, r1]	@ zero_extendqisi2
 1694              	.LVL168:
ARM GAS  /tmp/ccsab2tk.s 			page 57


 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_DIV2)
 932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC) != RCC_PLLSOURCE_HSI)
 1695              		.loc 1 932 0
 1696 003e 13F4803F 		tst	r3, #65536
 1697 0042 05D0     		beq	.L108
 933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
 935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (HSE_VALUE / prediv) * pllmul;
 1698              		.loc 1 935 0
 1699 0044 084B     		ldr	r3, .L111+12
 1700              	.LVL169:
 1701 0046 B3FBF0F0 		udiv	r0, r3, r0
 1702              	.LVL170:
 1703 004a 00FB02F0 		mul	r0, r0, r2
 1704              	.LVL171:
 1705 004e 7047     		bx	lr
 1706              	.LVL172:
 1707              	.L108:
 936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (HSI_VALUE >> 1U) * pllmul;
 1708              		.loc 1 940 0
 1709 0050 0648     		ldr	r0, .L111+16
 1710              	.LVL173:
 1711 0052 00FB02F0 		mul	r0, r0, r2
 1712              	.LVL174:
 1713 0056 7047     		bx	lr
 1714              	.LVL175:
 1715              	.L110:
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       break;
 1716              		.loc 1 924 0
 1717 0058 0348     		ldr	r0, .L111+12
 1718              	.LVL176:
 941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #else
 943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC_HSE_PREDIV) == RCC_CFGR_PLLSRC_HSE_PREDIV)
 944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
 946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (HSE_VALUE / prediv) * pllmul;
 947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/PREDIV * PLLMUL */
 951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (HSI_VALUE / prediv) * pllmul;
 952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_DIV2 */
 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       sysclockfreq = pllclk;
 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       break;
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
 958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     default: /* HSI used as system clock */
 959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       break;
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
ARM GAS  /tmp/ccsab2tk.s 			page 58


 963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return sysclockfreq;
 965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 1719              		.loc 1 965 0
 1720 005a 7047     		bx	lr
 1721              	.L112:
 1722              		.align	2
 1723              	.L111:
 1724 005c 00100240 		.word	1073876992
 1725 0060 00000000 		.word	.LANCHOR0
 1726 0064 00000000 		.word	.LANCHOR1
 1727 0068 00127A00 		.word	8000000
 1728 006c 00093D00 		.word	4000000
 1729              		.cfi_endproc
 1730              	.LFE130:
 1732              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1733              		.align	2
 1734              		.global	HAL_RCC_ClockConfig
 1735              		.thumb
 1736              		.thumb_func
 1738              	HAL_RCC_ClockConfig:
 1739              	.LFB126:
 627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 1740              		.loc 1 627 0
 1741              		.cfi_startproc
 1742              		@ args = 0, pretend = 0, frame = 0
 1743              		@ frame_needed = 0, uses_anonymous_args = 0
 1744              	.LVL177:
 1745 0000 70B5     		push	{r4, r5, r6, lr}
 1746              	.LCFI6:
 1747              		.cfi_def_cfa_offset 16
 1748              		.cfi_offset 4, -16
 1749              		.cfi_offset 5, -12
 1750              		.cfi_offset 6, -8
 1751              		.cfi_offset 14, -4
 1752              	.LVL178:
 640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 1753              		.loc 1 640 0
 1754 0002 744B     		ldr	r3, .L147
 1755 0004 1B68     		ldr	r3, [r3]
 1756 0006 03F00703 		and	r3, r3, #7
 1757 000a 8B42     		cmp	r3, r1
 1758 000c 0BD2     		bcs	.L114
 643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 1759              		.loc 1 643 0
 1760 000e 714A     		ldr	r2, .L147
 1761 0010 1368     		ldr	r3, [r2]
 1762 0012 23F00703 		bic	r3, r3, #7
 1763 0016 0B43     		orrs	r3, r3, r1
 1764 0018 1360     		str	r3, [r2]
 647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 1765              		.loc 1 647 0
 1766 001a 1368     		ldr	r3, [r2]
 1767 001c 03F00703 		and	r3, r3, #7
 1768 0020 9942     		cmp	r1, r3
 1769 0022 40F0C680 		bne	.L137
 1770              	.L114:
ARM GAS  /tmp/ccsab2tk.s 			page 59


 654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 1771              		.loc 1 654 0
 1772 0026 0368     		ldr	r3, [r0]
 1773 0028 13F0020F 		tst	r3, #2
 1774 002c 06D0     		beq	.L116
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 1775              		.loc 1 657 0
 1776 002e 6A4C     		ldr	r4, .L147+4
 1777 0030 6368     		ldr	r3, [r4, #4]
 1778 0032 23F0F002 		bic	r2, r3, #240
 1779 0036 8368     		ldr	r3, [r0, #8]
 1780 0038 1343     		orrs	r3, r3, r2
 1781 003a 6360     		str	r3, [r4, #4]
 1782              	.L116:
 1783 003c 0D46     		mov	r5, r1
 1784 003e 0446     		mov	r4, r0
 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 1785              		.loc 1 661 0
 1786 0040 0368     		ldr	r3, [r0]
 1787 0042 13F0010F 		tst	r3, #1
 1788 0046 75D0     		beq	.L117
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 1789              		.loc 1 666 0
 1790 0048 4268     		ldr	r2, [r0, #4]
 1791 004a 012A     		cmp	r2, #1
 1792 004c 13D1     		bne	.L118
 1793              	.LVL179:
 1794              	.LBB264:
 1795              	.LBB265:
 1796              		.loc 2 531 0
 1797 004e 4FF40033 		mov	r3, #131072
 1798              		.syntax unified
 1799              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1800 0052 93FAA3F3 		rbit r3, r3
 1801              	@ 0 "" 2
 1802              	.LVL180:
 1803              		.thumb
 1804              		.syntax unified
 1805              	.LBE265:
 1806              	.LBE264:
 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1807              		.loc 1 669 0
 1808 0056 604B     		ldr	r3, .L147+4
 1809 0058 1868     		ldr	r0, [r3]
 1810              	.LVL181:
 1811              	.LBB266:
 1812              	.LBB267:
 1813              		.loc 2 531 0
 1814 005a 4FF40033 		mov	r3, #131072
 1815              		.syntax unified
 1816              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1817 005e 93FAA3F3 		rbit r3, r3
 1818              	@ 0 "" 2
 1819              	.LVL182:
 1820              		.thumb
 1821              		.syntax unified
 1822              	.LBE267:
ARM GAS  /tmp/ccsab2tk.s 			page 60


 1823              	.LBE266:
 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1824              		.loc 1 669 0
 1825 0062 B3FA83F3 		clz	r3, r3
 1826 0066 03F01F03 		and	r3, r3, #31
 1827 006a 0121     		movs	r1, #1
 1828              	.LVL183:
 1829 006c 01FA03F3 		lsl	r3, r1, r3
 1830 0070 1842     		tst	r0, r3
 1831 0072 27D1     		bne	.L121
 1832 0074 9FE0     		b	.L138
 1833              	.LVL184:
 1834              	.L118:
 675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 1835              		.loc 1 675 0
 1836 0076 022A     		cmp	r2, #2
 1837 0078 13D1     		bne	.L122
 1838              	.LVL185:
 1839              	.LBB268:
 1840              	.LBB269:
 1841              		.loc 2 531 0
 1842 007a 4FF00073 		mov	r3, #33554432
 1843              		.syntax unified
 1844              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1845 007e 93FAA3F3 		rbit r3, r3
 1846              	@ 0 "" 2
 1847              	.LVL186:
 1848              		.thumb
 1849              		.syntax unified
 1850              	.LBE269:
 1851              	.LBE268:
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1852              		.loc 1 678 0
 1853 0082 554B     		ldr	r3, .L147+4
 1854 0084 1868     		ldr	r0, [r3]
 1855              	.LVL187:
 1856              	.LBB270:
 1857              	.LBB271:
 1858              		.loc 2 531 0
 1859 0086 4FF00073 		mov	r3, #33554432
 1860              		.syntax unified
 1861              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1862 008a 93FAA3F3 		rbit r3, r3
 1863              	@ 0 "" 2
 1864              	.LVL188:
 1865              		.thumb
 1866              		.syntax unified
 1867              	.LBE271:
 1868              	.LBE270:
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1869              		.loc 1 678 0
 1870 008e B3FA83F3 		clz	r3, r3
 1871 0092 03F01F03 		and	r3, r3, #31
 1872 0096 0121     		movs	r1, #1
 1873              	.LVL189:
 1874 0098 01FA03F3 		lsl	r3, r1, r3
 1875 009c 1842     		tst	r0, r3
ARM GAS  /tmp/ccsab2tk.s 			page 61


 1876 009e 11D1     		bne	.L121
 1877 00a0 8BE0     		b	.L139
 1878              	.LVL190:
 1879              	.L122:
 1880              	.LBB272:
 1881              	.LBB273:
 1882              		.loc 2 531 0
 1883 00a2 0223     		movs	r3, #2
 1884              		.syntax unified
 1885              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1886 00a4 93FAA3F3 		rbit r3, r3
 1887              	@ 0 "" 2
 1888              	.LVL191:
 1889              		.thumb
 1890              		.syntax unified
 1891              	.LBE273:
 1892              	.LBE272:
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1893              		.loc 1 687 0
 1894 00a8 4B4B     		ldr	r3, .L147+4
 1895 00aa 1868     		ldr	r0, [r3]
 1896              	.LVL192:
 1897              	.LBB274:
 1898              	.LBB275:
 1899              		.loc 2 531 0
 1900 00ac 0223     		movs	r3, #2
 1901              		.syntax unified
 1902              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1903 00ae 93FAA3F3 		rbit r3, r3
 1904              	@ 0 "" 2
 1905              	.LVL193:
 1906              		.thumb
 1907              		.syntax unified
 1908              	.LBE275:
 1909              	.LBE274:
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1910              		.loc 1 687 0
 1911 00b2 B3FA83F3 		clz	r3, r3
 1912 00b6 03F01F03 		and	r3, r3, #31
 1913 00ba 0121     		movs	r1, #1
 1914              	.LVL194:
 1915 00bc 01FA03F3 		lsl	r3, r1, r3
 1916 00c0 1842     		tst	r0, r3
 1917 00c2 7CD0     		beq	.L140
 1918              	.L121:
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 1919              		.loc 1 692 0
 1920 00c4 4449     		ldr	r1, .L147+4
 1921 00c6 4B68     		ldr	r3, [r1, #4]
 1922 00c8 23F00303 		bic	r3, r3, #3
 1923 00cc 1343     		orrs	r3, r3, r2
 1924 00ce 4B60     		str	r3, [r1, #4]
 695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 1925              		.loc 1 695 0
 1926 00d0 FFF7FEFF 		bl	HAL_GetTick
 1927              	.LVL195:
 1928 00d4 0646     		mov	r6, r0
ARM GAS  /tmp/ccsab2tk.s 			page 62


 1929              	.LVL196:
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 1930              		.loc 1 697 0
 1931 00d6 6368     		ldr	r3, [r4, #4]
 1932 00d8 012B     		cmp	r3, #1
 1933 00da 0ED1     		bne	.L145
 1934 00dc 06E0     		b	.L127
 1935              	.LVL197:
 1936              	.L129:
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1937              		.loc 1 701 0
 1938 00de FFF7FEFF 		bl	HAL_GetTick
 1939              	.LVL198:
 1940 00e2 801B     		subs	r0, r0, r6
 1941 00e4 41F28833 		movw	r3, #5000
 1942 00e8 9842     		cmp	r0, r3
 1943 00ea 6AD8     		bhi	.L141
 1944              	.L127:
 699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1945              		.loc 1 699 0
 1946 00ec 3A4B     		ldr	r3, .L147+4
 1947 00ee 5B68     		ldr	r3, [r3, #4]
 1948 00f0 03F00C03 		and	r3, r3, #12
 1949 00f4 042B     		cmp	r3, #4
 1950 00f6 F2D1     		bne	.L129
 1951 00f8 1CE0     		b	.L117
 1952              	.LVL199:
 1953              	.L145:
 707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 1954              		.loc 1 707 0
 1955 00fa 022B     		cmp	r3, #2
 1956 00fc 15D1     		bne	.L131
 1957 00fe 06E0     		b	.L130
 1958              	.LVL200:
 1959              	.L132:
 711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1960              		.loc 1 711 0
 1961 0100 FFF7FEFF 		bl	HAL_GetTick
 1962              	.LVL201:
 1963 0104 801B     		subs	r0, r0, r6
 1964 0106 41F28833 		movw	r3, #5000
 1965 010a 9842     		cmp	r0, r3
 1966 010c 5BD8     		bhi	.L142
 1967              	.L130:
 709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1968              		.loc 1 709 0
 1969 010e 324B     		ldr	r3, .L147+4
 1970 0110 5B68     		ldr	r3, [r3, #4]
 1971 0112 03F00C03 		and	r3, r3, #12
 1972 0116 082B     		cmp	r3, #8
 1973 0118 F2D1     		bne	.L132
 1974 011a 0BE0     		b	.L117
 1975              	.L133:
 721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1976              		.loc 1 721 0
 1977 011c FFF7FEFF 		bl	HAL_GetTick
 1978              	.LVL202:
ARM GAS  /tmp/ccsab2tk.s 			page 63


 1979 0120 801B     		subs	r0, r0, r6
 1980 0122 41F28833 		movw	r3, #5000
 1981 0126 9842     		cmp	r0, r3
 1982 0128 4FD8     		bhi	.L143
 1983              	.L131:
 719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1984              		.loc 1 719 0
 1985 012a 2B4B     		ldr	r3, .L147+4
 1986 012c 5B68     		ldr	r3, [r3, #4]
 1987 012e 13F00C0F 		tst	r3, #12
 1988 0132 F3D1     		bne	.L133
 1989              	.LVL203:
 1990              	.L117:
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 1991              		.loc 1 729 0
 1992 0134 274B     		ldr	r3, .L147
 1993 0136 1B68     		ldr	r3, [r3]
 1994 0138 03F00703 		and	r3, r3, #7
 1995 013c 9D42     		cmp	r5, r3
 1996 013e 0AD2     		bcs	.L134
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 1997              		.loc 1 732 0
 1998 0140 244A     		ldr	r2, .L147
 1999 0142 1368     		ldr	r3, [r2]
 2000 0144 23F00703 		bic	r3, r3, #7
 2001 0148 2B43     		orrs	r3, r3, r5
 2002 014a 1360     		str	r3, [r2]
 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 2003              		.loc 1 736 0
 2004 014c 1368     		ldr	r3, [r2]
 2005 014e 03F00703 		and	r3, r3, #7
 2006 0152 9D42     		cmp	r5, r3
 2007 0154 3BD1     		bne	.L144
 2008              	.L134:
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 2009              		.loc 1 743 0
 2010 0156 2368     		ldr	r3, [r4]
 2011 0158 13F0040F 		tst	r3, #4
 2012 015c 06D0     		beq	.L135
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2013              		.loc 1 746 0
 2014 015e 1E49     		ldr	r1, .L147+4
 2015 0160 4B68     		ldr	r3, [r1, #4]
 2016 0162 23F4E062 		bic	r2, r3, #1792
 2017 0166 E368     		ldr	r3, [r4, #12]
 2018 0168 1343     		orrs	r3, r3, r2
 2019 016a 4B60     		str	r3, [r1, #4]
 2020              	.L135:
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 2021              		.loc 1 750 0
 2022 016c 2368     		ldr	r3, [r4]
 2023 016e 13F0080F 		tst	r3, #8
 2024 0172 07D0     		beq	.L136
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2025              		.loc 1 753 0
 2026 0174 184A     		ldr	r2, .L147+4
 2027 0176 5368     		ldr	r3, [r2, #4]
ARM GAS  /tmp/ccsab2tk.s 			page 64


 2028 0178 23F46053 		bic	r3, r3, #14336
 2029 017c 2169     		ldr	r1, [r4, #16]
 2030 017e 43EAC103 		orr	r3, r3, r1, lsl #3
 2031 0182 5360     		str	r3, [r2, #4]
 2032              	.L136:
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 2033              		.loc 1 757 0
 2034 0184 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 2035              	.LVL204:
 2036 0188 134B     		ldr	r3, .L147+4
 2037 018a 5B68     		ldr	r3, [r3, #4]
 2038 018c 03F0F002 		and	r2, r3, #240
 2039              	.LVL205:
 2040              	.LBB276:
 2041              	.LBB277:
 2042              		.loc 2 531 0
 2043 0190 F023     		movs	r3, #240
 2044              		.syntax unified
 2045              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2046 0192 93FAA3F3 		rbit r3, r3
 2047              	@ 0 "" 2
 2048              	.LVL206:
 2049              		.thumb
 2050              		.syntax unified
 2051              	.LBE277:
 2052              	.LBE276:
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 2053              		.loc 1 757 0
 2054 0196 B3FA83F3 		clz	r3, r3
 2055 019a 22FA03F3 		lsr	r3, r2, r3
 2056 019e 0F4A     		ldr	r2, .L147+8
 2057 01a0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2058 01a2 D840     		lsrs	r0, r0, r3
 2059 01a4 0E4B     		ldr	r3, .L147+12
 2060 01a6 1860     		str	r0, [r3]
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 2061              		.loc 1 760 0
 2062 01a8 0020     		movs	r0, #0
 2063 01aa FFF7FEFF 		bl	HAL_InitTick
 2064              	.LVL207:
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 2065              		.loc 1 762 0
 2066 01ae 0020     		movs	r0, #0
 2067 01b0 70BD     		pop	{r4, r5, r6, pc}
 2068              	.LVL208:
 2069              	.L137:
 649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 2070              		.loc 1 649 0
 2071 01b2 0120     		movs	r0, #1
 2072              	.LVL209:
 2073 01b4 70BD     		pop	{r4, r5, r6, pc}
 2074              	.LVL210:
 2075              	.L138:
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 2076              		.loc 1 671 0
 2077 01b6 0120     		movs	r0, #1
 2078 01b8 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/ccsab2tk.s 			page 65


 2079              	.LVL211:
 2080              	.L139:
 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 2081              		.loc 1 680 0
 2082 01ba 0120     		movs	r0, #1
 2083 01bc 70BD     		pop	{r4, r5, r6, pc}
 2084              	.LVL212:
 2085              	.L140:
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 2086              		.loc 1 689 0
 2087 01be 0120     		movs	r0, #1
 2088 01c0 70BD     		pop	{r4, r5, r6, pc}
 2089              	.LVL213:
 2090              	.L141:
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 2091              		.loc 1 703 0
 2092 01c2 0320     		movs	r0, #3
 2093 01c4 70BD     		pop	{r4, r5, r6, pc}
 2094              	.LVL214:
 2095              	.L142:
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 2096              		.loc 1 713 0
 2097 01c6 0320     		movs	r0, #3
 2098 01c8 70BD     		pop	{r4, r5, r6, pc}
 2099              	.LVL215:
 2100              	.L143:
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 2101              		.loc 1 723 0
 2102 01ca 0320     		movs	r0, #3
 2103 01cc 70BD     		pop	{r4, r5, r6, pc}
 2104              	.LVL216:
 2105              	.L144:
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 2106              		.loc 1 738 0
 2107 01ce 0120     		movs	r0, #1
 763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 2108              		.loc 1 763 0
 2109 01d0 70BD     		pop	{r4, r5, r6, pc}
 2110              	.LVL217:
 2111              	.L148:
 2112 01d2 00BF     		.align	2
 2113              	.L147:
 2114 01d4 00200240 		.word	1073881088
 2115 01d8 00100240 		.word	1073876992
 2116 01dc 00000000 		.word	AHBPrescTable
 2117 01e0 00000000 		.word	SystemCoreClock
 2118              		.cfi_endproc
 2119              	.LFE126:
 2121              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 2122              		.align	2
 2123              		.global	HAL_RCC_GetHCLKFreq
 2124              		.thumb
 2125              		.thumb_func
 2127              	HAL_RCC_GetHCLKFreq:
 2128              	.LFB131:
 966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
ARM GAS  /tmp/ccsab2tk.s 			page 66


 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency     
 969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
 971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * 
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
 973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         and updated within this function
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval HCLK frequency
 975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
 977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2129              		.loc 1 977 0
 2130              		.cfi_startproc
 2131              		@ args = 0, pretend = 0, frame = 0
 2132              		@ frame_needed = 0, uses_anonymous_args = 0
 2133              		@ link register save eliminated.
 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return SystemCoreClock;
 979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 2134              		.loc 1 979 0
 2135 0000 014B     		ldr	r3, .L150
 2136 0002 1868     		ldr	r0, [r3]
 2137 0004 7047     		bx	lr
 2138              	.L151:
 2139 0006 00BF     		.align	2
 2140              	.L150:
 2141 0008 00000000 		.word	SystemCoreClock
 2142              		.cfi_endproc
 2143              	.LFE131:
 2145              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 2146              		.align	2
 2147              		.global	HAL_RCC_GetPCLK1Freq
 2148              		.thumb
 2149              		.thumb_func
 2151              	HAL_RCC_GetPCLK1Freq:
 2152              	.LFB132:
 980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency     
 983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
 984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
 985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval PCLK1 frequency
 986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
 988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2153              		.loc 1 988 0
 2154              		.cfi_startproc
 2155              		@ args = 0, pretend = 0, frame = 0
 2156              		@ frame_needed = 0, uses_anonymous_args = 0
 2157 0000 08B5     		push	{r3, lr}
 2158              	.LCFI7:
 2159              		.cfi_def_cfa_offset 8
 2160              		.cfi_offset 3, -8
 2161              		.cfi_offset 14, -4
 989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_BIT
 2162              		.loc 1 990 0
 2163 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2164              	.LVL218:
ARM GAS  /tmp/ccsab2tk.s 			page 67


 2165 0006 084B     		ldr	r3, .L154
 2166 0008 5B68     		ldr	r3, [r3, #4]
 2167 000a 03F4E062 		and	r2, r3, #1792
 2168              	.LVL219:
 2169              	.LBB278:
 2170              	.LBB279:
 2171              		.loc 2 531 0
 2172 000e 4FF4E063 		mov	r3, #1792
 2173              		.syntax unified
 2174              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2175 0012 93FAA3F3 		rbit r3, r3
 2176              	@ 0 "" 2
 2177              	.LVL220:
 2178              		.thumb
 2179              		.syntax unified
 2180              	.LBE279:
 2181              	.LBE278:
 2182              		.loc 1 990 0
 2183 0016 B3FA83F3 		clz	r3, r3
 2184 001a 22FA03F3 		lsr	r3, r2, r3
 2185 001e 034A     		ldr	r2, .L154+4
 2186 0020 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }    
 2187              		.loc 1 991 0
 2188 0022 D840     		lsrs	r0, r0, r3
 2189 0024 08BD     		pop	{r3, pc}
 2190              	.L155:
 2191 0026 00BF     		.align	2
 2192              	.L154:
 2193 0028 00100240 		.word	1073876992
 2194 002c 00000000 		.word	APBPrescTable
 2195              		.cfi_endproc
 2196              	.LFE132:
 2198              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 2199              		.align	2
 2200              		.global	HAL_RCC_GetPCLK2Freq
 2201              		.thumb
 2202              		.thumb_func
 2204              	HAL_RCC_GetPCLK2Freq:
 2205              	.LFB133:
 992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the PCLK2 frequency     
 995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
 996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
 997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval PCLK2 frequency
 998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2206              		.loc 1 1000 0
 2207              		.cfi_startproc
 2208              		@ args = 0, pretend = 0, frame = 0
 2209              		@ frame_needed = 0, uses_anonymous_args = 0
 2210 0000 08B5     		push	{r3, lr}
 2211              	.LCFI8:
 2212              		.cfi_def_cfa_offset 8
 2213              		.cfi_offset 3, -8
ARM GAS  /tmp/ccsab2tk.s 			page 68


 2214              		.cfi_offset 14, -4
1001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_BITN
 2215              		.loc 1 1002 0
 2216 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2217              	.LVL221:
 2218 0006 084B     		ldr	r3, .L158
 2219 0008 5B68     		ldr	r3, [r3, #4]
 2220 000a 03F46052 		and	r2, r3, #14336
 2221              	.LVL222:
 2222              	.LBB280:
 2223              	.LBB281:
 2224              		.loc 2 531 0
 2225 000e 4FF46053 		mov	r3, #14336
 2226              		.syntax unified
 2227              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2228 0012 93FAA3F3 		rbit r3, r3
 2229              	@ 0 "" 2
 2230              	.LVL223:
 2231              		.thumb
 2232              		.syntax unified
 2233              	.LBE281:
 2234              	.LBE280:
 2235              		.loc 1 1002 0
 2236 0016 B3FA83F3 		clz	r3, r3
 2237 001a 22FA03F3 		lsr	r3, r2, r3
 2238 001e 034A     		ldr	r2, .L158+4
 2239 0020 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
1003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** } 
 2240              		.loc 1 1003 0
 2241 0022 D840     		lsrs	r0, r0, r3
 2242 0024 08BD     		pop	{r3, pc}
 2243              	.L159:
 2244 0026 00BF     		.align	2
 2245              	.L158:
 2246 0028 00100240 		.word	1073876992
 2247 002c 00000000 		.word	APBPrescTable
 2248              		.cfi_endproc
 2249              	.LFE133:
 2251              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 2252              		.align	2
 2253              		.global	HAL_RCC_GetOscConfig
 2254              		.thumb
 2255              		.thumb_func
 2257              	HAL_RCC_GetOscConfig:
 2258              	.LFB134:
1004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal 
1007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * RCC configuration registers.
1008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that 
1009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * will be configured.
1010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
1011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2259              		.loc 1 1013 0
ARM GAS  /tmp/ccsab2tk.s 			page 69


 2260              		.cfi_startproc
 2261              		@ args = 0, pretend = 0, frame = 0
 2262              		@ frame_needed = 0, uses_anonymous_args = 0
 2263              		@ link register save eliminated.
 2264              	.LVL224:
1014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
1015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
1016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI  \
 2265              		.loc 1 1018 0
 2266 0000 0F23     		movs	r3, #15
 2267 0002 0360     		str	r3, [r0]
1019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                   | RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI;
1020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 2268              		.loc 1 1023 0
 2269 0004 2E4B     		ldr	r3, .L173
 2270 0006 1B68     		ldr	r3, [r3]
 2271 0008 13F4802F 		tst	r3, #262144
 2272 000c 03D0     		beq	.L161
1024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 2273              		.loc 1 1025 0
 2274 000e 4FF4A023 		mov	r3, #327680
 2275 0012 4360     		str	r3, [r0, #4]
 2276 0014 0AE0     		b	.L162
 2277              	.L161:
1026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
 2278              		.loc 1 1027 0
 2279 0016 2A4B     		ldr	r3, .L173
 2280 0018 1B68     		ldr	r3, [r3]
 2281 001a 13F4803F 		tst	r3, #65536
 2282 001e 03D0     		beq	.L163
1028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
 2283              		.loc 1 1029 0
 2284 0020 4FF48033 		mov	r3, #65536
 2285 0024 4360     		str	r3, [r0, #4]
 2286 0026 01E0     		b	.L162
 2287              	.L163:
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
 2288              		.loc 1 1033 0
 2289 0028 0023     		movs	r3, #0
 2290 002a 4360     		str	r3, [r0, #4]
 2291              	.L162:
1034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_DIV2)
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->HSEPredivValue = __HAL_RCC_HSE_GET_PREDIV();
 2292              		.loc 1 1036 0
 2293 002c 244A     		ldr	r2, .L173
ARM GAS  /tmp/ccsab2tk.s 			page 70


 2294 002e D36A     		ldr	r3, [r2, #44]
 2295 0030 03F00F03 		and	r3, r3, #15
 2296 0034 8360     		str	r3, [r0, #8]
1037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
 2297              		.loc 1 1040 0
 2298 0036 1368     		ldr	r3, [r2]
 2299 0038 13F0010F 		tst	r3, #1
 2300 003c 02D0     		beq	.L164
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 2301              		.loc 1 1042 0
 2302 003e 0123     		movs	r3, #1
 2303 0040 0361     		str	r3, [r0, #16]
 2304 0042 01E0     		b	.L165
 2305              	.L164:
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
 2306              		.loc 1 1046 0
 2307 0044 0023     		movs	r3, #0
 2308 0046 0361     		str	r3, [r0, #16]
 2309              	.L165:
1047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR & RCC_CR_HSITRIM) >> POSITION_VAL(RC
 2310              		.loc 1 1049 0
 2311 0048 1D49     		ldr	r1, .L173
 2312 004a 0B68     		ldr	r3, [r1]
 2313 004c 03F0F802 		and	r2, r3, #248
 2314              	.LVL225:
 2315              	.LBB282:
 2316              	.LBB283:
 2317              		.loc 2 531 0
 2318 0050 F823     		movs	r3, #248
 2319              		.syntax unified
 2320              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2321 0052 93FAA3F3 		rbit r3, r3
 2322              	@ 0 "" 2
 2323              	.LVL226:
 2324              		.thumb
 2325              		.syntax unified
 2326              	.LBE283:
 2327              	.LBE282:
 2328              		.loc 1 1049 0
 2329 0056 B3FA83F3 		clz	r3, r3
 2330 005a 22FA03F3 		lsr	r3, r2, r3
 2331 005e 4361     		str	r3, [r0, #20]
1050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 2332              		.loc 1 1052 0
 2333 0060 0B6A     		ldr	r3, [r1, #32]
 2334 0062 13F0040F 		tst	r3, #4
ARM GAS  /tmp/ccsab2tk.s 			page 71


 2335 0066 02D0     		beq	.L166
1053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 2336              		.loc 1 1054 0
 2337 0068 0523     		movs	r3, #5
 2338 006a C360     		str	r3, [r0, #12]
 2339 006c 09E0     		b	.L167
 2340              	.L166:
1055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
 2341              		.loc 1 1056 0
 2342 006e 144B     		ldr	r3, .L173
 2343 0070 1B6A     		ldr	r3, [r3, #32]
 2344 0072 13F0010F 		tst	r3, #1
 2345 0076 02D0     		beq	.L168
1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
 2346              		.loc 1 1058 0
 2347 0078 0123     		movs	r3, #1
 2348 007a C360     		str	r3, [r0, #12]
 2349 007c 01E0     		b	.L167
 2350              	.L168:
1059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
 2351              		.loc 1 1062 0
 2352 007e 0023     		movs	r3, #0
 2353 0080 C360     		str	r3, [r0, #12]
 2354              	.L167:
1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
 2355              		.loc 1 1066 0
 2356 0082 0F4B     		ldr	r3, .L173
 2357 0084 5B6A     		ldr	r3, [r3, #36]
 2358 0086 13F0010F 		tst	r3, #1
 2359 008a 02D0     		beq	.L169
1067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 2360              		.loc 1 1068 0
 2361 008c 0123     		movs	r3, #1
 2362 008e 8361     		str	r3, [r0, #24]
 2363 0090 01E0     		b	.L170
 2364              	.L169:
1069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
 2365              		.loc 1 1072 0
 2366 0092 0023     		movs	r3, #0
 2367 0094 8361     		str	r3, [r0, #24]
 2368              	.L170:
1073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
ARM GAS  /tmp/ccsab2tk.s 			page 72


1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
 2369              		.loc 1 1077 0
 2370 0096 0A4B     		ldr	r3, .L173
 2371 0098 1B68     		ldr	r3, [r3]
 2372 009a 13F0807F 		tst	r3, #16777216
 2373 009e 02D0     		beq	.L171
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 2374              		.loc 1 1079 0
 2375 00a0 0223     		movs	r3, #2
 2376 00a2 C361     		str	r3, [r0, #28]
 2377 00a4 01E0     		b	.L172
 2378              	.L171:
1080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 2379              		.loc 1 1083 0
 2380 00a6 0123     		movs	r3, #1
 2381 00a8 C361     		str	r3, [r0, #28]
 2382              	.L172:
1084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLSRC);
 2383              		.loc 1 1085 0
 2384 00aa 054A     		ldr	r2, .L173
 2385 00ac 5368     		ldr	r3, [r2, #4]
 2386 00ae 03F48033 		and	r3, r3, #65536
 2387 00b2 0362     		str	r3, [r0, #32]
1086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLMUL = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLMUL);
 2388              		.loc 1 1086 0
 2389 00b4 5368     		ldr	r3, [r2, #4]
 2390 00b6 03F47013 		and	r3, r3, #3932160
 2391 00ba 4362     		str	r3, [r0, #36]
 2392 00bc 7047     		bx	lr
 2393              	.L174:
 2394 00be 00BF     		.align	2
 2395              	.L173:
 2396 00c0 00100240 		.word	1073876992
 2397              		.cfi_endproc
 2398              	.LFE134:
 2400              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 2401              		.align	2
 2402              		.global	HAL_RCC_GetClockConfig
 2403              		.thumb
 2404              		.thumb_func
 2406              	HAL_RCC_GetClockConfig:
 2407              	.LFB135:
1087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PREDIV = (uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV);
1089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_PREDIV */
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Get the RCC_ClkInitStruct according to the internal 
1094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * RCC configuration registers.
1095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that 
ARM GAS  /tmp/ccsab2tk.s 			page 73


1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * contains the current clock configuration.
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2408              		.loc 1 1101 0
 2409              		.cfi_startproc
 2410              		@ args = 0, pretend = 0, frame = 0
 2411              		@ frame_needed = 0, uses_anonymous_args = 0
 2412              		@ link register save eliminated.
 2413              	.LVL227:
1102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
1103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(pFLatency != NULL);
1105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 2414              		.loc 1 1107 0
 2415 0000 0F23     		movs	r3, #15
 2416 0002 0360     		str	r3, [r0]
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/ 
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 2417              		.loc 1 1110 0
 2418 0004 0B4B     		ldr	r3, .L176
 2419 0006 5A68     		ldr	r2, [r3, #4]
 2420 0008 02F00302 		and	r2, r2, #3
 2421 000c 4260     		str	r2, [r0, #4]
1111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/ 
1113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE); 
 2422              		.loc 1 1113 0
 2423 000e 5A68     		ldr	r2, [r3, #4]
 2424 0010 02F0F002 		and	r2, r2, #240
 2425 0014 8260     		str	r2, [r0, #8]
1114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/ 
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);   
 2426              		.loc 1 1116 0
 2427 0016 5A68     		ldr	r2, [r3, #4]
 2428 0018 02F4E062 		and	r2, r2, #1792
 2429 001c C260     		str	r2, [r0, #12]
1117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/ 
1119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 2430              		.loc 1 1119 0
 2431 001e 5B68     		ldr	r3, [r3, #4]
 2432 0020 DB08     		lsrs	r3, r3, #3
 2433 0022 03F4E063 		and	r3, r3, #1792
 2434 0026 0361     		str	r3, [r0, #16]
1120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/   
1122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY); 
 2435              		.loc 1 1122 0
 2436 0028 034B     		ldr	r3, .L176+4
 2437 002a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccsab2tk.s 			page 74


 2438 002c 03F00703 		and	r3, r3, #7
 2439 0030 0B60     		str	r3, [r1]
 2440 0032 7047     		bx	lr
 2441              	.L177:
 2442              		.align	2
 2443              	.L176:
 2444 0034 00100240 		.word	1073876992
 2445 0038 00200240 		.word	1073881088
 2446              		.cfi_endproc
 2447              	.LFE135:
 2449              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 2450              		.align	2
 2451              		.weak	HAL_RCC_CSSCallback
 2452              		.thumb
 2453              		.thumb_func
 2455              	HAL_RCC_CSSCallback:
 2456              	.LFB137:
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
1124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
1129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
1132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
1137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
1140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval none
1146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2457              		.loc 1 1148 0
 2458              		.cfi_startproc
 2459              		@ args = 0, pretend = 0, frame = 0
 2460              		@ frame_needed = 0, uses_anonymous_args = 0
 2461              		@ link register save eliminated.
 2462 0000 7047     		bx	lr
 2463              		.cfi_endproc
 2464              	.LFE137:
 2466 0002 00BF     		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 2467              		.align	2
 2468              		.global	HAL_RCC_NMI_IRQHandler
 2469              		.thumb
 2470              		.thumb_func
 2472              	HAL_RCC_NMI_IRQHandler:
ARM GAS  /tmp/ccsab2tk.s 			page 75


 2473              	.LFB136:
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
 2474              		.loc 1 1131 0
 2475              		.cfi_startproc
 2476              		@ args = 0, pretend = 0, frame = 0
 2477              		@ frame_needed = 0, uses_anonymous_args = 0
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
 2478              		.loc 1 1131 0
 2479 0000 08B5     		push	{r3, lr}
 2480              	.LCFI9:
 2481              		.cfi_def_cfa_offset 8
 2482              		.cfi_offset 3, -8
 2483              		.cfi_offset 14, -4
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 2484              		.loc 1 1133 0
 2485 0002 054B     		ldr	r3, .L182
 2486 0004 9B68     		ldr	r3, [r3, #8]
 2487 0006 13F0800F 		tst	r3, #128
 2488 000a 04D0     		beq	.L179
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 2489              		.loc 1 1136 0
 2490 000c FFF7FEFF 		bl	HAL_RCC_CSSCallback
 2491              	.LVL228:
1139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2492              		.loc 1 1139 0
 2493 0010 8022     		movs	r2, #128
 2494 0012 024B     		ldr	r3, .L182+4
 2495 0014 1A70     		strb	r2, [r3]
 2496              	.L179:
 2497 0016 08BD     		pop	{r3, pc}
 2498              	.L183:
 2499              		.align	2
 2500              	.L182:
 2501 0018 00100240 		.word	1073876992
 2502 001c 0A100240 		.word	1073877002
 2503              		.cfi_endproc
 2504              	.LFE136:
 2506              		.global	aPredivFactorTable
 2507              		.global	aPLLMULFactorTable
 2508              		.section	.rodata.aPredivFactorTable,"a",%progbits
 2509              		.align	2
 2510              		.set	.LANCHOR1,. + 0
 2513              	aPredivFactorTable:
 2514 0000 01       		.byte	1
 2515 0001 02       		.byte	2
 2516 0002 03       		.byte	3
 2517 0003 04       		.byte	4
 2518 0004 05       		.byte	5
 2519 0005 06       		.byte	6
 2520 0006 07       		.byte	7
 2521 0007 08       		.byte	8
 2522 0008 09       		.byte	9
 2523 0009 0A       		.byte	10
 2524 000a 0B       		.byte	11
 2525 000b 0C       		.byte	12
 2526 000c 0D       		.byte	13
 2527 000d 0E       		.byte	14
ARM GAS  /tmp/ccsab2tk.s 			page 76


 2528 000e 0F       		.byte	15
 2529 000f 10       		.byte	16
 2530              		.section	.rodata.aPLLMULFactorTable,"a",%progbits
 2531              		.align	2
 2532              		.set	.LANCHOR0,. + 0
 2535              	aPLLMULFactorTable:
 2536 0000 02       		.byte	2
 2537 0001 03       		.byte	3
 2538 0002 04       		.byte	4
 2539 0003 05       		.byte	5
 2540 0004 06       		.byte	6
 2541 0005 07       		.byte	7
 2542 0006 08       		.byte	8
 2543 0007 09       		.byte	9
 2544 0008 0A       		.byte	10
 2545 0009 0B       		.byte	11
 2546 000a 0C       		.byte	12
 2547 000b 0D       		.byte	13
 2548 000c 0E       		.byte	14
 2549 000d 0F       		.byte	15
 2550 000e 10       		.byte	16
 2551 000f 10       		.byte	16
 2552              		.text
 2553              	.Letext0:
 2554              		.file 3 "/opt/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_types.h"
 2555              		.file 4 "/opt/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 2556              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xc.h"
 2557              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 2558              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 2559              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 2560              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 2561              		.file 10 "Drivers/CMSIS/Include/core_cm4.h"
 2562              		.file 11 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 2563              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  /tmp/ccsab2tk.s 			page 77


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f3xx_hal_rcc.c
     /tmp/ccsab2tk.s:22     .text.HAL_RCC_DeInit:00000000 $t
     /tmp/ccsab2tk.s:27     .text.HAL_RCC_DeInit:00000000 HAL_RCC_DeInit
     /tmp/ccsab2tk.s:71     .text.HAL_RCC_DeInit:00000038 $d
     /tmp/ccsab2tk.s:79     .text.HAL_RCC_OscConfig:00000000 $t
     /tmp/ccsab2tk.s:84     .text.HAL_RCC_OscConfig:00000000 HAL_RCC_OscConfig
     /tmp/ccsab2tk.s:746    .text.HAL_RCC_OscConfig:000002ec $d
     /tmp/ccsab2tk.s:751    .text.HAL_RCC_OscConfig:000002f4 $t
     /tmp/ccsab2tk.s:1450   .text.HAL_RCC_OscConfig:00000608 $d
     /tmp/ccsab2tk.s:1455   .text.HAL_RCC_OscConfig:00000610 $t
     /tmp/ccsab2tk.s:1477   .text.HAL_RCC_MCOConfig:00000000 $t
     /tmp/ccsab2tk.s:1482   .text.HAL_RCC_MCOConfig:00000000 HAL_RCC_MCOConfig
     /tmp/ccsab2tk.s:1547   .text.HAL_RCC_MCOConfig:00000048 $d
     /tmp/ccsab2tk.s:1552   .text.HAL_RCC_EnableCSS:00000000 $t
     /tmp/ccsab2tk.s:1557   .text.HAL_RCC_EnableCSS:00000000 HAL_RCC_EnableCSS
     /tmp/ccsab2tk.s:1590   .text.HAL_RCC_DisableCSS:00000000 $t
     /tmp/ccsab2tk.s:1595   .text.HAL_RCC_DisableCSS:00000000 HAL_RCC_DisableCSS
     /tmp/ccsab2tk.s:1628   .text.HAL_RCC_GetSysClockFreq:00000000 $t
     /tmp/ccsab2tk.s:1633   .text.HAL_RCC_GetSysClockFreq:00000000 HAL_RCC_GetSysClockFreq
     /tmp/ccsab2tk.s:1724   .text.HAL_RCC_GetSysClockFreq:0000005c $d
     /tmp/ccsab2tk.s:1733   .text.HAL_RCC_ClockConfig:00000000 $t
     /tmp/ccsab2tk.s:1738   .text.HAL_RCC_ClockConfig:00000000 HAL_RCC_ClockConfig
     /tmp/ccsab2tk.s:2114   .text.HAL_RCC_ClockConfig:000001d4 $d
     /tmp/ccsab2tk.s:2122   .text.HAL_RCC_GetHCLKFreq:00000000 $t
     /tmp/ccsab2tk.s:2127   .text.HAL_RCC_GetHCLKFreq:00000000 HAL_RCC_GetHCLKFreq
     /tmp/ccsab2tk.s:2141   .text.HAL_RCC_GetHCLKFreq:00000008 $d
     /tmp/ccsab2tk.s:2146   .text.HAL_RCC_GetPCLK1Freq:00000000 $t
     /tmp/ccsab2tk.s:2151   .text.HAL_RCC_GetPCLK1Freq:00000000 HAL_RCC_GetPCLK1Freq
     /tmp/ccsab2tk.s:2193   .text.HAL_RCC_GetPCLK1Freq:00000028 $d
     /tmp/ccsab2tk.s:2199   .text.HAL_RCC_GetPCLK2Freq:00000000 $t
     /tmp/ccsab2tk.s:2204   .text.HAL_RCC_GetPCLK2Freq:00000000 HAL_RCC_GetPCLK2Freq
     /tmp/ccsab2tk.s:2246   .text.HAL_RCC_GetPCLK2Freq:00000028 $d
     /tmp/ccsab2tk.s:2252   .text.HAL_RCC_GetOscConfig:00000000 $t
     /tmp/ccsab2tk.s:2257   .text.HAL_RCC_GetOscConfig:00000000 HAL_RCC_GetOscConfig
     /tmp/ccsab2tk.s:2396   .text.HAL_RCC_GetOscConfig:000000c0 $d
     /tmp/ccsab2tk.s:2401   .text.HAL_RCC_GetClockConfig:00000000 $t
     /tmp/ccsab2tk.s:2406   .text.HAL_RCC_GetClockConfig:00000000 HAL_RCC_GetClockConfig
     /tmp/ccsab2tk.s:2444   .text.HAL_RCC_GetClockConfig:00000034 $d
     /tmp/ccsab2tk.s:2450   .text.HAL_RCC_CSSCallback:00000000 $t
     /tmp/ccsab2tk.s:2455   .text.HAL_RCC_CSSCallback:00000000 HAL_RCC_CSSCallback
     /tmp/ccsab2tk.s:2467   .text.HAL_RCC_NMI_IRQHandler:00000000 $t
     /tmp/ccsab2tk.s:2472   .text.HAL_RCC_NMI_IRQHandler:00000000 HAL_RCC_NMI_IRQHandler
     /tmp/ccsab2tk.s:2501   .text.HAL_RCC_NMI_IRQHandler:00000018 $d
     /tmp/ccsab2tk.s:2513   .rodata.aPredivFactorTable:00000000 aPredivFactorTable
     /tmp/ccsab2tk.s:2535   .rodata.aPLLMULFactorTable:00000000 aPLLMULFactorTable
     /tmp/ccsab2tk.s:2509   .rodata.aPredivFactorTable:00000000 $d
     /tmp/ccsab2tk.s:2531   .rodata.aPLLMULFactorTable:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_GPIO_Init
HAL_InitTick
AHBPrescTable
APBPrescTable
ARM GAS  /tmp/ccsab2tk.s 			page 78


